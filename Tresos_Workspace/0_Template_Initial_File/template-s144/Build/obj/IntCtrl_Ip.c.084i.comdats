IntCtrl_Ip_ClearPending (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_ClearPendingPrivileged (eIrqNumber_2(D));
  return;

}


IntCtrl_Ip_GetPriority (IRQn_Type eIrqNumber)
{
  uint8 D.6129;
  uint8 _4;

  <bb 2> :
  _4 = IntCtrl_Ip_GetPriorityPrivileged (eIrqNumber_2(D));

  <bb 3> :
<L0>:
  return _4;

}


IntCtrl_Ip_SetPriority (IRQn_Type eIrqNumber, uint8 u8Priority)
{
  <bb 2> :
  IntCtrl_Ip_SetPriorityPrivileged (eIrqNumber_2(D), u8Priority_3(D));
  return;

}


IntCtrl_Ip_DisableIrq (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_DisableIrqPrivileged (eIrqNumber_2(D));
  return;

}


IntCtrl_Ip_EnableIrq (IRQn_Type eIrqNumber)
{
  <bb 2> :
  IntCtrl_Ip_EnableIrqPrivileged (eIrqNumber_2(D));
  return;

}


IntCtrl_Ip_InstallHandler (IRQn_Type eIrqNumber, void (*IntCtrl_Ip_IrqHandlerType) (void) pfNewHandler, void (*IntCtrl_Ip_IrqHandlerType) (void) * const pfOldHandler)
{
  <bb 2> :
  IntCtrl_Ip_InstallHandlerPrivileged (eIrqNumber_2(D), pfNewHandler_3(D), pfOldHandler_4(D));
  return;

}


IntCtrl_Ip_Init (const struct IntCtrl_Ip_CtrlConfigType * pIntCtrlCtrlConfig)
{
  uint32 irqIdx;
  IntCtrl_Ip_StatusType D.6127;
  const struct IntCtrl_Ip_IrqConfigType * _1;
  long unsigned int _2;
  const struct IntCtrl_Ip_IrqConfigType * _3;
  <unnamed type> _4;
  const struct IntCtrl_Ip_IrqConfigType * _5;
  long unsigned int _6;
  const struct IntCtrl_Ip_IrqConfigType * _7;
  <unnamed type> _8;
  const struct IntCtrl_Ip_IrqConfigType * _9;
  long unsigned int _10;
  const struct IntCtrl_Ip_IrqConfigType * _11;
  unsigned char _12;
  const struct IntCtrl_Ip_IrqConfigType * _13;
  long unsigned int _14;
  const struct IntCtrl_Ip_IrqConfigType * _15;
  <unnamed type> _16;
  const struct IntCtrl_Ip_IrqConfigType * _17;
  long unsigned int _18;
  const struct IntCtrl_Ip_IrqConfigType * _19;
  void (*<T625>) (void) _20;
  const struct IntCtrl_Ip_IrqConfigType * _21;
  long unsigned int _22;
  const struct IntCtrl_Ip_IrqConfigType * _23;
  _Bool _24;
  const struct IntCtrl_Ip_IrqConfigType * _25;
  long unsigned int _26;
  const struct IntCtrl_Ip_IrqConfigType * _27;
  <unnamed type> _28;
  const struct IntCtrl_Ip_IrqConfigType * _29;
  long unsigned int _30;
  const struct IntCtrl_Ip_IrqConfigType * _31;
  <unnamed type> _32;
  long unsigned int _33;
  IntCtrl_Ip_StatusType _40;

  <bb 2> :
  irqIdx_37 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _2 = irqIdx_34 * 12;
  _3 = _1 + _2;
  _4 = _3->eIrqNumber;
  IntCtrl_Ip_ClearPending (_4);
  _5 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _6 = irqIdx_34 * 12;
  _7 = _5 + _6;
  _8 = _7->eIrqNumber;
  _9 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _10 = irqIdx_34 * 12;
  _11 = _9 + _10;
  _12 = _11->u8IrqPriority;
  IntCtrl_Ip_SetPriority (_8, _12);
  _13 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _14 = irqIdx_34 * 12;
  _15 = _13 + _14;
  _16 = _15->eIrqNumber;
  _17 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _18 = irqIdx_34 * 12;
  _19 = _17 + _18;
  _20 = _19->pfHandler;
  IntCtrl_Ip_InstallHandler (_16, _20, 0B);
  _21 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _22 = irqIdx_34 * 12;
  _23 = _21 + _22;
  _24 = _23->bIrqEnabled;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _25 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _26 = irqIdx_34 * 12;
  _27 = _25 + _26;
  _28 = _27->eIrqNumber;
  IntCtrl_Ip_EnableIrq (_28);
  goto <bb 6>; [INV]

  <bb 5> :
  _29 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _30 = irqIdx_34 * 12;
  _31 = _29 + _30;
  _32 = _31->eIrqNumber;
  IntCtrl_Ip_DisableIrq (_32);

  <bb 6> :
  irqIdx_46 = irqIdx_34 + 1;

  <bb 7> :
  # irqIdx_34 = PHI <irqIdx_37(2), irqIdx_46(6)>
  _33 = pIntCtrlCtrlConfig_39(D)->u32ConfigIrqCount;
  if (irqIdx_34 < _33)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _40 = 0;

  <bb 9> :
<L6>:
  return _40;

}


IntCtrl_Ip_ClearPendingPrivileged (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.8_1;
  long unsigned int _2;
  struct S32_NVIC_Type * _3;
  long unsigned int eIrqNumber.9_4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  eIrqNumber.8_1 = (long unsigned int) eIrqNumber_7(D);
  _2 = eIrqNumber.8_1 & 31;
  _3 = 3758153984B;
  eIrqNumber.9_4 = (long unsigned int) eIrqNumber_7(D);
  _5 = eIrqNumber.9_4 >> 5;
  _6 = 1 << _2;
  _3->ICPR[_5] ={v} _6;
  return;

}


IntCtrl_Ip_GetPriorityPrivileged (IRQn_Type eIrqNumber)
{
  uint8 shift;
  uint8 priority;
  uint8 D.6122;
  struct S32_NVIC_Type * _1;
  long unsigned int eIrqNumber.7_2;
  unsigned char _3;
  int _4;
  int _5;
  int _6;
  uint8 _11;

  <bb 2> :
  shift_7 = 4;
  _1 = 3758153984B;
  eIrqNumber.7_2 = (long unsigned int) eIrqNumber_8(D);
  _3 ={v} _1->IP[eIrqNumber.7_2];
  _4 = (int) _3;
  _5 = (int) shift_7;
  _6 = _4 >> _5;
  priority_10 = (uint8) _6;
  _11 = priority_10;

  <bb 3> :
<L0>:
  return _11;

}


IntCtrl_Ip_SetPriorityPrivileged (IRQn_Type eIrqNumber, uint8 u8Priority)
{
  uint8 shift;
  long unsigned int _1;
  int _2;
  long unsigned int _3;
  struct S32_NVIC_Type * _4;
  long unsigned int eIrqNumber.6_5;
  unsigned char _6;

  <bb 2> :
  shift_7 = 4;
  _1 = (long unsigned int) u8Priority_8(D);
  _2 = (int) shift_7;
  _3 = _1 << _2;
  _4 = 3758153984B;
  eIrqNumber.6_5 = (long unsigned int) eIrqNumber_9(D);
  _6 = (unsigned char) _3;
  _4->IP[eIrqNumber.6_5] ={v} _6;
  return;

}


IntCtrl_Ip_DisableIrqPrivileged (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.4_1;
  long unsigned int _2;
  struct S32_NVIC_Type * _3;
  long unsigned int eIrqNumber.5_4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  eIrqNumber.4_1 = (long unsigned int) eIrqNumber_7(D);
  _2 = eIrqNumber.4_1 & 31;
  _3 = 3758153984B;
  eIrqNumber.5_4 = (long unsigned int) eIrqNumber_7(D);
  _5 = eIrqNumber.5_4 >> 5;
  _6 = 1 << _2;
  _3->ICER[_5] ={v} _6;
  return;

}


IntCtrl_Ip_EnableIrqPrivileged (IRQn_Type eIrqNumber)
{
  long unsigned int eIrqNumber.2_1;
  long unsigned int _2;
  struct S32_NVIC_Type * _3;
  long unsigned int eIrqNumber.3_4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> :
  eIrqNumber.2_1 = (long unsigned int) eIrqNumber_7(D);
  _2 = eIrqNumber.2_1 & 31;
  _3 = 3758153984B;
  eIrqNumber.3_4 = (long unsigned int) eIrqNumber_7(D);
  _5 = eIrqNumber.3_4 >> 5;
  _6 = 1 << _2;
  _3->ISER[_5] ={v} _6;
  return;

}


IntCtrl_Ip_InstallHandlerPrivileged (IRQn_Type eIrqNumber, void (*IntCtrl_Ip_IrqHandlerType) (void) pfNewHandler, void (*IntCtrl_Ip_IrqHandlerType) (void) * const pfOldHandler)
{
  void (*IntCtrl_Ip_IrqHandlerType) (void) * pVectorRam;
  struct S32_SCB_Type * _1;
  long unsigned int _2;
  sizetype eIrqNumber.0_3;
  sizetype _4;
  sizetype _5;
  void (*IntCtrl_Ip_IrqHandlerType) (void) * _6;
  void (*<T625>) (void) _7;
  sizetype eIrqNumber.1_8;
  sizetype _9;
  sizetype _10;
  void (*IntCtrl_Ip_IrqHandlerType) (void) * _11;

  <bb 2> :
  _1 = 3758153728B;
  _2 ={v} _1->VTOR;
  pVectorRam_14 = (void (*IntCtrl_Ip_IrqHandlerType) (void) *) _2;
  if (pfOldHandler_15(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  eIrqNumber.0_3 = (sizetype) eIrqNumber_16(D);
  _4 = eIrqNumber.0_3 + 16;
  _5 = _4 * 4;
  _6 = pVectorRam_14 + _5;
  _7 = *_6;
  *pfOldHandler_15(D) = _7;

  <bb 4> :
  eIrqNumber.1_8 = (sizetype) eIrqNumber_16(D);
  _9 = eIrqNumber.1_8 + 16;
  _10 = _9 * 4;
  _11 = pVectorRam_14 + _10;
  *_11 = pfNewHandler_18(D);
  __asm__ __volatile__(" ISB");
  __asm__ __volatile__(" DSB");
  return;

}


