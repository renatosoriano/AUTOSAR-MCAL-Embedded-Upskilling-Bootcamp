
Marking local functions:


Marking externally visible functions: Clock_Ip_EnableSpll_TrustedCall/11 Clock_Ip_DisableSpll_TrustedCall/10 Clock_Ip_SetSpll_TrustedCall/9 Clock_Ip_ResetSpll_TrustedCall/8


Marking externally visible variables: Clock_Ip_axPllCallbacks/12


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Clock_Ip_ReportClockErrors/15 (Clock_Ip_ReportClockErrors) @0db45540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_TimeoutExpired/14 (Clock_Ip_TimeoutExpired) @0db45460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_StartTimeout/13 (Clock_Ip_StartTimeout) @0db45380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_axPllCallbacks/12 (Clock_Ip_axPllCallbacks) @0db387e0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyComplete/1 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyDisable/2 (addr) Clock_Ip_ResetSpll/3 (addr) Clock_Ip_SetSpll/4 (addr) Clock_Ip_CompleteSpll/5 (addr) Clock_Ip_EnableSpll/7 (addr) Clock_Ip_DisableSpll/6 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_EnableSpll_TrustedCall/11 (Clock_Ip_EnableSpll_TrustedCall) @0db43b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableSpll/7 
  Calls: 
Clock_Ip_DisableSpll_TrustedCall/10 (Clock_Ip_DisableSpll_TrustedCall) @0db437e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableSpll/6 
  Calls: 
Clock_Ip_SetSpll_TrustedCall/9 (Clock_Ip_SetSpll_TrustedCall) @0db43540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetSpll/4 
  Calls: 
Clock_Ip_ResetSpll_TrustedCall/8 (Clock_Ip_ResetSpll_TrustedCall) @0db3ab60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ResetSpll/3 
  Calls: 
Clock_Ip_EnableSpll/7 (Clock_Ip_EnableSpll) @0db3a620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableSpll_TrustedCall/11 
Clock_Ip_DisableSpll/6 (Clock_Ip_DisableSpll) @0db3a0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DisableSpll_TrustedCall/10 
Clock_Ip_CompleteSpll/5 (Clock_Ip_CompleteSpll) @0db3ad20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ReportClockErrors/15 Clock_Ip_TimeoutExpired/14 Clock_Ip_StartTimeout/13 
Clock_Ip_SetSpll/4 (Clock_Ip_SetSpll) @0db3aa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_SetSpll_TrustedCall/9 
Clock_Ip_ResetSpll/3 (Clock_Ip_ResetSpll) @0db3a7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ResetSpll_TrustedCall/8 
Clock_Ip_CallbackPllEmptyDisable/2 (Clock_Ip_CallbackPllEmptyDisable) @0db3a540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmptyComplete/1 (Clock_Ip_CallbackPllEmptyComplete) @0db3a2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmpty/0 (Clock_Ip_CallbackPllEmpty) @0db3a000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) Clock_Ip_axPllCallbacks/12 (addr) Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_EnableSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  _1 = Config->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 = _2->SPLLCSR;
  _4 = 1074151424B;
  _5 = _3 | 1;
  _4->SPLLCSR = _5;

  <bb 4> :
  return;

}


Clock_Ip_DisableSpll_TrustedCall (Clock_Ip_NameType PllName)
{
  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR = _4;
  _5 = 1074151424B;
  _6 = _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967294;
  _7->SPLLCSR = _8;
  return;

}


Clock_Ip_SetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  _1 = Config->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 = _2->SPLLCFG;
  _4 = Config->Predivider;
  _5 = (long unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _6 << 8;
  _8 = _7 & 1792;
  _9 = Config->MulFactorDiv;
  _10 = (long unsigned int) _9;
  _11 = _10 + 4294967280;
  _12 = _11 << 16;
  _13 = _12 & 2031616;
  _14 = _8 | _13;
  _15 = 1074151424B;
  _16 = _3 | _14;
  _15->SPLLCFG = _16;
  _17 = Config->Monitor;
  _18 = (int) _17;
  switch (_18) <default: <L4> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 2: <L3> [INV]>

  <bb 4> :
<L1>:
  _19 = 1074151424B;
  _19->SPLLCSR = 0;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  _20 = 1074151424B;
  _20->SPLLCSR = 65536;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  _21 = 1074151424B;
  _21->SPLLCSR = 196608;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Clock_Ip_ResetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR = _4;
  _5 = 1074151424B;
  _6 = _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294901759;
  _7->SPLLCSR = _8;
  _9 = 1074151424B;
  _10 = _9->SPLLCSR;
  _11 = 1074151424B;
  _12 = _10 & 4294836223;
  _11->SPLLCSR = _12;
  _13 = 1074151424B;
  _14 = _13->SPLLCSR;
  _15 = 1074151424B;
  _16 = _14 & 4294967294;
  _15->SPLLCSR = _16;
  _17 = 1074151424B;
  _18 = _17->SPLLCFG;
  _19 = 1074151424B;
  _20 = _18 & 4294965503;
  _19->SPLLCFG = _20;
  _21 = 1074151424B;
  _22 = _21->SPLLCFG;
  _23 = 1074151424B;
  _24 = _22 & 4292935679;
  _23->SPLLCFG = _24;
  return;

}


Clock_Ip_EnableSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableSpll_TrustedCall (Config);

  <bb 4> :
  return;

}


Clock_Ip_DisableSpll (Clock_Ip_NameType PllName)
{
  <bb 2> :
  Clock_Ip_DisableSpll_TrustedCall (PllName);
  return;

}


Clock_Ip_CompleteSpll (Clock_Ip_NameType PllName)
{
  uint32 SpllStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusReturnType D.5977;

  <bb 2> :
  PllStatus = 1;
  TimeoutOccurred = 0;
  _1 = 1074151424B;
  _2 = _1->SPLLCSR;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _4 = 1074151424B;
  _5 = _4->SPLLCSR;
  _6 = _5 >> 24;
  SpllStatus = _6 & 1;
  TimeoutTicks.0_7 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_7);
  if (SpllStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = ~TimeoutOccurred;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _9 = ~TimeoutOccurred;
  if (_9 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  PllStatus = 2;
  goto <bb 10>; [INV]

  <bb 8> :
  Clock_Ip_ReportClockErrors (1, PllName);
  goto <bb 10>; [INV]

  <bb 9> :
  PllStatus = 0;

  <bb 10> :
  D.5977 = PllStatus;
  StartTime = {CLOBBER};
  ElapsedTime = {CLOBBER};
  TimeoutTicks = {CLOBBER};

  <bb 11> :
<L10>:
  return D.5977;

}


Clock_Ip_SetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetSpll_TrustedCall (Config);

  <bb 4> :
  return;

}


Clock_Ip_ResetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_ResetSpll_TrustedCall (Config);

  <bb 4> :
  return;

}


Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> :
  return;

}


Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType D.5964;

  <bb 2> :
  D.5964 = 2;

  <bb 3> :
<L0>:
  return D.5964;

}


Clock_Ip_CallbackPllEmpty (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  return;

}


