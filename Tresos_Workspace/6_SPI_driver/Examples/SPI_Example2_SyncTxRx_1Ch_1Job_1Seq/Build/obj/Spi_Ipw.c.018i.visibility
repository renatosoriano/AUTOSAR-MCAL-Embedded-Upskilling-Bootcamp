
Marking local functions:


Marking externally visible functions: Spi_Ipw_SyncTransmit/3 Spi_Ipw_DeInit/2 Spi_Ipw_Init/1


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Lpspi_Ip_apxStateStructureArray/11 (Lpspi_Ip_apxStateStructureArray) @0dc0e3f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) 
  Availability: not_available
  Varpool flags:
Lpspi_Ip_DeInit/10 (Lpspi_Ip_DeInit) @0dc02700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_DeInit/2 
  Calls: 
Spi_apxSpiConfigPtr/9 (Spi_apxSpiConfigPtr) @0dc01bd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Spi_Ipw_DeInit/2 (read) Spi_Ipw_DeInit/2 (read) Spi_Ipw_SyncTransmit/3 (read) Spi_Ipw_SyncTransmit/3 (read) 
  Availability: not_available
  Varpool flags:
Lpspi_Ip_Init/8 (Lpspi_Ip_Init) @0dc02540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_Init/1 
  Calls: 
Lpspi_Ip_SyncTransmit/7 (Lpspi_Ip_SyncTransmit) @0dc02380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_SyncTransmitProcess/0 
  Calls: 
Lpspi_Ip_UpdateLsb/6 (Lpspi_Ip_UpdateLsb) @0dc022a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_SyncTransmitProcess/0 
  Calls: 
Lpspi_Ip_UpdateFrameSize/5 (Lpspi_Ip_UpdateFrameSize) @0dc021c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_SyncTransmitProcess/0 
  Calls: 
Lpspi_Ip_UpdateDefaultTransmitData/4 (Lpspi_Ip_UpdateDefaultTransmitData) @0dc020e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Spi_Ipw_SyncTransmitProcess/0 
  Calls: 
Spi_Ipw_SyncTransmit/3 (Spi_Ipw_SyncTransmit) @0db15620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Spi_apxSpiConfigPtr/9 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Spi_apxSpiConfigPtr/9 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) Lpspi_Ip_apxStateStructureArray/11 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Spi_Ipw_SyncTransmitProcess/0 
Spi_Ipw_DeInit/2 (Spi_Ipw_DeInit) @0db15ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Spi_apxSpiConfigPtr/9 (read) Spi_apxSpiConfigPtr/9 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_DeInit/10 
Spi_Ipw_Init/1 (Spi_Ipw_Init) @0db15c40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Lpspi_Ip_Init/8 
Spi_Ipw_SyncTransmitProcess/0 (Spi_Ipw_SyncTransmitProcess) @0db159a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Spi_Ipw_SyncTransmit/3 
  Calls: Lpspi_Ip_SyncTransmit/7 Lpspi_Ip_UpdateLsb/6 Lpspi_Ip_UpdateFrameSize/5 Lpspi_Ip_UpdateDefaultTransmitData/4 
Spi_Ipw_SyncTransmit (const struct Spi_JobConfigType * JobConfig, uint32 SpiCoreID)
{
  Spi_Ipw_SupportedIpsType IpType;
  Spi_ChannelType ChannelIndex;
  Spi_ChannelType NumChannelsInJob;
  Spi_ChannelType ChannelID;
  const struct Spi_ChannelConfigType * NextChannelConfig;
  const struct Spi_ChannelConfigType * ChannelConfig;
  const Spi_DataBufferType * TxBuffer;
  Spi_DataBufferType * RxBuffer;
  Std_ReturnType Ipw_Status;
  Std_ReturnType D.5779;

  <bb 2> :
  Ipw_Status = 0;
  _1 = JobConfig->ExternalDeviceConfig;
  _2 = _1->ExDeviceConfig;
  IpType = _2->IpType;
  NumChannelsInJob = JobConfig->NumChannels;
  ChannelIndex = 0;
  goto <bb 21>; [INV]

  <bb 3> :
  _3 = JobConfig->ChannelIndexList;
  _4 = (sizetype) ChannelIndex;
  _5 = _3 + _4;
  ChannelID = *_5;
  _6 = Spi_apxSpiConfigPtr[SpiCoreID];
  _7 = _6->ChannelConfig;
  _8 = (unsigned int) ChannelID;
  _9 = _8 * 4;
  _10 = _7 + _9;
  ChannelConfig = _10->ChannelCfg;
  _11 = ChannelConfig->BufferDescriptor;
  RxBuffer = _11->BufferRX;
  _12 = ChannelConfig->ChannelState;
  _13 = _12->Flags;
  _14 = (unsigned int) _13;
  _15 = _14 & 1;
  if (_15 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  TxBuffer = 0B;
  goto <bb 8>; [INV]

  <bb 5> :
  _16 = ChannelConfig->BufferType;
  if (_16 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _17 = ChannelConfig->BufferDescriptor;
  TxBuffer = _17->ExternalBufferTX;
  goto <bb 8>; [INV]

  <bb 7> :
  _18 = ChannelConfig->BufferDescriptor;
  TxBuffer = _18->InternalBufferTX;

  <bb 8> :
  if (IpType == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 9> :
  _19 = (unsigned int) ChannelIndex;
  _20 = (unsigned int) NumChannelsInJob;
  _21 = _20 + 4294967295;
  if (_19 == _21)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _22 = JobConfig->ExternalDeviceConfig;
  _23 = _22->ExDeviceConfig;
  _24 = _23->Instance;
  _25 = (int) _24;
  _26 = Lpspi_Ip_apxStateStructureArray[_25];
  _26->KeepCs = 0;
  goto <bb 17>; [INV]

  <bb 11> :
  _27 = JobConfig->ExternalDeviceConfig;
  _28 = _27->ExDeviceConfig;
  _29 = _28->Instance;
  _30 = (int) _29;
  _31 = Lpspi_Ip_apxStateStructureArray[_30];
  _31->KeepCs = 1;
  __asm__ __volatile__(" DSB");
  _32 = Spi_apxSpiConfigPtr[SpiCoreID];
  _33 = _32->ChannelConfig;
  _34 = JobConfig->ChannelIndexList;
  _35 = (sizetype) ChannelIndex;
  _36 = _35 + 1;
  _37 = _34 + _36;
  _38 = *_37;
  _39 = (unsigned int) _38;
  _40 = _39 * 4;
  _41 = _33 + _40;
  NextChannelConfig = _41->ChannelCfg;
  __asm__ __volatile__(" DSB");
  _42 = NextChannelConfig->ChannelState;
  _43 = _42->Flags;
  _44 = (unsigned int) _43;
  _45 = _44 & 1;
  if (_45 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _46 = JobConfig->ExternalDeviceConfig;
  _47 = _46->ExDeviceConfig;
  _48 = _47->Instance;
  _49 = (int) _48;
  _50 = Lpspi_Ip_apxStateStructureArray[_49];
  _50->TxBufferNext = 0B;
  goto <bb 16>; [INV]

  <bb 13> :
  _51 = NextChannelConfig->BufferType;
  if (_51 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _52 = NextChannelConfig->BufferDescriptor;
  _53 = JobConfig->ExternalDeviceConfig;
  _54 = _53->ExDeviceConfig;
  _55 = _54->Instance;
  _56 = (int) _55;
  _57 = Lpspi_Ip_apxStateStructureArray[_56];
  _58 = _52->ExternalBufferTX;
  _57->TxBufferNext = _58;
  goto <bb 16>; [INV]

  <bb 15> :
  _59 = NextChannelConfig->BufferDescriptor;
  _60 = JobConfig->ExternalDeviceConfig;
  _61 = _60->ExDeviceConfig;
  _62 = _61->Instance;
  _63 = (int) _62;
  _64 = Lpspi_Ip_apxStateStructureArray[_63];
  _65 = _59->InternalBufferTX;
  _64->TxBufferNext = _65;

  <bb 16> :
  _66 = NextChannelConfig->FrameSize;
  _67 = JobConfig->ExternalDeviceConfig;
  _68 = _67->ExDeviceConfig;
  _69 = _68->Instance;
  _70 = (int) _69;
  _71 = Lpspi_Ip_apxStateStructureArray[_70];
  _72 = (short unsigned int) _66;
  _71->FrameSizeNext = _72;
  _73 = JobConfig->ExternalDeviceConfig;
  _74 = _73->ExDeviceConfig;
  _75 = _74->Instance;
  _76 = (int) _75;
  _77 = Lpspi_Ip_apxStateStructureArray[_76];
  _78 = NextChannelConfig->Lsb;
  _77->LsbNext = _78;
  _79 = JobConfig->ExternalDeviceConfig;
  _80 = _79->ExDeviceConfig;
  _81 = _80->Instance;
  _82 = (int) _81;
  _83 = Lpspi_Ip_apxStateStructureArray[_82];
  _84 = NextChannelConfig->DefaultTransmitValue;
  _83->DefaultDataNext = _84;
  _85 = NextChannelConfig->ChannelState;
  _86 = JobConfig->ExternalDeviceConfig;
  _87 = _86->ExDeviceConfig;
  _88 = _87->Instance;
  _89 = (int) _88;
  _90 = Lpspi_Ip_apxStateStructureArray[_89];
  _91 = _85->Length;
  _90->LengthNext = _91;

  <bb 17> :
  if (ChannelIndex == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _92 = JobConfig->ExternalDeviceConfig;
  _93 = _92->ExDeviceConfig;
  _94 = _93->Instance;
  _95 = (int) _94;
  _96 = Lpspi_Ip_apxStateStructureArray[_95];
  _96->FirstCmd = 1;
  goto <bb 20>; [INV]

  <bb 19> :
  _97 = JobConfig->ExternalDeviceConfig;
  _98 = _97->ExDeviceConfig;
  _99 = _98->Instance;
  _100 = (int) _99;
  _101 = Lpspi_Ip_apxStateStructureArray[_100];
  _101->FirstCmd = 0;

  <bb 20> :
  Ipw_Status = Spi_Ipw_SyncTransmitProcess (JobConfig, ChannelConfig, RxBuffer, TxBuffer);
  ChannelIndex.0_102 = ChannelIndex;
  ChannelIndex = ChannelIndex.0_102 + 1;

  <bb 21> :
  if (ChannelIndex < NumChannelsInJob)
    goto <bb 3>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  D.5779 = Ipw_Status;

  <bb 23> :
<L23>:
  return D.5779;

}


Spi_Ipw_DeInit (Spi_HWUnitType HWUnit, uint32 SpiCoreID)
{
  <bb 2> :
  _1 = Spi_apxSpiConfigPtr[SpiCoreID];
  _2 = _1->HWUnitConfig;
  _3 = (unsigned int) HWUnit;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = _5->PhyUnitConfig;
  _7 = _6->IpType;
  if (_7 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _8 = Spi_apxSpiConfigPtr[SpiCoreID];
  _9 = _8->HWUnitConfig;
  _10 = (unsigned int) HWUnit;
  _11 = _10 * 4;
  _12 = _9 + _11;
  _13 = _12->PhyUnitConfig;
  _14 = _13->Instance;
  Lpspi_Ip_DeInit (_14);

  <bb 4> :
  return;

}


Spi_Ipw_Init (const Spi_HWUnitType HWUnitId, const struct Spi_HWUnitConfigType * HWUnit)
{
  <bb 2> :
  _1 = HWUnit->IpType;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = HWUnit->IpConfig.LpspiIpConfig;
  Lpspi_Ip_Init (_2);

  <bb 4> :
  return;

}


Spi_Ipw_SyncTransmitProcess (const struct Spi_JobConfigType * JobConfig, const struct Spi_ChannelConfigType * ChannelConfig, Spi_DataBufferType * RxBuffer, const Spi_DataBufferType * TxBuffer)
{
  Spi_Ipw_SupportedIpsType IpType;
  Spi_NumberOfDataType NumberOfBytes;
  Std_ReturnType Ipw_Status;
  const struct Lpspi_Ip_ExternalDeviceType * LpspiExternalDevice;
  Lpspi_Ip_StatusType Lpspi_spiStatus;
  Std_ReturnType D.5753;

  <bb 2> :
  Lpspi_spiStatus = 0;
  Ipw_Status = 0;
  _1 = JobConfig->ExternalDeviceConfig;
  _2 = _1->ExDeviceConfig;
  IpType = _2->IpType;
  _3 = ChannelConfig->ChannelState;
  NumberOfBytes = _3->Length;
  if (IpType == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _4 = JobConfig->ExternalDeviceConfig;
  _5 = _4->ExDeviceConfig;
  LpspiExternalDevice = _5->ExternalDeviceConfig.LpspiExternalDeviceConfig;
  _6 = ChannelConfig->DefaultTransmitValue;
  Lpspi_spiStatus = Lpspi_Ip_UpdateDefaultTransmitData (LpspiExternalDevice, _6);
  if (Lpspi_spiStatus == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _7 = ChannelConfig->FrameSize;
  _8 = (short unsigned int) _7;
  Lpspi_spiStatus = Lpspi_Ip_UpdateFrameSize (LpspiExternalDevice, _8);
  if (Lpspi_spiStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _9 = ChannelConfig->Lsb;
  Lpspi_spiStatus = Lpspi_Ip_UpdateLsb (LpspiExternalDevice, _9);
  if (Lpspi_spiStatus == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Lpspi_spiStatus = Lpspi_Ip_SyncTransmit (LpspiExternalDevice, TxBuffer, RxBuffer, NumberOfBytes, 50000);

  <bb 7> :
  if (Lpspi_spiStatus != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  Ipw_Status = 1;

  <bb 9> :
  D.5753 = Ipw_Status;

  <bb 10> :
<L10>:
  return D.5753;

}


