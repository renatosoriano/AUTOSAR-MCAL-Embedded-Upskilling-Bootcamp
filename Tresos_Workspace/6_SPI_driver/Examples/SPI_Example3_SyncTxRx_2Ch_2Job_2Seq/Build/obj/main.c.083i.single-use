EcuM_Init ()
{
  <bb 2> :
  Mcu_Init (&Mcu_Config);
  Mcu_InitClock (0);
  Mcu_SetMode (0);
  OsIf_Init (0B);
  Platform_Init (0B);
  Port_Init (&Port_Config);
  Spi_Init (&Spi_Config);
  return;

}


main ()
{
  Spi_DataBufferType RxBuffer[4];
  Spi_DataBufferType TxBuffer[4];
  int D.7619;
  unsigned char _1;
  int _2;
  unsigned char _3;
  int _4;

  <bb 2> :
  EcuM_Init ();
  SEGGER_RTT_Init ();
  TxBuffer[0] = 6;
  Spi_SetupEB (0, &TxBuffer, 0B, 1);
  Spi_SyncTransmit (0);
  TxBuffer[0] = 2;
  TxBuffer[1] = 0;
  TxBuffer[2] = 0;
  TxBuffer[3] = 55;
  Spi_SetupEB (0, &TxBuffer, 0B, 4);
  Spi_SyncTransmit (0);
  Delay (8);
  TxBuffer[0] = 3;
  TxBuffer[1] = 0;
  TxBuffer[2] = 0;
  Spi_SetupEB (0, &TxBuffer, &RxBuffer, 4);
  Spi_SyncTransmit (0);
  _1 = RxBuffer[3];
  _2 = (int) _1;
  SEGGER_RTT_printf (0, "Data read from eeprom 1: 0x%X\n", _2);
  TxBuffer[0] = 6;
  Spi_SetupEB (1, &TxBuffer, 0B, 1);
  Spi_SyncTransmit (1);
  TxBuffer[0] = 2;
  TxBuffer[1] = 0;
  TxBuffer[2] = 0;
  TxBuffer[3] = 56;
  Spi_SetupEB (1, &TxBuffer, 0B, 4);
  Spi_SyncTransmit (1);
  Delay (8);
  TxBuffer[0] = 3;
  TxBuffer[1] = 0;
  TxBuffer[2] = 0;
  Spi_SetupEB (1, &TxBuffer, &RxBuffer, 4);
  Spi_SyncTransmit (1);
  _3 = RxBuffer[3];
  _4 = (int) _3;
  SEGGER_RTT_printf (0, "Data read from eeprom 2: 0x%X\n", _4);

  <bb 3> :
  Delay (10);
  goto <bb 3>; [INV]

}


Delay (uint32 ms)
{
  uint32 ElapsedTime;
  uint32 SeedTick;
  uint32 Timeout;
  long unsigned int D.7618;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _13;

  <bb 2> :
  _1 = ms_5(D) * 1000;
  Timeout_8 = OsIf_MicrosToTicks (_1, 1);
  _2 = OsIf_GetCounter (1);
  SeedTick = _2;
  ElapsedTime_11 = 0;

  <bb 3> :
  # ElapsedTime_3 = PHI <ElapsedTime_11(2), ElapsedTime_14(3)>
  _13 = OsIf_GetElapsed (&SeedTick, 1);
  ElapsedTime_14 = _13 + ElapsedTime_3;
  if (ElapsedTime_14 < Timeout_8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  SeedTick ={v} {CLOBBER};
  return;

}


