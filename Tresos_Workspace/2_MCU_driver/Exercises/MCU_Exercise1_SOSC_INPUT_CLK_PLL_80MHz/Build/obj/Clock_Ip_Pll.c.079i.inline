IPA summary for Clock_Ip_EnableSpll_TrustedCall/11 is missing.
IPA summary for Clock_Ip_DisableSpll_TrustedCall/10 is missing.
IPA summary for Clock_Ip_SetSpll_TrustedCall/9 is missing.
IPA summary for Clock_Ip_ResetSpll_TrustedCall/8 is missing.
IPA summary for Clock_Ip_EnableSpll/7 is missing.
IPA summary for Clock_Ip_DisableSpll/6 is missing.
IPA summary for Clock_Ip_CompleteSpll/5 is missing.
IPA summary for Clock_Ip_SetSpll/4 is missing.
IPA summary for Clock_Ip_ResetSpll/3 is missing.
IPA summary for Clock_Ip_CallbackPllEmptyDisable/2 is missing.
IPA summary for Clock_Ip_CallbackPllEmptyComplete/1 is missing.
IPA summary for Clock_Ip_CallbackPllEmpty/0 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :        4 calls, 4.000000 freq, 0 count
function body not available                       :        3 calls, 3.000000 freq, 0 count
IPA summary for Clock_Ip_EnableSpll_TrustedCall/11 is missing.
IPA summary for Clock_Ip_DisableSpll_TrustedCall/10 is missing.
IPA summary for Clock_Ip_SetSpll_TrustedCall/9 is missing.
IPA summary for Clock_Ip_ResetSpll_TrustedCall/8 is missing.
IPA summary for Clock_Ip_EnableSpll/7 is missing.
IPA summary for Clock_Ip_DisableSpll/6 is missing.
IPA summary for Clock_Ip_CompleteSpll/5 is missing.
IPA summary for Clock_Ip_SetSpll/4 is missing.
IPA summary for Clock_Ip_ResetSpll/3 is missing.
IPA summary for Clock_Ip_CallbackPllEmptyDisable/2 is missing.
IPA summary for Clock_Ip_CallbackPllEmptyComplete/1 is missing.
IPA summary for Clock_Ip_CallbackPllEmpty/0 is missing.
Symbol table:

Clock_Ip_ReportClockErrors/15 (Clock_Ip_ReportClockErrors) @0dc06540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_TimeoutExpired/14 (Clock_Ip_TimeoutExpired) @0dc06460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_StartTimeout/13 (Clock_Ip_StartTimeout) @0dc06380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompleteSpll/5 
  Calls: 
Clock_Ip_axPllCallbacks/12 (Clock_Ip_axPllCallbacks) @0dbf97e0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyComplete/1 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyDisable/2 (addr) Clock_Ip_ResetSpll/3 (addr) Clock_Ip_SetSpll/4 (addr) Clock_Ip_CompleteSpll/5 (addr) Clock_Ip_EnableSpll/7 (addr) Clock_Ip_DisableSpll/6 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_EnableSpll_TrustedCall/11 (Clock_Ip_EnableSpll_TrustedCall) @0dc04b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableSpll/7 
  Calls: 
Clock_Ip_DisableSpll_TrustedCall/10 (Clock_Ip_DisableSpll_TrustedCall) @0dc047e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableSpll/6 
  Calls: 
Clock_Ip_SetSpll_TrustedCall/9 (Clock_Ip_SetSpll_TrustedCall) @0dc04540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetSpll/4 
  Calls: 
Clock_Ip_ResetSpll_TrustedCall/8 (Clock_Ip_ResetSpll_TrustedCall) @0dbfbb60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ResetSpll/3 
  Calls: 
Clock_Ip_EnableSpll/7 (Clock_Ip_EnableSpll) @0dbfb620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableSpll_TrustedCall/11 
Clock_Ip_DisableSpll/6 (Clock_Ip_DisableSpll) @0dbfb0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DisableSpll_TrustedCall/10 
Clock_Ip_CompleteSpll/5 (Clock_Ip_CompleteSpll) @0dbfbd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ReportClockErrors/15 Clock_Ip_TimeoutExpired/14 Clock_Ip_StartTimeout/13 
Clock_Ip_SetSpll/4 (Clock_Ip_SetSpll) @0dbfba80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_SetSpll_TrustedCall/9 
Clock_Ip_ResetSpll/3 (Clock_Ip_ResetSpll) @0dbfb7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ResetSpll_TrustedCall/8 
Clock_Ip_CallbackPllEmptyDisable/2 (Clock_Ip_CallbackPllEmptyDisable) @0dbfb540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmptyComplete/1 (Clock_Ip_CallbackPllEmptyComplete) @0dbfb2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmpty/0 (Clock_Ip_CallbackPllEmpty) @0dbfb000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr) Clock_Ip_axPllCallbacks/12 (addr) Clock_Ip_axPllCallbacks/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 

;; Function Clock_Ip_CallbackPllEmpty (Clock_Ip_CallbackPllEmpty, funcdef_no=0, decl_uid=5895, cgraph_uid=1, symbol_order=0)

Clock_Ip_CallbackPllEmpty (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  return;

}



;; Function Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_CallbackPllEmptyComplete, funcdef_no=1, decl_uid=5897, cgraph_uid=2, symbol_order=1)

Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType D.5964;
  Clock_Ip_PllStatusReturnType _1;

  <bb 2> :
  _1 = 2;

  <bb 3> :
<L0>:
  return _1;

}



;; Function Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_CallbackPllEmptyDisable, funcdef_no=2, decl_uid=5899, cgraph_uid=3, symbol_order=2)

Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> :
  return;

}



;; Function Clock_Ip_ResetSpll (Clock_Ip_ResetSpll, funcdef_no=3, decl_uid=5901, cgraph_uid=4, symbol_order=3)

Clock_Ip_ResetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_ResetSpll_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_SetSpll (Clock_Ip_SetSpll, funcdef_no=4, decl_uid=5903, cgraph_uid=5, symbol_order=4)

Clock_Ip_SetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetSpll_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_CompleteSpll (Clock_Ip_CompleteSpll, funcdef_no=5, decl_uid=5905, cgraph_uid=6, symbol_order=5)

Clock_Ip_CompleteSpll (Clock_Ip_NameType PllName)
{
  uint32 SpllStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusReturnType D.5977;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  struct SCG_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int TimeoutTicks.0_7;
  _Bool _8;
  _Bool _9;
  Clock_Ip_PllStatusReturnType _24;

  <bb 2> :
  PllStatus_13 = 1;
  TimeoutOccurred_14 = 0;
  _1 = 1074151424B;
  _2 ={v} _1->SPLLCSR;
  _3 = _2 & 1;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _4 = 1074151424B;
  _5 ={v} _4->SPLLCSR;
  _6 = _5 >> 24;
  SpllStatus_18 = _6 & 1;
  TimeoutTicks.0_7 = TimeoutTicks;
  TimeoutOccurred_20 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_7);
  if (SpllStatus_18 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = ~TimeoutOccurred_20;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _9 = ~TimeoutOccurred_20;
  if (_9 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  PllStatus_23 = 2;
  goto <bb 10>; [INV]

  <bb 8> :
  Clock_Ip_ReportClockErrors (1, PllName_21(D));
  goto <bb 10>; [INV]

  <bb 9> :
  PllStatus_16 = 0;

  <bb 10> :
  # PllStatus_10 = PHI <PllStatus_13(8), PllStatus_16(9), PllStatus_23(7)>
  _24 = PllStatus_10;
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};

  <bb 11> :
<L10>:
  return _24;

}



;; Function Clock_Ip_DisableSpll (Clock_Ip_DisableSpll, funcdef_no=6, decl_uid=5909, cgraph_uid=7, symbol_order=6)

Clock_Ip_DisableSpll (Clock_Ip_NameType PllName)
{
  <bb 2> :
  Clock_Ip_DisableSpll_TrustedCall (PllName_2(D));
  return;

}



;; Function Clock_Ip_EnableSpll (Clock_Ip_EnableSpll, funcdef_no=7, decl_uid=5907, cgraph_uid=8, symbol_order=7)

Clock_Ip_EnableSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableSpll_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_ResetSpll_TrustedCall (Clock_Ip_ResetSpll_TrustedCall, funcdef_no=8, decl_uid=5887, cgraph_uid=9, symbol_order=8)

Clock_Ip_ResetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  struct SCG_Type * _9;
  long unsigned int _10;
  struct SCG_Type * _11;
  long unsigned int _12;
  struct SCG_Type * _13;
  long unsigned int _14;
  struct SCG_Type * _15;
  long unsigned int _16;
  struct SCG_Type * _17;
  long unsigned int _18;
  struct SCG_Type * _19;
  long unsigned int _20;
  struct SCG_Type * _21;
  long unsigned int _22;
  struct SCG_Type * _23;
  long unsigned int _24;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294901759;
  _7->SPLLCSR ={v} _8;
  _9 = 1074151424B;
  _10 ={v} _9->SPLLCSR;
  _11 = 1074151424B;
  _12 = _10 & 4294836223;
  _11->SPLLCSR ={v} _12;
  _13 = 1074151424B;
  _14 ={v} _13->SPLLCSR;
  _15 = 1074151424B;
  _16 = _14 & 4294967294;
  _15->SPLLCSR ={v} _16;
  _17 = 1074151424B;
  _18 ={v} _17->SPLLCFG;
  _19 = 1074151424B;
  _20 = _18 & 4294965503;
  _19->SPLLCFG ={v} _20;
  _21 = 1074151424B;
  _22 ={v} _21->SPLLCFG;
  _23 = 1074151424B;
  _24 = _22 & 4292935679;
  _23->SPLLCFG ={v} _24;
  return;

}



;; Function Clock_Ip_SetSpll_TrustedCall (Clock_Ip_SetSpll_TrustedCall, funcdef_no=9, decl_uid=5889, cgraph_uid=10, symbol_order=9)

Clock_Ip_SetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  short unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct SCG_Type * _15;
  long unsigned int _16;
  unsigned char _17;
  int _18;
  struct SCG_Type * _19;
  struct SCG_Type * _20;
  struct SCG_Type * _21;

  <bb 2> :
  _1 = Config_24(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 ={v} _2->SPLLCFG;
  _4 = Config_24(D)->Predivider;
  _5 = (long unsigned int) _4;
  _6 = _5 + 4294967295;
  _7 = _6 << 8;
  _8 = _7 & 1792;
  _9 = Config_24(D)->MulFactorDiv;
  _10 = (long unsigned int) _9;
  _11 = _10 + 4294967280;
  _12 = _11 << 16;
  _13 = _12 & 2031616;
  _14 = _8 | _13;
  _15 = 1074151424B;
  _16 = _3 | _14;
  _15->SPLLCFG ={v} _16;
  _17 = Config_24(D)->Monitor;
  _18 = (int) _17;
  switch (_18) <default: <L4> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 2: <L3> [INV]>

  <bb 4> :
<L1>:
  _19 = 1074151424B;
  _19->SPLLCSR ={v} 0;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  _20 = 1074151424B;
  _20->SPLLCSR ={v} 65536;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  _21 = 1074151424B;
  _21->SPLLCSR ={v} 196608;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}



;; Function Clock_Ip_DisableSpll_TrustedCall (Clock_Ip_DisableSpll_TrustedCall, funcdef_no=10, decl_uid=5891, cgraph_uid=11, symbol_order=10)

Clock_Ip_DisableSpll_TrustedCall (Clock_Ip_NameType PllName)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SPLLCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SPLLCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SPLLCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967294;
  _7->SPLLCSR ={v} _8;
  return;

}



;; Function Clock_Ip_EnableSpll_TrustedCall (Clock_Ip_EnableSpll_TrustedCall, funcdef_no=11, decl_uid=5893, cgraph_uid=12, symbol_order=11)

Clock_Ip_EnableSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  short unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  struct SCG_Type * _4;
  long unsigned int _5;

  <bb 2> :
  _1 = Config_8(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 ={v} _2->SPLLCSR;
  _4 = 1074151424B;
  _5 = _3 | 1;
  _4->SPLLCSR ={v} _5;

  <bb 4> :
  return;

}


