read_byte (uint16 addr)
{
  Spi_DataBufferType buffer[1];
  uint8 Cmd;
  uint8 D.7639;

  <bb 2> :
  Cmd = 3;
  Spi_SetupEB (1, &Cmd, 0B, 1);
  Spi_SetupEB (2, &addr, 0B, 1);
  Spi_SetupEB (3, 0B, &buffer, 1);
  Spi_SyncTransmit (1);
  _1 = buffer[0];
  _2 = (int) _1;
  SEGGER_RTT_printf (0, "[Debug] Data read from eeprom 1 - RxBuffer[0]: 0x%x\n", _2);
  D.7639 = buffer[0];
  Cmd = {CLOBBER};
  buffer = {CLOBBER};

  <bb 3> :
<L1>:
  return D.7639;

}


write_byte (uint16 addr, uint8 * data)
{
  uint8 Cmd;
  uint8 Wren;

  <bb 2> :
  Wren = 6;
  Spi_SetupEB (0, &Wren, 0B, 1);
  Cmd = 2;
  Spi_SetupEB (1, &Cmd, 0B, 1);
  Spi_SetupEB (2, &addr, 0B, 1);
  Spi_SetupEB (3, data, 0B, 1);
  Spi_SyncTransmit (0);
  Wren = {CLOBBER};
  Cmd = {CLOBBER};
  return;

}


EcuM_Init ()
{
  <bb 2> :
  Mcu_Init (&Mcu_Config);
  Mcu_InitClock (0);
  Mcu_SetMode (0);
  OsIf_Init (0B);
  Platform_Init (0B);
  Port_Init (&Port_Config);
  Spi_Init (&Spi_Config);
  return;

}


main ()
{
  uint16 Address;
  Spi_DataBufferType RxBuffer[1];
  Spi_DataBufferType TxBuffer[1];
  int D.7636;

  <bb 2> :
  TxBuffer = "\x07";
  Address = 9;
  EcuM_Init ();
  SEGGER_RTT_Init ();
  write_byte (Address, &TxBuffer);
  Delay (5);
  _1 = read_byte (Address);
  RxBuffer[0] = _1;
  _2 = RxBuffer[0];
  _3 = (int) _2;
  _4 = (int) Address;
  SEGGER_RTT_printf (0, "Data from eeprom 1: 0x%x, Address: 0x%x\n", _3, _4);

  <bb 3> :
  Delay (10);
  goto <bb 3>; [INV]

}


Delay (uint32 ms)
{
  uint32 ElapsedTime;
  uint32 SeedTick;
  uint32 Timeout;
  long unsigned int D.7635;

  <bb 2> :
  _1 = ms * 1000;
  Timeout = OsIf_MicrosToTicks (_1, 1);
  _2 = OsIf_GetCounter (1);
  SeedTick = _2;
  ElapsedTime = 0;

  <bb 3> :
  D.7635 = OsIf_GetElapsed (&SeedTick, 1);
  ElapsedTime = D.7635 + ElapsedTime;
  if (ElapsedTime < Timeout)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  SeedTick = {CLOBBER};
  return;

}


