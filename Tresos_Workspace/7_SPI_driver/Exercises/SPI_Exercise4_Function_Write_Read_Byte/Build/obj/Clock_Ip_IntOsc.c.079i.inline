IPA summary for Clock_Ip_DisableFirc_TrustedCall/26 is missing.
IPA summary for Clock_Ip_EnableFirc_TrustedCall/25 is missing.
IPA summary for Clock_Ip_SetFirc_TrustedCall/24 is missing.
IPA summary for Clock_Ip_DisableSircStop_TrustedCall/23 is missing.
IPA summary for Clock_Ip_EnableSircStop_TrustedCall/22 is missing.
IPA summary for Clock_Ip_SetSircStop_TrustedCall/21 is missing.
IPA summary for Clock_Ip_DisableSircVlp_TrustedCall/20 is missing.
IPA summary for Clock_Ip_EnableSircVlp_TrustedCall/19 is missing.
IPA summary for Clock_Ip_SetSircVlp_TrustedCall/18 is missing.
IPA summary for Clock_Ip_DisableSirc_TrustedCall/17 is missing.
IPA summary for Clock_Ip_EnableSirc_TrustedCall/16 is missing.
IPA summary for Clock_Ip_SetSirc_TrustedCall/15 is missing.
IPA summary for Clock_Ip_DisableFirc/14 is missing.
IPA summary for Clock_Ip_EnableFirc/13 is missing.
IPA summary for Clock_Ip_SetFirc/12 is missing.
IPA summary for SetInputSouceSytemClock/11 is missing.
IPA summary for Clock_Ip_DisableSircStop/10 is missing.
IPA summary for Clock_Ip_EnableSircStop/9 is missing.
IPA summary for Clock_Ip_SetSircStop/8 is missing.
IPA summary for Clock_Ip_DisableSircVlp/7 is missing.
IPA summary for Clock_Ip_EnableSircVlp/6 is missing.
IPA summary for Clock_Ip_SetSircVlp/5 is missing.
IPA summary for Clock_Ip_DisableSirc/4 is missing.
IPA summary for Clock_Ip_EnableSirc/3 is missing.
IPA summary for Clock_Ip_SetSirc/2 is missing.
IPA summary for Clock_Ip_InternalOscillatorEmpty_Disable/1 is missing.
IPA summary for Clock_Ip_InternalOscillatorEmpty/0 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       16 calls, 16.000000 freq, 0 count
function body not available                       :       18 calls, 18.000000 freq, 0 count
IPA summary for Clock_Ip_DisableFirc_TrustedCall/26 is missing.
IPA summary for Clock_Ip_EnableFirc_TrustedCall/25 is missing.
IPA summary for Clock_Ip_SetFirc_TrustedCall/24 is missing.
IPA summary for Clock_Ip_DisableSircStop_TrustedCall/23 is missing.
IPA summary for Clock_Ip_EnableSircStop_TrustedCall/22 is missing.
IPA summary for Clock_Ip_SetSircStop_TrustedCall/21 is missing.
IPA summary for Clock_Ip_DisableSircVlp_TrustedCall/20 is missing.
IPA summary for Clock_Ip_EnableSircVlp_TrustedCall/19 is missing.
IPA summary for Clock_Ip_SetSircVlp_TrustedCall/18 is missing.
IPA summary for Clock_Ip_DisableSirc_TrustedCall/17 is missing.
IPA summary for Clock_Ip_EnableSirc_TrustedCall/16 is missing.
IPA summary for Clock_Ip_SetSirc_TrustedCall/15 is missing.
IPA summary for Clock_Ip_DisableFirc/14 is missing.
IPA summary for Clock_Ip_EnableFirc/13 is missing.
IPA summary for Clock_Ip_SetFirc/12 is missing.
IPA summary for SetInputSouceSytemClock/11 is missing.
IPA summary for Clock_Ip_DisableSircStop/10 is missing.
IPA summary for Clock_Ip_EnableSircStop/9 is missing.
IPA summary for Clock_Ip_SetSircStop/8 is missing.
IPA summary for Clock_Ip_DisableSircVlp/7 is missing.
IPA summary for Clock_Ip_EnableSircVlp/6 is missing.
IPA summary for Clock_Ip_SetSircVlp/5 is missing.
IPA summary for Clock_Ip_DisableSirc/4 is missing.
IPA summary for Clock_Ip_EnableSirc/3 is missing.
IPA summary for Clock_Ip_SetSirc/2 is missing.
IPA summary for Clock_Ip_InternalOscillatorEmpty_Disable/1 is missing.
IPA summary for Clock_Ip_InternalOscillatorEmpty/0 is missing.
Symbol table:

Clock_Ip_au8ClockFeatures/31 (Clock_Ip_au8ClockFeatures) @0de0e6c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_SetFirc_TrustedCall/24 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_ReportClockErrors/30 (Clock_Ip_ReportClockErrors) @0ddf3a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_EnableFirc_TrustedCall/25 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_EnableSirc_TrustedCall/16 Clock_Ip_SetSirc_TrustedCall/15 SetInputSouceSytemClock/11 
  Calls: 
Clock_Ip_TimeoutExpired/29 (Clock_Ip_TimeoutExpired) @0ddf39a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_EnableFirc_TrustedCall/25 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_EnableSirc_TrustedCall/16 Clock_Ip_SetSirc_TrustedCall/15 SetInputSouceSytemClock/11 
  Calls: 
Clock_Ip_StartTimeout/28 (Clock_Ip_StartTimeout) @0ddf38c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_EnableFirc_TrustedCall/25 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_EnableSirc_TrustedCall/16 Clock_Ip_SetSirc_TrustedCall/15 SetInputSouceSytemClock/11 
  Calls: 
Clock_Ip_axIntOscCallbacks/27 (Clock_Ip_axIntOscCallbacks) @0da4b708
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_InternalOscillatorEmpty/0 (addr) Clock_Ip_InternalOscillatorEmpty/0 (addr) Clock_Ip_InternalOscillatorEmpty_Disable/1 (addr) Clock_Ip_SetSirc/2 (addr) Clock_Ip_EnableSirc/3 (addr) Clock_Ip_DisableSirc/4 (addr) Clock_Ip_SetSircVlp/5 (addr) Clock_Ip_EnableSircVlp/6 (addr) Clock_Ip_DisableSircVlp/7 (addr) Clock_Ip_SetSircStop/8 (addr) Clock_Ip_EnableSircStop/9 (addr) Clock_Ip_DisableSircStop/10 (addr) Clock_Ip_SetFirc/12 (addr) Clock_Ip_EnableFirc/13 (addr) Clock_Ip_DisableFirc/14 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_DisableFirc_TrustedCall/26 (Clock_Ip_DisableFirc_TrustedCall) @0dafab60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableFirc/14 
  Calls: 
Clock_Ip_EnableFirc_TrustedCall/25 (Clock_Ip_EnableFirc_TrustedCall) @0dafa8c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableFirc/13 
  Calls: Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 
Clock_Ip_SetFirc_TrustedCall/24 (Clock_Ip_SetFirc_TrustedCall) @0dafa540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_au8ClockFeatures/31 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetFirc/12 
  Calls: Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 Clock_Ip_DisableSirc/4 SetInputSouceSytemClock/11 Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 SetInputSouceSytemClock/11 Clock_Ip_SetSirc/2 
Clock_Ip_DisableSircStop_TrustedCall/23 (Clock_Ip_DisableSircStop_TrustedCall) @0daf5a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableSircStop/10 
  Calls: 
Clock_Ip_EnableSircStop_TrustedCall/22 (Clock_Ip_EnableSircStop_TrustedCall) @0daf5460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableSircStop/9 
  Calls: 
Clock_Ip_SetSircStop_TrustedCall/21 (Clock_Ip_SetSircStop_TrustedCall) @0daf5d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetSircStop/8 
  Calls: 
Clock_Ip_DisableSircVlp_TrustedCall/20 (Clock_Ip_DisableSircVlp_TrustedCall) @0daf59a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableSircVlp/7 
  Calls: 
Clock_Ip_EnableSircVlp_TrustedCall/19 (Clock_Ip_EnableSircVlp_TrustedCall) @0daf5700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableSircVlp/6 
  Calls: 
Clock_Ip_SetSircVlp_TrustedCall/18 (Clock_Ip_SetSircVlp_TrustedCall) @0daf5380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetSircVlp/5 
  Calls: 
Clock_Ip_DisableSirc_TrustedCall/17 (Clock_Ip_DisableSirc_TrustedCall) @0daf5000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_DisableSirc/4 
  Calls: 
Clock_Ip_EnableSirc_TrustedCall/16 (Clock_Ip_EnableSirc_TrustedCall) @0da4c9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_EnableSirc/3 
  Calls: Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 
Clock_Ip_SetSirc_TrustedCall/15 (Clock_Ip_SetSirc_TrustedCall) @0da4ce00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetSirc/2 
  Calls: Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 
Clock_Ip_DisableFirc/14 (Clock_Ip_DisableFirc) @0da4c8c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DisableFirc_TrustedCall/26 
Clock_Ip_EnableFirc/13 (Clock_Ip_EnableFirc) @0da4c620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableFirc_TrustedCall/25 
Clock_Ip_SetFirc/12 (Clock_Ip_SetFirc) @0da4c380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_SetFirc_TrustedCall/24 
SetInputSouceSytemClock/11 (SetInputSouceSytemClock) @0da4c0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetFirc_TrustedCall/24 Clock_Ip_SetFirc_TrustedCall/24 
  Calls: Clock_Ip_ReportClockErrors/30 Clock_Ip_TimeoutExpired/29 Clock_Ip_StartTimeout/28 
Clock_Ip_DisableSircStop/10 (Clock_Ip_DisableSircStop) @0da49b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DisableSircStop_TrustedCall/23 
Clock_Ip_EnableSircStop/9 (Clock_Ip_EnableSircStop) @0da49620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableSircStop_TrustedCall/22 
Clock_Ip_SetSircStop/8 (Clock_Ip_SetSircStop) @0da490e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_SetSircStop_TrustedCall/21 
Clock_Ip_DisableSircVlp/7 (Clock_Ip_DisableSircVlp) @0da49d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DisableSircVlp_TrustedCall/20 
Clock_Ip_EnableSircVlp/6 (Clock_Ip_EnableSircVlp) @0da49a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableSircVlp_TrustedCall/19 
Clock_Ip_SetSircVlp/5 (Clock_Ip_SetSircVlp) @0da497e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_SetSircVlp_TrustedCall/18 
Clock_Ip_DisableSirc/4 (Clock_Ip_DisableSirc) @0da49540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetFirc_TrustedCall/24 
  Calls: Clock_Ip_DisableSirc_TrustedCall/17 
Clock_Ip_EnableSirc/3 (Clock_Ip_EnableSirc) @0da492a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_EnableSirc_TrustedCall/16 
Clock_Ip_SetSirc/2 (Clock_Ip_SetSirc) @0da49000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SetFirc_TrustedCall/24 
  Calls: Clock_Ip_SetSirc_TrustedCall/15 
Clock_Ip_InternalOscillatorEmpty_Disable/1 (Clock_Ip_InternalOscillatorEmpty_Disable) @0da45b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_InternalOscillatorEmpty/0 (Clock_Ip_InternalOscillatorEmpty) @0da45d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/27 (addr) Clock_Ip_axIntOscCallbacks/27 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 

;; Function Clock_Ip_InternalOscillatorEmpty (Clock_Ip_InternalOscillatorEmpty, funcdef_no=0, decl_uid=5911, cgraph_uid=1, symbol_order=0)

Clock_Ip_InternalOscillatorEmpty (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  return;

}



;; Function Clock_Ip_InternalOscillatorEmpty_Disable (Clock_Ip_InternalOscillatorEmpty_Disable, funcdef_no=1, decl_uid=5913, cgraph_uid=2, symbol_order=1)

Clock_Ip_InternalOscillatorEmpty_Disable (Clock_Ip_NameType Name)
{
  <bb 2> :
  return;

}



;; Function Clock_Ip_SetSirc (Clock_Ip_SetSirc, funcdef_no=2, decl_uid=5915, cgraph_uid=3, symbol_order=2)

Clock_Ip_SetSirc (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetSirc_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_EnableSirc (Clock_Ip_EnableSirc, funcdef_no=3, decl_uid=5917, cgraph_uid=4, symbol_order=3)

Clock_Ip_EnableSirc (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableSirc_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableSirc (Clock_Ip_DisableSirc, funcdef_no=4, decl_uid=5919, cgraph_uid=5, symbol_order=4)

Clock_Ip_DisableSirc (Clock_Ip_NameType Name)
{
  <bb 2> :
  Clock_Ip_DisableSirc_TrustedCall (Name_2(D));
  return;

}



;; Function Clock_Ip_SetSircVlp (Clock_Ip_SetSircVlp, funcdef_no=5, decl_uid=5921, cgraph_uid=6, symbol_order=5)

Clock_Ip_SetSircVlp (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetSircVlp_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_EnableSircVlp (Clock_Ip_EnableSircVlp, funcdef_no=6, decl_uid=5923, cgraph_uid=7, symbol_order=6)

Clock_Ip_EnableSircVlp (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableSircVlp_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableSircVlp (Clock_Ip_DisableSircVlp, funcdef_no=7, decl_uid=5925, cgraph_uid=8, symbol_order=7)

Clock_Ip_DisableSircVlp (Clock_Ip_NameType Name)
{
  <bb 2> :
  Clock_Ip_DisableSircVlp_TrustedCall (Name_2(D));
  return;

}



;; Function Clock_Ip_SetSircStop (Clock_Ip_SetSircStop, funcdef_no=8, decl_uid=5927, cgraph_uid=9, symbol_order=8)

Clock_Ip_SetSircStop (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetSircStop_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_EnableSircStop (Clock_Ip_EnableSircStop, funcdef_no=9, decl_uid=5929, cgraph_uid=10, symbol_order=9)

Clock_Ip_EnableSircStop (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableSircStop_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableSircStop (Clock_Ip_DisableSircStop, funcdef_no=10, decl_uid=5931, cgraph_uid=11, symbol_order=10)

Clock_Ip_DisableSircStop (Clock_Ip_NameType Name)
{
  <bb 2> :
  Clock_Ip_DisableSircStop_TrustedCall (Name_2(D));
  return;

}



;; Function SetInputSouceSytemClock (SetInputSouceSytemClock, funcdef_no=11, decl_uid=5972, cgraph_uid=12, symbol_order=11)

SetInputSouceSytemClock (uint32 SourceClock)
{
  uint32 ScsStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  uint32 RegValue;
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  struct SCG_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  _Bool _8;
  int _9;
  long unsigned int TimeoutTicks.0_10;
  _Bool _11;

  <bb 2> :
  TimeoutOccurred_14 = 0;
  _1 = 1074151424B;
  RegValue_16 ={v} _1->RCCR;
  RegValue_17 = RegValue_16 & 4043309055;
  _2 = SourceClock_18(D) << 24;
  RegValue_19 = RegValue_17 | _2;
  _3 = 1074151424B;
  _3->RCCR ={v} RegValue_19;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 3> :
  _4 = 1074151424B;
  _5 ={v} _4->CSR;
  _6 = _5 >> 24;
  _7 = _6 & 15;
  _8 = SourceClock_18(D) == _7;
  _9 = (int) _8;
  ScsStatus_22 = (uint32) _9;
  TimeoutTicks.0_10 = TimeoutTicks;
  TimeoutOccurred_24 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_10);
  if (ScsStatus_22 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _11 = ~TimeoutOccurred_24;
  if (_11 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (TimeoutOccurred_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Clock_Ip_ReportClockErrors (1, 5);

  <bb 7> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Clock_Ip_SetFirc (Clock_Ip_SetFirc, funcdef_no=12, decl_uid=5933, cgraph_uid=13, symbol_order=12)

Clock_Ip_SetFirc (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_SetFirc_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_EnableFirc (Clock_Ip_EnableFirc, funcdef_no=13, decl_uid=5935, cgraph_uid=14, symbol_order=13)

Clock_Ip_EnableFirc (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  if (Config_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_EnableFirc_TrustedCall (Config_2(D));

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableFirc (Clock_Ip_DisableFirc, funcdef_no=14, decl_uid=5937, cgraph_uid=15, symbol_order=14)

Clock_Ip_DisableFirc (Clock_Ip_NameType Name)
{
  <bb 2> :
  Clock_Ip_DisableFirc_TrustedCall (Name_2(D));
  return;

}



;; Function Clock_Ip_SetSirc_TrustedCall (Clock_Ip_SetSirc_TrustedCall, funcdef_no=15, decl_uid=5887, cgraph_uid=16, symbol_order=15)

Clock_Ip_SetSirc_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  struct Clock_Ip_IrcoscConfigType SircConfig;
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  <unnamed type> _1;
  unsigned char _2;
  short unsigned int _3;
  unsigned char _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  struct SCG_Type * _9;
  long unsigned int _10;
  struct SCG_Type * _11;
  long unsigned int _12;
  struct SCG_Type * _13;
  long unsigned int _14;
  struct SCG_Type * _15;
  long unsigned int _16;
  short unsigned int _17;
  unsigned char _18;
  long unsigned int _19;
  struct SCG_Type * _20;
  long unsigned int _21;
  struct SCG_Type * _22;
  long unsigned int _23;
  struct SCG_Type * _24;
  long unsigned int _25;
  struct SCG_Type * _26;
  long unsigned int _27;
  unsigned char _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  struct SCG_Type * _32;
  long unsigned int _33;
  struct SCG_Type * _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int TimeoutTicks.1_37;
  _Bool _38;
  <unnamed type> _39;

  <bb 2> :
  TimeoutOccurred_43 = 0;
  if (Config_44(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  SircConfig.Name = 5;
  SircConfig.Range = 1;
  SircConfig.Enable = 1;
  SircConfig.LowPowerModeEnable = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = Config_44(D)->Name;
  SircConfig.Name = _1;
  _2 = Config_44(D)->Range;
  SircConfig.Range = _2;
  _3 = Config_44(D)->Enable;
  SircConfig.Enable = _3;
  _4 = Config_44(D)->LowPowerModeEnable;
  SircConfig.LowPowerModeEnable = _4;

  <bb 5> :
  _5 = 1074151424B;
  _6 ={v} _5->SIRCCSR;
  _7 = 1074151424B;
  _8 = _6 & 4286578687;
  _7->SIRCCSR ={v} _8;
  _9 = 1074151424B;
  _10 ={v} _9->SIRCCSR;
  _11 = 1074151424B;
  _12 = _10 & 4294967294;
  _11->SIRCCSR ={v} _12;
  _13 = 1074151424B;
  _14 ={v} _13->SIRCCSR;
  _15 = 1074151424B;
  _16 = _14 & 4294967291;
  _15->SIRCCSR ={v} _16;
  _17 = SircConfig.Enable;
  if (_17 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  _18 = SircConfig.Range;
  _19 = (long unsigned int) _18;
  _20 = 1074151424B;
  _21 = _19 & 1;
  _20->SIRCCFG ={v} _21;
  _22 = 1074151424B;
  _23 ={v} _22->SIRCCSR;
  _24 = 1074151424B;
  _25 = _23 | 1;
  _24->SIRCCSR ={v} _25;
  _26 = 1074151424B;
  _27 ={v} _26->SIRCCSR;
  _28 = SircConfig.LowPowerModeEnable;
  _29 = (long unsigned int) _28;
  _30 = _29 << 2;
  _31 = _30 & 4;
  _32 = 1074151424B;
  _33 = _27 | _31;
  _32->SIRCCSR ={v} _33;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 7> :
  _34 = 1074151424B;
  _35 ={v} _34->SIRCCSR;
  _36 = _35 >> 24;
  IrcoscStatus_61 = _36 & 1;
  TimeoutTicks.1_37 = TimeoutTicks;
  TimeoutOccurred_63 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_37);
  if (IrcoscStatus_61 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _38 = ~TimeoutOccurred_63;
  if (_38 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (TimeoutOccurred_63 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _39 = SircConfig.Name;
  Clock_Ip_ReportClockErrors (1, _39);

  <bb 11> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  SircConfig ={v} {CLOBBER};
  return;

}



;; Function Clock_Ip_EnableSirc_TrustedCall (Clock_Ip_EnableSirc_TrustedCall, funcdef_no=16, decl_uid=5889, cgraph_uid=17, symbol_order=16)

Clock_Ip_EnableSirc_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  struct SCG_Type * _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int TimeoutTicks.2_12;
  _Bool _13;
  <unnamed type> _14;

  <bb 2> :
  TimeoutOccurred_17 = 0;
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 | 1;
  _3->SIRCCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SIRCCSR;
  _7 = 1074151424B;
  _8 = _6 | 4;
  _7->SIRCCSR ={v} _8;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 3> :
  _9 = 1074151424B;
  _10 ={v} _9->SIRCCSR;
  _11 = _10 >> 24;
  IrcoscStatus_22 = _11 & 1;
  TimeoutTicks.2_12 = TimeoutTicks;
  TimeoutOccurred_24 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.2_12);
  if (IrcoscStatus_22 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _13 = ~TimeoutOccurred_24;
  if (_13 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (TimeoutOccurred_24 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _14 = Config_25(D)->Name;
  Clock_Ip_ReportClockErrors (1, _14);

  <bb 7> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Clock_Ip_DisableSirc_TrustedCall (Clock_Ip_DisableSirc_TrustedCall, funcdef_no=17, decl_uid=5891, cgraph_uid=18, symbol_order=17)

Clock_Ip_DisableSirc_TrustedCall (Clock_Ip_NameType Name)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4294967294;
  _3->SIRCCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SIRCCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967291;
  _7->SIRCCSR ={v} _8;
  return;

}



;; Function Clock_Ip_SetSircVlp_TrustedCall (Clock_Ip_SetSircVlp_TrustedCall, funcdef_no=18, decl_uid=5893, cgraph_uid=19, symbol_order=18)

Clock_Ip_SetSircVlp_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  struct SCG_Type * _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct SCG_Type * _15;
  long unsigned int _16;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SIRCCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SIRCCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967291;
  _7->SIRCCSR ={v} _8;
  _9 = 1074151424B;
  _10 ={v} _9->SIRCCSR;
  _11 = Config_20(D)->LowPowerModeEnable;
  _12 = (long unsigned int) _11;
  _13 = _12 << 2;
  _14 = _13 & 4;
  _15 = 1074151424B;
  _16 = _10 | _14;
  _15->SIRCCSR ={v} _16;
  return;

}



;; Function Clock_Ip_EnableSircVlp_TrustedCall (Clock_Ip_EnableSircVlp_TrustedCall, funcdef_no=19, decl_uid=5895, cgraph_uid=20, symbol_order=19)

Clock_Ip_EnableSircVlp_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  struct SCG_Type * _4;
  long unsigned int _5;

  <bb 2> :
  _1 = Config_8(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 ={v} _2->SIRCCSR;
  _4 = 1074151424B;
  _5 = _3 | 4;
  _4->SIRCCSR ={v} _5;

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableSircVlp_TrustedCall (Clock_Ip_DisableSircVlp_TrustedCall, funcdef_no=20, decl_uid=5897, cgraph_uid=21, symbol_order=20)

Clock_Ip_DisableSircVlp_TrustedCall (Clock_Ip_NameType Name)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4294967291;
  _3->SIRCCSR ={v} _4;
  return;

}



;; Function Clock_Ip_SetSircStop_TrustedCall (Clock_Ip_SetSircStop_TrustedCall, funcdef_no=21, decl_uid=5899, cgraph_uid=22, symbol_order=21)

Clock_Ip_SetSircStop_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  struct SCG_Type * _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct SCG_Type * _15;
  long unsigned int _16;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4286578687;
  _3->SIRCCSR ={v} _4;
  _5 = 1074151424B;
  _6 ={v} _5->SIRCCSR;
  _7 = 1074151424B;
  _8 = _6 & 4294967293;
  _7->SIRCCSR ={v} _8;
  _9 = 1074151424B;
  _10 ={v} _9->SIRCCSR;
  _11 = Config_20(D)->StopModeEnable;
  _12 = (long unsigned int) _11;
  _13 = _12 << 1;
  _14 = _13 & 2;
  _15 = 1074151424B;
  _16 = _10 | _14;
  _15->SIRCCSR ={v} _16;
  return;

}



;; Function Clock_Ip_EnableSircStop_TrustedCall (Clock_Ip_EnableSircStop_TrustedCall, funcdef_no=22, decl_uid=5901, cgraph_uid=23, symbol_order=22)

Clock_Ip_EnableSircStop_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  struct SCG_Type * _4;
  long unsigned int _5;

  <bb 2> :
  _1 = Config_8(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 ={v} _2->SIRCCSR;
  _4 = 1074151424B;
  _5 = _3 | 2;
  _4->SIRCCSR ={v} _5;

  <bb 4> :
  return;

}



;; Function Clock_Ip_DisableSircStop_TrustedCall (Clock_Ip_DisableSircStop_TrustedCall, funcdef_no=23, decl_uid=5903, cgraph_uid=24, symbol_order=23)

Clock_Ip_DisableSircStop_TrustedCall (Clock_Ip_NameType Name)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4294967293;
  _3->SIRCCSR ={v} _4;
  return;

}



;; Function Clock_Ip_SetFirc_TrustedCall (Clock_Ip_SetFirc_TrustedCall, funcdef_no=24, decl_uid=5905, cgraph_uid=25, symbol_order=24)

Clock_Ip_SetFirc_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean SircWasDisabled;
  boolean TimeoutOccurred;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  struct SCG_Type * _3;
  long unsigned int _4;
  struct SCG_Type * _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char _10;
  long unsigned int _11;
  struct SCG_Type * _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  long unsigned int _16;
  struct SCG_Type * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct SCG_Type * _21;
  long unsigned int _22;
  long unsigned int _23;
  struct SCG_Type * _24;
  long unsigned int _25;
  struct SCG_Type * _26;
  long unsigned int _27;
  short unsigned int _28;
  unsigned char _29;
  long unsigned int _30;
  struct SCG_Type * _31;
  long unsigned int _32;
  struct SCG_Type * _33;
  long unsigned int _34;
  unsigned char _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  struct SCG_Type * _40;
  long unsigned int _41;
  struct SCG_Type * _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int TimeoutTicks.3_45;
  _Bool _46;
  <unnamed type> _47;
  struct SCG_Type * _48;
  long unsigned int _49;
  struct SCG_Type * _50;
  long unsigned int _51;
  short unsigned int _52;
  unsigned char _53;
  long unsigned int _54;
  struct SCG_Type * _55;
  long unsigned int _56;
  struct SCG_Type * _57;
  long unsigned int _58;
  unsigned char _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  struct SCG_Type * _64;
  long unsigned int _65;
  struct SCG_Type * _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int TimeoutTicks.4_69;
  _Bool _70;
  <unnamed type> _71;

  <bb 2> :
  _1 = Config_79(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_80 = (uint32) _2;
  TimeoutOccurred_81 = 0;
  SircWasDisabled_82 = 0;
  _3 = 1074151424B;
  _4 ={v} _3->FIRCCSR;
  _5 = 1074151424B;
  _6 = _4 & 4286578687;
  _5->FIRCCSR ={v} _6;
  _7 = 1074151424B;
  _8 ={v} _7->FIRCCSR;
  _9 = _8 & 33554432;
  if (_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 3> :
  _10 = Config_79(D)->Range;
  _11 = (long unsigned int) _10;
  _12 = 1074151424B;
  _13 ={v} _12->FIRCCFG;
  _14 = _13 & 3;
  if (_11 != _14)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _15 = Config_79(D)->Regulator;
  _16 = (long unsigned int) _15;
  _17 = 1074151424B;
  _18 ={v} _17->FIRCCSR;
  _19 = _18 >> 3;
  _20 = _19 & 1;
  if (_16 != _20)
    goto <bb 5>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 5> :
  _21 = 1074151424B;
  _22 ={v} _21->SIRCCSR;
  _23 = _22 & 1;
  if (_23 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  SircWasDisabled_92 = 1;
  Clock_Ip_SetSirc (0B);

  <bb 7> :
  # SircWasDisabled_72 = PHI <SircWasDisabled_82(5), SircWasDisabled_92(6)>
  SetInputSouceSytemClock (2);
  _24 = 1074151424B;
  _25 ={v} _24->FIRCCSR;
  _26 = 1074151424B;
  _27 = _25 & 4294967294;
  _26->FIRCCSR ={v} _27;
  _28 = Config_79(D)->Enable;
  if (_28 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 8> :
  _29 = Config_79(D)->Range;
  _30 = (long unsigned int) _29;
  _31 = 1074151424B;
  _32 = _30 & 3;
  _31->FIRCCFG ={v} _32;
  _33 = 1074151424B;
  _34 ={v} _33->FIRCCSR;
  _35 = Config_79(D)->Regulator;
  _36 = (long unsigned int) _35;
  _37 = _36 << 3;
  _38 = _37 & 8;
  _39 = _34 | _38;
  _40 = 1074151424B;
  _41 = _39 | 1;
  _40->FIRCCSR ={v} _41;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 9> :
  _42 = 1074151424B;
  _43 ={v} _42->FIRCCSR;
  _44 = _43 >> 24;
  IrcoscStatus_99 = _44 & 1;
  TimeoutTicks.3_45 = TimeoutTicks;
  TimeoutOccurred_101 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.3_45);
  if (IrcoscStatus_99 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _46 = ~TimeoutOccurred_101;
  if (_46 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (TimeoutOccurred_101 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _47 = Config_79(D)->Name;
  Clock_Ip_ReportClockErrors (1, _47);

  <bb 13> :
  SetInputSouceSytemClock (3);
  if (SircWasDisabled_72 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 14> :
  Clock_Ip_DisableSirc (2);
  goto <bb 21>; [INV]

  <bb 15> :
  _48 = 1074151424B;
  _49 ={v} _48->FIRCCSR;
  _50 = 1074151424B;
  _51 = _49 & 4294967294;
  _50->FIRCCSR ={v} _51;
  _52 = Config_79(D)->Enable;
  if (_52 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 16> :
  _53 = Config_79(D)->Range;
  _54 = (long unsigned int) _53;
  _55 = 1074151424B;
  _56 = _54 & 3;
  _55->FIRCCFG ={v} _56;
  _57 = 1074151424B;
  _58 ={v} _57->FIRCCSR;
  _59 = Config_79(D)->Regulator;
  _60 = (long unsigned int) _59;
  _61 = _60 << 3;
  _62 = _61 & 8;
  _63 = _58 | _62;
  _64 = 1074151424B;
  _65 = _63 | 1;
  _64->FIRCCSR ={v} _65;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 17> :
  _66 = 1074151424B;
  _67 ={v} _66->FIRCCSR;
  _68 = _67 >> 24;
  IrcoscStatus_88 = _68 & 1;
  TimeoutTicks.4_69 = TimeoutTicks;
  TimeoutOccurred_90 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.4_69);
  if (IrcoscStatus_88 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _70 = ~TimeoutOccurred_90;
  if (_70 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (TimeoutOccurred_90 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _71 = Config_79(D)->Name;
  Clock_Ip_ReportClockErrors (1, _71);

  <bb 21> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Clock_Ip_EnableFirc_TrustedCall (Clock_Ip_EnableFirc_TrustedCall, funcdef_no=25, decl_uid=5907, cgraph_uid=26, symbol_order=25)

Clock_Ip_EnableFirc_TrustedCall (const struct Clock_Ip_IrcoscConfigType * Config)
{
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  short unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  struct SCG_Type * _4;
  long unsigned int _5;
  struct SCG_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int TimeoutTicks.5_9;
  _Bool _10;
  <unnamed type> _11;

  <bb 2> :
  TimeoutOccurred_14 = 0;
  _1 = Config_16(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _2 = 1074151424B;
  _3 ={v} _2->FIRCCSR;
  _4 = 1074151424B;
  _5 = _3 | 1;
  _4->FIRCCSR ={v} _5;
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _6 = 1074151424B;
  _7 ={v} _6->FIRCCSR;
  _8 = _7 >> 24;
  IrcoscStatus_19 = _8 & 1;
  TimeoutTicks.5_9 = TimeoutTicks;
  TimeoutOccurred_21 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.5_9);
  if (IrcoscStatus_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _10 = ~TimeoutOccurred_21;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred_21 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _11 = Config_16(D)->Name;
  Clock_Ip_ReportClockErrors (1, _11);

  <bb 8> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Clock_Ip_DisableFirc_TrustedCall (Clock_Ip_DisableFirc_TrustedCall, funcdef_no=26, decl_uid=5909, cgraph_uid=27, symbol_order=26)

Clock_Ip_DisableFirc_TrustedCall (Clock_Ip_NameType Name)
{
  struct SCG_Type * _1;
  long unsigned int _2;
  struct SCG_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->FIRCCSR;
  _3 = 1074151424B;
  _4 = _2 & 4294967294;
  _3->FIRCCSR ={v} _4;
  return;

}


