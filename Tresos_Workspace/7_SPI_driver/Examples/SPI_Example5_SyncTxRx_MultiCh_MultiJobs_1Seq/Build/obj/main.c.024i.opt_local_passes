EcuM_Init ()
{
  <bb 2> :
  Mcu_Init (&Mcu_Config);
  Mcu_InitClock (0);
  Mcu_SetMode (0);
  OsIf_Init (0B);
  Platform_Init (0B);
  Port_Init (&Port_Config);
  Spi_Init (&Spi_Config);
  return;

}


main ()
{
  uint16 Address;
  uint8 Cmd;
  uint8 Wren;
  Spi_DataBufferType RxBuffer[4];
  Spi_DataBufferType TxBuffer[4];
  int D.7622;
  unsigned char _1;
  int _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  int _6;
  unsigned char _7;
  int _8;

  <bb 2> :
  TxBuffer = "\x00\x01\x02\x03";
  EcuM_Init ();
  SEGGER_RTT_Init ();
  Wren = 6;
  Spi_SetupEB (0, &Wren, 0B, 1);
  Cmd = 2;
  Address = 160;
  Spi_SetupEB (1, &Cmd, 0B, 1);
  Spi_SetupEB (2, &Address, 0B, 1);
  Spi_SetupEB (3, &TxBuffer, 0B, 4);
  Spi_SyncTransmit (0);
  Delay (5);
  Cmd = 3;
  Address = 160;
  Spi_SetupEB (1, &Cmd, 0B, 1);
  Spi_SetupEB (2, &Address, 0B, 1);
  Spi_SetupEB (3, 0B, &RxBuffer, 4);
  Spi_SyncTransmit (1);
  _1 = RxBuffer[0];
  _2 = (int) _1;
  SEGGER_RTT_printf (0, "Data read from eeprom 1 - RxBuffer[0]: 0x%x\n", _2);
  _3 = RxBuffer[1];
  _4 = (int) _3;
  SEGGER_RTT_printf (0, "Data read from eeprom 1 - RxBuffer[1]: 0x%x\n", _4);
  _5 = RxBuffer[2];
  _6 = (int) _5;
  SEGGER_RTT_printf (0, "Data read from eeprom 1 - RxBuffer[2]: 0x%x\n", _6);
  _7 = RxBuffer[3];
  _8 = (int) _7;
  SEGGER_RTT_printf (0, "Data read from eeprom 1 - RxBuffer[3]: 0x%x\n", _8);

  <bb 3> :
  Delay (10);
  goto <bb 3>; [INV]

}


Delay (uint32 ms)
{
  uint32 ElapsedTime;
  uint32 SeedTick;
  uint32 Timeout;
  long unsigned int D.7621;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _13;

  <bb 2> :
  _1 = ms_5(D) * 1000;
  Timeout_8 = OsIf_MicrosToTicks (_1, 1);
  _2 = OsIf_GetCounter (1);
  SeedTick = _2;
  ElapsedTime_11 = 0;

  <bb 3> :
  # ElapsedTime_3 = PHI <ElapsedTime_11(2), ElapsedTime_14(3)>
  _13 = OsIf_GetElapsed (&SeedTick, 1);
  ElapsedTime_14 = _13 + ElapsedTime_3;
  if (ElapsedTime_14 < Timeout_8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  SeedTick ={v} {CLOBBER};
  return;

}


