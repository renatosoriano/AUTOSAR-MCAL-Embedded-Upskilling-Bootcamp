EcuM_Init ()
{
  <bb 2> :
  Mcu_Init (&Mcu_Config);
  Mcu_InitClock (0);
  Mcu_SetMode (0);
  OsIf_Init (0B);
  Platform_Init (0B);
  Port_Init (&Port_Config);
  Can_43_FLEXCAN_Init (&Can_43_FLEXCAN_Config);
  CanIf_Init (&CanIf_Config);
  return;

}


main ()
{
  int D.7420;

  <bb 2> :
  EcuM_Init ();
  Can_43_FLEXCAN_SetControllerMode (0, 1);

  <bb 3> :
  goto <bb 3>; [INV]

}


CDD_UserRxIndication (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  uint8 i;

  <bb 2> :
  _1 = PduInfoPtr->SduDataPtr;
  _2 = *_1;
  if (_2 == 50)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  i = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = PduInfoPtr->SduDataPtr;
  _4 = (sizetype) i;
  _5 = _3 + _4;
  _6 = (int) i;
  _7 = *_5;
  Can_au8Sdu8bytes[_6] = _7;
  i.0_8 = i;
  i = i.0_8 + 1;

  <bb 5> :
  if (i <= 7)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  return;

}


Delay (uint32 ms)
{
  uint32 ElapsedTime;
  uint32 SeedTick;
  uint32 Timeout;
  long unsigned int D.7417;

  <bb 2> :
  _1 = ms * 1000;
  Timeout = OsIf_MicrosToTicks (_1, 1);
  _2 = OsIf_GetCounter (1);
  SeedTick = _2;
  ElapsedTime = 0;

  <bb 3> :
  D.7417 = OsIf_GetElapsed (&SeedTick, 1);
  ElapsedTime = D.7417 + ElapsedTime;
  if (ElapsedTime < Timeout)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  SeedTick = {CLOBBER};
  return;

}


