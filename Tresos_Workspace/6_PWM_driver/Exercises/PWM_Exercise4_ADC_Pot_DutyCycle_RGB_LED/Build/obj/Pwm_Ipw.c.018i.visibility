
Marking local functions:


Marking externally visible functions: Pwm_Ipw_GetMaxPeriodValue/9 Pwm_Ipw_SetPeriodAndDuty/8 Pwm_Ipw_SetDutyCycle/7 Pwm_Ipw_DeInitInstance/6 Pwm_Ipw_DeInit/5 Pwm_Ipw_InitInstance/4 Pwm_Ipw_Init/3


Marking externally visible variables: Pwm_Ipw_aFtmDutyCycle/2 Ftm_Pwm_Ip_aPolarity/1


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/14 (Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty) @0daf6620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetPeriodAndDuty/8 
  Calls: 
Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/13 (Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel) @0daf6460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_SetDutyCycle/7 
  Calls: 
Ftm_Pwm_Ip_aPeriod/12 (Ftm_Pwm_Ip_aPeriod) @0daf8630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Pwm_Ipw_SetDutyCycle/7 (read) 
  Availability: not_available
  Varpool flags:
Ftm_Pwm_Ip_DeInit/11 (Ftm_Pwm_Ip_DeInit) @0daf62a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_DeInitInstance/6 
  Calls: 
Ftm_Pwm_Ip_Init/10 (Ftm_Pwm_Ip_Init) @0daf6000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Ipw_InitInstance/4 
  Calls: 
Pwm_Ipw_GetMaxPeriodValue/9 (Pwm_Ipw_GetMaxPeriodValue) @0dc270e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_SetPeriodAndDuty/8 (Pwm_Ipw_SetPeriodAndDuty) @0dc27d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty/14 
Pwm_Ipw_SetDutyCycle/7 (Pwm_Ipw_SetDutyCycle) @0dc27a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPeriod/12 (read) Pwm_Ipw_aFtmDutyCycle/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel/13 
Pwm_Ipw_DeInitInstance/6 (Pwm_Ipw_DeInitInstance) @0dc277e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_DeInit/11 
Pwm_Ipw_DeInit/5 (Pwm_Ipw_DeInit) @0dc27540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_InitInstance/4 (Pwm_Ipw_InitInstance) @0dc272a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Ftm_Pwm_Ip_aPolarity/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Ftm_Pwm_Ip_Init/10 
Pwm_Ipw_Init/3 (Pwm_Ipw_Init) @0dc27000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_Ipw_aFtmDutyCycle/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pwm_Ipw_aFtmDutyCycle/2 (Pwm_Ipw_aFtmDutyCycle) @0dc22bd0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Pwm_Ipw_Init/3 (write) Pwm_Ipw_DeInit/5 (write) Pwm_Ipw_SetDutyCycle/7 (write) Pwm_Ipw_SetPeriodAndDuty/8 (write) 
  Availability: available
  Varpool flags:
Ftm_Pwm_Ip_aPolarity/1 (Ftm_Pwm_Ip_aPolarity) @0dc22af8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Pwm_Ipw_InitInstance/4 (write) 
  Availability: available
  Varpool flags:
Pwm_Ipw_GetMaxPeriodValue (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint32 RetVal;
  uint32 D.5898;

  <bb 2> :
  RetVal = 65535;
  _1 = IpConfig->ChannelType;
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  RetVal = 65534;
  goto <bb 5>; [INV]

  <bb 4> :
<L1>:

  <bb 5> :
  D.5898 = RetVal;

  <bb 6> :
<L4>:
  return D.5898;

}


Pwm_Ipw_SetPeriodAndDuty (Pwm_PeriodType Period, uint16 DutyCycle, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 FtmDutyCycle;

  <bb 2> :
  FtmDutyCycle = 0;
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmChConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = (long unsigned int) Period;
  _4 = (long unsigned int) DutyCycle;
  _5 = _3 * _4;
  _6 = _5 / 32768;
  FtmDutyCycle = (uint16) _6;
  _7 = IpConfig->ChannelInstanceId;
  _8 = IpConfig->FtmChConfig;
  _9 = _8->ChannelId;
  Ftm_Pwm_Ip_UpdatePwmPeriodAndDuty (_7, _9, Period, FtmDutyCycle, 1);
  _10 = IpConfig->ChannelInstanceId;
  _11 = (int) _10;
  _12 = IpConfig->FtmChConfig;
  _13 = _12->ChannelId;
  _14 = (int) _13;
  Pwm_Ipw_aFtmDutyCycle[_11][_14] = DutyCycle;

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_SetDutyCycle (uint16 DutyCycle, const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  uint16 FtmDutyCycle;
  Std_ReturnType RetVal;
  Std_ReturnType D.5894;

  <bb 2> :
  RetVal = 0;
  FtmDutyCycle = 0;
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmChConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->ChannelInstanceId;
  _4 = (int) _3;
  _5 = Ftm_Pwm_Ip_aPeriod[_4];
  _6 = (long unsigned int) _5;
  _7 = (long unsigned int) DutyCycle;
  _8 = _6 * _7;
  _9 = _8 / 32768;
  FtmDutyCycle = (uint16) _9;
  _10 = IpConfig->ChannelInstanceId;
  _11 = IpConfig->FtmChConfig;
  _12 = _11->ChannelId;
  Ftm_Pwm_Ip_UpdatePwmDutyCycleChannel (_10, _12, FtmDutyCycle, 1);
  _13 = IpConfig->ChannelInstanceId;
  _14 = (int) _13;
  _15 = IpConfig->FtmChConfig;
  _16 = _15->ChannelId;
  _17 = (int) _16;
  Pwm_Ipw_aFtmDutyCycle[_14][_17] = DutyCycle;

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  D.5894 = RetVal;

  <bb 9> :
<L6>:
  return D.5894;

}


Pwm_Ipw_DeInitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  Ftm_Pwm_Ip_DeInit (_3);

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_DeInit (const struct Pwm_IpwChannelConfigType * const IpConfig, Pwm_OutputStateType ChannelIdleState)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = 0;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


Pwm_Ipw_InitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  uint8 ChannelId;
  uint8 Index;

  <bb 2> :
  Index = 0;
  ChannelId = 0;
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L7> [INV], case 0: <L6> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  _4 = IpConfig->FtmInsConfig;
  Ftm_Pwm_Ip_Init (_3, _4);
  Index = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _5 = IpConfig->FtmInsConfig;
  _6 = _5->ConfiguredChArray;
  _7 = (unsigned int) Index;
  _8 = _7 * 4;
  _9 = _6 + _8;
  _10 = *_9;
  ChannelId = _10->ChannelId;
  _11 = IpConfig->FtmInsConfig;
  _12 = _11->ConfiguredChArray;
  _13 = (unsigned int) Index;
  _14 = _13 * 4;
  _15 = _12 + _14;
  _16 = *_15;
  _17 = IpConfig->InstanceId;
  _18 = (int) _17;
  _19 = (int) ChannelId;
  _20 = _16->Polarity;
  Ftm_Pwm_Ip_aPolarity[_18][_19] = _20;
  Index.0_21 = Index;
  Index = Index.0_21 + 1;

  <bb 6> :
  _22 = IpConfig->FtmInsConfig;
  _23 = _22->NoOfConfiguredCh;
  if (Index < _23)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  goto <bb 10>; [INV]

  <bb 8> :
<L6>:
  goto <bb 10>; [INV]

  <bb 9> :
<L7>:

  <bb 10> :
  return;

}


Pwm_Ipw_Init (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  _7 = IpConfig->ChannelDutyCycle;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = _7;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


