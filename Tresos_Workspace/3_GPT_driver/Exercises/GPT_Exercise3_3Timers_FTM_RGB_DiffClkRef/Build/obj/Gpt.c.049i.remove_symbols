
Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Gpt_Ipw_GetPredefTimerValue/39 (Gpt_Ipw_GetPredefTimerValue) @0e0288c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_GetPredefTimerValue/25 
  Calls: 
EcuM_CheckWakeup/38 (EcuM_CheckWakeup) @0e028700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_ProcessCommonInterrupt/24 
  Calls: 
EcuM_SetWakeupEvent/37 (EcuM_SetWakeupEvent) @0e028460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_CheckWakeup/23 
  Calls: 
Gpt_Ipw_DisableInterrupt/36 (Gpt_Ipw_DisableInterrupt) @0e017c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_DisableWakeup/21 Gpt_DisableNotification/19 Gpt_CheckStatusNotificationEnabled/10 Gpt_CheckStatusWakeupEnabled/11 
  Calls: 
Gpt_Ipw_StopTimer/35 (Gpt_Ipw_StopTimer) @0e0177e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_StopTimer/17 Gpt_CheckStatusWakeupEnabled/11 
  Calls: 
Gpt_Ipw_StartTimer/34 (Gpt_Ipw_StartTimer) @0e017620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_StartTimer/16 
  Calls: 
Gpt_Ipw_EnableInterrupt/33 (Gpt_Ipw_EnableInterrupt) @0e017460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_EnableWakeup/22 Gpt_EnableNotification/18 Gpt_StartTimer/16 Gpt_CheckStatusNotificationEnabled/10 Gpt_CheckStatusWakeupEnabled/11 
  Calls: 
Gpt_Ipw_GetTimeElapsed/32 (Gpt_Ipw_GetTimeElapsed) @0e017000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_StopTimer/17 Gpt_GetTimeRemaining/15 Gpt_GetTimeElapsed/14 Gpt_CheckStatusWakeupEnabled/11 
  Calls: 
Det_ReportRuntimeError/31 (Det_ReportRuntimeError) @0dfe6a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_StartTimer/16 Gpt_ValidateMode/8 Gpt_ValidateChannelStatus/7 
  Calls: 
Gpt_Ipw_StopPredefTimer/30 (Gpt_Ipw_StopPredefTimer) @0dfe6000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_SetMode/20 Gpt_DeInit/13 
  Calls: 
Gpt_Ipw_DeInit/29 (Gpt_Ipw_DeInit) @0dfe6ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_DeInit/13 
  Calls: 
Gpt_Ipw_Init/28 (Gpt_Ipw_Init) @0dfe6b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_Init/12 
  Calls: 
Gpt_Ipw_InitInstances/27 (Gpt_Ipw_InitInstances) @0dfe69a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_Init/12 
  Calls: 
Gpt_Ipw_StartPredefTimer/26 (Gpt_Ipw_StartPredefTimer) @0dfe68c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Gpt_SetMode/20 Gpt_Init/12 
  Calls: 
Gpt_GetPredefTimerValue/25 (Gpt_GetPredefTimerValue) @0dfe6460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_GetPredefTimerValue/39 Gpt_ValidateMode/8 
Gpt_ProcessCommonInterrupt/24 (Gpt_ProcessCommonInterrupt) @0dfe61c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_eMode/3 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_eMode/3 (read) Gpt_aChannelInfo/5 (read) Gpt_aChannelInfo/5 (write) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: EcuM_CheckWakeup/38 
   Indirect call Num speculative call targets: 0
Gpt_CheckWakeup/23 (Gpt_CheckWakeup) @0dccdd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_aChannelInfo/5 (write) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: EcuM_SetWakeupEvent/37 Gpt_ConvertChannelIndexToChannel/9 
Gpt_EnableWakeup/22 (Gpt_EnableWakeup) @0dccd7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_eMode/3 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_EnableInterrupt/33 
Gpt_DisableWakeup/21 (Gpt_DisableWakeup) @0dccd2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_eMode/3 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_DisableInterrupt/36 
Gpt_SetMode/20 (Gpt_SetMode) @0dccdee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_eMode/3 (write) Gpt_eMode/3 (read) Gpt_pConfig/4 (read) Gpt_eMode/3 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_CheckStatusNotificationEnabled/10 Gpt_Ipw_StartPredefTimer/26 Gpt_Ipw_StopPredefTimer/30 Gpt_CheckStatusWakeupEnabled/11 
Gpt_DisableNotification/19 (Gpt_DisableNotification) @0dccdc40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_eMode/3 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_DisableInterrupt/36 
Gpt_EnableNotification/18 (Gpt_EnableNotification) @0dccd9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_eMode/3 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_EnableInterrupt/33 
Gpt_StopTimer/17 (Gpt_StopTimer) @0dccd700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_aStopTime/6 (write) Gpt_aChannelInfo/5 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_StopTimer/35 Gpt_Ipw_GetTimeElapsed/32 
Gpt_StartTimer/16 (Gpt_StartTimer) @0dccd460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Det_ReportRuntimeError/31 Gpt_Ipw_StartTimer/34 Gpt_Ipw_EnableInterrupt/33 Gpt_ValidateChannelStatus/7 
Gpt_GetTimeRemaining/15 (Gpt_GetTimeRemaining) @0dccd1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_aStopTime/6 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_GetTimeElapsed/32 
Gpt_GetTimeElapsed/14 (Gpt_GetTimeElapsed) @0dcadd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_aStopTime/6 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_GetTimeElapsed/32 
Gpt_DeInit/13 (Gpt_DeInit) @0dcad7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aStopTime/6 (write) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_StopPredefTimer/30 Gpt_Ipw_DeInit/29 Gpt_ConvertChannelIndexToChannel/9 Gpt_ValidateChannelStatus/7 Gpt_ConvertChannelIndexToChannel/9 
Gpt_Init/12 (Gpt_Init) @0dcadee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Gpt_pConfig/4 (write) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aChannelInfo/5 (write) Gpt_aStopTime/6 (write) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_eMode/3 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gpt_Ipw_Init/28 Gpt_ConvertChannelIndexToChannel/9 Gpt_Ipw_InitInstances/27 Gpt_Ipw_StartPredefTimer/26 
Gpt_CheckStatusWakeupEnabled/11 (Gpt_CheckStatusWakeupEnabled) @0dcadc40
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (write) Gpt_aStopTime/6 (write) Gpt_aChannelInfo/5 (write) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Gpt_SetMode/20 
  Calls: Gpt_Ipw_StopTimer/35 Gpt_Ipw_GetTimeElapsed/32 Gpt_Ipw_DisableInterrupt/36 Gpt_Ipw_EnableInterrupt/33 Gpt_ConvertChannelIndexToChannel/9 
Gpt_CheckStatusNotificationEnabled/10 (Gpt_CheckStatusNotificationEnabled) @0dcad9a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_aChannelInfo/5 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) Gpt_pConfig/4 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Gpt_SetMode/20 
  Calls: Gpt_Ipw_DisableInterrupt/36 Gpt_Ipw_EnableInterrupt/33 Gpt_ConvertChannelIndexToChannel/9 
Gpt_ConvertChannelIndexToChannel/9 (Gpt_ConvertChannelIndexToChannel) @0dcad700
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Gpt_pConfig/4 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Gpt_CheckWakeup/23 Gpt_DeInit/13 Gpt_DeInit/13 Gpt_Init/12 Gpt_CheckStatusNotificationEnabled/10 Gpt_CheckStatusWakeupEnabled/11 
  Calls: 
Gpt_ValidateMode/8 (Gpt_ValidateMode) @0dcad460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Gpt_eMode/3 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Gpt_GetPredefTimerValue/25 
  Calls: Det_ReportRuntimeError/31 
Gpt_ValidateChannelStatus/7 (Gpt_ValidateChannelStatus) @0dcad1c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: Gpt_aChannelInfo/5 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Gpt_StartTimer/16 Gpt_DeInit/13 
  Calls: Det_ReportRuntimeError/31 
Gpt_aStopTime/6 (Gpt_aStopTime) @0da41dc8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Gpt_GetTimeRemaining/15 (read) Gpt_CheckStatusWakeupEnabled/11 (write) Gpt_Init/12 (write) Gpt_DeInit/13 (write) Gpt_GetTimeElapsed/14 (read) Gpt_StopTimer/17 (write) 
  Availability: available
  Varpool flags:
Gpt_aChannelInfo/5 (Gpt_aChannelInfo) @0da41d38
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Gpt_DeInit/13 (write) Gpt_StopTimer/17 (read) Gpt_CheckStatusWakeupEnabled/11 (write) Gpt_CheckStatusWakeupEnabled/11 (write) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_EnableWakeup/22 (write) Gpt_Init/12 (write) Gpt_DeInit/13 (write) Gpt_GetTimeElapsed/14 (read) Gpt_Init/12 (write) Gpt_Init/12 (write) Gpt_GetTimeRemaining/15 (read) Gpt_StartTimer/16 (write) Gpt_DeInit/13 (write) Gpt_StopTimer/17 (write) Gpt_Init/12 (write) Gpt_DeInit/13 (write) Gpt_DisableWakeup/21 (write) Gpt_CheckWakeup/23 (write) Gpt_CheckWakeup/23 (read) Gpt_ValidateChannelStatus/7 (read) Gpt_StopTimer/17 (write) Gpt_EnableNotification/18 (write) Gpt_DisableNotification/19 (read) Gpt_DisableNotification/19 (write) Gpt_DisableWakeup/21 (read) Gpt_ProcessCommonInterrupt/24 (write) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (write) 
  Availability: available
  Varpool flags:
Gpt_pConfig/4 (Gpt_pConfig) @0da41ca8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Gpt_DeInit/13 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckWakeup/23 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_CheckStatusNotificationEnabled/10 (read) Gpt_Init/12 (read) Gpt_Init/12 (read) Gpt_Init/12 (read) Gpt_DeInit/13 (read) Gpt_DeInit/13 (read) Gpt_DeInit/13 (write) Gpt_Init/12 (read) Gpt_GetTimeElapsed/14 (read) Gpt_GetTimeElapsed/14 (read) Gpt_GetTimeElapsed/14 (read) Gpt_DeInit/13 (read) Gpt_GetTimeRemaining/15 (read) Gpt_GetTimeRemaining/15 (read) Gpt_GetTimeRemaining/15 (read) Gpt_StartTimer/16 (read) Gpt_StartTimer/16 (read) Gpt_StartTimer/16 (read) Gpt_StopTimer/17 (read) Gpt_StopTimer/17 (read) Gpt_EnableNotification/18 (read) Gpt_EnableNotification/18 (read) Gpt_Init/12 (write) Gpt_StartTimer/16 (read) Gpt_DisableNotification/19 (read) Gpt_EnableWakeup/22 (read) Gpt_EnableWakeup/22 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_StopTimer/17 (read) Gpt_DisableWakeup/21 (read) Gpt_CheckWakeup/23 (read) Gpt_ConvertChannelIndexToChannel/9 (read) Gpt_StopTimer/17 (read) Gpt_DisableNotification/19 (read) Gpt_DisableNotification/19 (read) Gpt_SetMode/20 (read) Gpt_SetMode/20 (read) Gpt_DisableWakeup/21 (read) Gpt_DisableWakeup/21 (read) Gpt_CheckStatusWakeupEnabled/11 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (read) Gpt_GetPredefTimerValue/25 (read) 
  Availability: available
  Varpool flags:
Gpt_eMode/3 (Gpt_eMode) @0da41c18
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Gpt_EnableWakeup/22 (read) Gpt_ValidateMode/8 (read) Gpt_Init/12 (write) Gpt_SetMode/20 (read) Gpt_DisableWakeup/21 (read) Gpt_EnableNotification/18 (read) Gpt_DisableNotification/19 (read) Gpt_SetMode/20 (write) Gpt_SetMode/20 (write) Gpt_ProcessCommonInterrupt/24 (read) Gpt_ProcessCommonInterrupt/24 (read) 
  Availability: available
  Varpool flags: initialized
Gpt_GetPredefTimerValue (Gpt_PredefTimerType PredefTimer, uint32 * TimeValuePtr)
{
  uint32 coreID;
  Gpt_ChannelType channel;
  Std_ReturnType returnValue;
  Std_ReturnType D.6336;
  const struct Gpt_ConfigType * _1;
  const struct Gpt_HwPredefChannelConfigType * const * _2;
  unsigned int _3;
  unsigned int _4;
  const struct Gpt_HwPredefChannelConfigType * const * _5;
  const struct Gpt_HwPredefChannelConfigType * _6;
  Std_ReturnType _17;

  <bb 2> :
  coreID_8 = 0;
  returnValue_11 = Gpt_ValidateMode (13, coreID_8);
  if (returnValue_11 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  channel_15 = (Gpt_ChannelType) PredefTimer_14(D);
  _1 = Gpt_pConfig[coreID_8];
  _2 = _1->Gpt_pChannelPredefConfigType;
  _3 = (unsigned int) channel_15;
  _4 = _3 * 4;
  _5 = _2 + _4;
  _6 = *_5;
  Gpt_Ipw_GetPredefTimerValue (_6, PredefTimer_14(D), TimeValuePtr_12(D));
  goto <bb 5>; [INV]

  <bb 4> :
  *TimeValuePtr_12(D) = 0;

  <bb 5> :
  _17 = returnValue_11;

  <bb 6> :
<L3>:
  return _17;

}


Gpt_ProcessCommonInterrupt (uint8 channel)
{
  uint32 coreID;
  uint8 ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const struct Gpt_ConfigType * _2;
  const uint8[<unknown>] * _3;
  int _4;
  const struct Gpt_ConfigType * _5;
  const struct Gpt_ChannelConfigType[<unknown>] * _6;
  int _7;
  <unnamed type> _8;
  int _9;
  <unnamed type> _10;
  int _11;
  _Bool _12;
  const struct Gpt_ConfigType * _13;
  const struct Gpt_ChannelConfigType[<unknown>] * _14;
  int _15;
  void (*<T597>) (void) _16;
  <unnamed type> _17;
  int _18;
  _Bool _19;
  int _20;
  const struct Gpt_ConfigType * _21;
  const struct Gpt_ChannelConfigType[<unknown>] * _22;
  int _23;
  long unsigned int _24;

  <bb 2> :
  coreID_28 = 0;
  _1 = Gpt_pConfig[coreID_28];
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 3> :
  _2 = Gpt_pConfig[coreID_28];
  _3 = _2->u8GptChannelIdToIndexMap;
  _4 = (int) channel_30(D);
  ChannelIndex_31 = (*_3)[_4];
  _5 = Gpt_pConfig[coreID_28];
  _6 = _5->Gpt_pChannelConfig;
  _7 = (int) ChannelIndex_31;
  _8 = (*_6)[_7].Gpt_eChannelMode;
  if (_8 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _9 = (int) channel_30(D);
  Gpt_aChannelInfo[coreID_28][_9].eChannelStatus = 3;

  <bb 5> :
  _10 = Gpt_eMode[coreID_28];
  if (_10 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _11 = (int) channel_30(D);
  _12 = Gpt_aChannelInfo[coreID_28][_11].bNotificationEnabled;
  if (_12 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _13 = Gpt_pConfig[coreID_28];
  _14 = _13->Gpt_pChannelConfig;
  _15 = (int) ChannelIndex_31;
  _16 = (*_14)[_15].Gpt_pfNotification;
  _16 ();

  <bb 8> :
  _17 = Gpt_eMode[coreID_28];
  if (_17 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _18 = (int) channel_30(D);
  _19 = Gpt_aChannelInfo[coreID_28][_18].bWakeupEnabled;
  if (_19 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _20 = (int) channel_30(D);
  Gpt_aChannelInfo[coreID_28][_20].bWakeupGenerated = 1;
  _21 = Gpt_pConfig[coreID_28];
  _22 = _21->Gpt_pChannelConfig;
  _23 = (int) ChannelIndex_31;
  _24 = (*_22)[_23].Gpt_uWakeupSource;
  EcuM_CheckWakeup (_24);

  <bb 11> :

  <bb 12> :
<L12>:
  return;

}


Gpt_CheckWakeup (EcuM_WakeupSourceType wakeupSource)
{
  Gpt_ChannelType ChannelIndex;
  Gpt_ChannelType channel;
  uint32 coreID;
  const struct Gpt_ConfigType * _1;
  const struct Gpt_ChannelConfigType[<unknown>] * _2;
  int _3;
  long unsigned int _4;
  int _5;
  _Bool _6;
  int _7;
  unsigned char ChannelIndex.5_8;
  const struct Gpt_ConfigType * _9;
  unsigned char _10;

  <bb 2> :
  coreID_14 = 0;
  ChannelIndex_15 = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  channel_18 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_11, coreID_14);
  if (channel_18 <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _1 = Gpt_pConfig[coreID_14];
  _2 = _1->Gpt_pChannelConfig;
  _3 = (int) ChannelIndex_11;
  _4 = (*_2)[_3].Gpt_uWakeupSource;
  if (wakeupSource_19(D) == _4)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _5 = (int) channel_18;
  _6 = Gpt_aChannelInfo[coreID_14][_5].bWakeupGenerated;
  if (_6 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = (int) channel_18;
  Gpt_aChannelInfo[coreID_14][_7].bWakeupGenerated = 0;
  EcuM_SetWakeupEvent (wakeupSource_19(D));
  goto <bb 9>; [INV]

  <bb 7> :
  ChannelIndex.5_8 = ChannelIndex_11;
  ChannelIndex_22 = ChannelIndex.5_8 + 1;

  <bb 8> :
  # ChannelIndex_11 = PHI <ChannelIndex_15(2), ChannelIndex_22(7)>
  _9 = Gpt_pConfig[coreID_14];
  _10 = _9->channelCount;
  if (ChannelIndex_11 < _10)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :

  <bb 10> :
<L9>:
  return;

}


Gpt_EnableWakeup (Gpt_ChannelType channel)
{
  uint32 coreID;
  uint8 ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  int _4;
  <unnamed type> _5;
  const struct Gpt_ConfigType * _6;
  const struct Gpt_ChannelConfigType[<unknown>] * _7;
  int _8;
  struct Gpt_Ipw_HwChannelConfigType * _9;

  <bb 2> :
  coreID_11 = 0;
  _1 = Gpt_pConfig[coreID_11];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_13(D);
  ChannelIndex_14 = (*_2)[_3];
  _4 = (int) channel_13(D);
  Gpt_aChannelInfo[coreID_11][_4].bWakeupEnabled = 1;
  _5 = Gpt_eMode[coreID_11];
  if (_5 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = Gpt_pConfig[coreID_11];
  _7 = _6->Gpt_pChannelConfig;
  _8 = (int) ChannelIndex_14;
  _9 = (*_7)[_8].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_EnableInterrupt (_9);

  <bb 4> :

  <bb 5> :
<L2>:
  return;

}


Gpt_DisableWakeup (Gpt_ChannelType channel)
{
  uint32 coreID;
  uint8 ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  int _4;
  <unnamed type> _5;
  const struct Gpt_ConfigType * _6;
  const struct Gpt_ChannelConfigType[<unknown>] * _7;
  int _8;
  <unnamed type> _9;
  int _10;
  <unnamed type> _11;
  const struct Gpt_ConfigType * _12;
  const struct Gpt_ChannelConfigType[<unknown>] * _13;
  int _14;
  struct Gpt_Ipw_HwChannelConfigType * _15;

  <bb 2> :
  coreID_17 = 0;
  _1 = Gpt_pConfig[coreID_17];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_19(D);
  ChannelIndex_20 = (*_2)[_3];
  _4 = (int) channel_19(D);
  Gpt_aChannelInfo[coreID_17][_4].bWakeupEnabled = 0;
  _5 = Gpt_eMode[coreID_17];
  if (_5 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _6 = Gpt_pConfig[coreID_17];
  _7 = _6->Gpt_pChannelConfig;
  _8 = (int) ChannelIndex_20;
  _9 = (*_7)[_8].Gpt_eChannelMode;
  if (_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _10 = (int) channel_19(D);
  _11 = Gpt_aChannelInfo[coreID_17][_10].eChannelStatus;
  if (_11 != 4)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _12 = Gpt_pConfig[coreID_17];
  _13 = _12->Gpt_pChannelConfig;
  _14 = (int) ChannelIndex_20;
  _15 = (*_13)[_14].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_DisableInterrupt (_15);

  <bb 6> :

  <bb 7> :
<L5>:
  return;

}


Gpt_SetMode (Gpt_ModeType Mode)
{
  uint32 coreID;
  const struct Gpt_ConfigType * _1;
  <unnamed type> _2;
  const struct Gpt_ConfigType * _3;

  <bb 2> :
  coreID_6 = 0;
  if (Mode_7(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Gpt_CheckStatusWakeupEnabled (coreID_6);
  _1 = Gpt_pConfig[coreID_6];
  Gpt_Ipw_StopPredefTimer (_1);
  Gpt_eMode[coreID_6] = 1;
  goto <bb 8>; [INV]

  <bb 4> :
  if (Mode_7(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _2 = Gpt_eMode[coreID_6];
  if (_2 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _3 = Gpt_pConfig[coreID_6];
  Gpt_Ipw_StartPredefTimer (_3);

  <bb 7> :
  Gpt_CheckStatusNotificationEnabled (coreID_6);
  Gpt_eMode[coreID_6] = 0;

  <bb 8> :

  <bb 9> :
<L8>:
  return;

}


Gpt_DisableNotification (Gpt_ChannelType channel)
{
  uint32 coreID;
  uint8 ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  int _4;
  <unnamed type> _5;
  const struct Gpt_ConfigType * _6;
  const struct Gpt_ChannelConfigType[<unknown>] * _7;
  int _8;
  <unnamed type> _9;
  int _10;
  <unnamed type> _11;
  const struct Gpt_ConfigType * _12;
  const struct Gpt_ChannelConfigType[<unknown>] * _13;
  int _14;
  struct Gpt_Ipw_HwChannelConfigType * _15;

  <bb 2> :
  coreID_17 = 0;
  _1 = Gpt_pConfig[coreID_17];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_19(D);
  ChannelIndex_20 = (*_2)[_3];
  _4 = (int) channel_19(D);
  Gpt_aChannelInfo[coreID_17][_4].bNotificationEnabled = 0;
  _5 = Gpt_eMode[coreID_17];
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _6 = Gpt_pConfig[coreID_17];
  _7 = _6->Gpt_pChannelConfig;
  _8 = (int) ChannelIndex_20;
  _9 = (*_7)[_8].Gpt_eChannelMode;
  if (_9 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _10 = (int) channel_19(D);
  _11 = Gpt_aChannelInfo[coreID_17][_10].eChannelStatus;
  if (_11 != 4)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _12 = Gpt_pConfig[coreID_17];
  _13 = _12->Gpt_pChannelConfig;
  _14 = (int) ChannelIndex_20;
  _15 = (*_13)[_14].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_DisableInterrupt (_15);

  <bb 6> :

  <bb 7> :
<L5>:
  return;

}


Gpt_EnableNotification (Gpt_ChannelType channel)
{
  uint32 coreID;
  uint8 ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  int _4;
  <unnamed type> _5;
  const struct Gpt_ConfigType * _6;
  const struct Gpt_ChannelConfigType[<unknown>] * _7;
  int _8;
  struct Gpt_Ipw_HwChannelConfigType * _9;

  <bb 2> :
  coreID_11 = 0;
  _1 = Gpt_pConfig[coreID_11];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_13(D);
  ChannelIndex_14 = (*_2)[_3];
  _4 = (int) channel_13(D);
  Gpt_aChannelInfo[coreID_11][_4].bNotificationEnabled = 1;
  _5 = Gpt_eMode[coreID_11];
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = Gpt_pConfig[coreID_11];
  _7 = _6->Gpt_pChannelConfig;
  _8 = (int) ChannelIndex_14;
  _9 = (*_7)[_8].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_EnableInterrupt (_9);

  <bb 4> :

  <bb 5> :
<L2>:
  return;

}


Gpt_StopTimer (Gpt_ChannelType channel)
{
  uint32 coreID;
  Gpt_ChannelType ChannelIndex;
  Gpt_ValueType uElapsedTime;
  struct Gpt_HwChannelInfoType * pRetHwChannelInfo;
  struct Gpt_HwChannelInfoType returnHwChannelInfo;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  const struct Gpt_ConfigType * _4;
  const struct Gpt_ChannelConfigType[<unknown>] * _5;
  int _6;
  struct Gpt_Ipw_HwChannelConfigType * _7;
  int _8;
  <unnamed type> _9;
  const struct Gpt_ConfigType * _10;
  const struct Gpt_ChannelConfigType[<unknown>] * _11;
  int _12;
  struct Gpt_Ipw_HwChannelConfigType * _13;
  _Bool _14;
  const struct Gpt_ConfigType * _15;
  const struct Gpt_ChannelConfigType[<unknown>] * _16;
  int _17;
  <unnamed type> _18;
  int _19;
  int _20;
  int _21;

  <bb 2> :
  returnHwChannelInfo.bChannelRollover = 0;
  returnHwChannelInfo.uTargetTime = 0;
  pRetHwChannelInfo_26 = &returnHwChannelInfo;
  uElapsedTime_27 = 0;
  coreID_28 = 0;
  _1 = Gpt_pConfig[coreID_28];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_29(D);
  ChannelIndex_30 = (*_2)[_3];
  _4 = Gpt_pConfig[coreID_28];
  _5 = _4->Gpt_pChannelConfig;
  _6 = (int) ChannelIndex_30;
  _7 = (*_5)[_6].Gpt_Ipw_HwChannelConfig;
  uElapsedTime_32 = Gpt_Ipw_GetTimeElapsed (_7, pRetHwChannelInfo_26);
  _8 = (int) channel_29(D);
  _9 = Gpt_aChannelInfo[coreID_28][_8].eChannelStatus;
  if (_9 == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _10 = Gpt_pConfig[coreID_28];
  _11 = _10->Gpt_pChannelConfig;
  _12 = (int) ChannelIndex_30;
  _13 = (*_11)[_12].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_StopTimer (_13);
  _14 = returnHwChannelInfo.bChannelRollover;
  if (_14 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _15 = Gpt_pConfig[coreID_28];
  _16 = _15->Gpt_pChannelConfig;
  _17 = (int) ChannelIndex_30;
  _18 = (*_16)[_17].Gpt_eChannelMode;
  if (_18 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _19 = (int) channel_29(D);
  Gpt_aChannelInfo[coreID_28][_19].eChannelStatus = 3;
  goto <bb 7>; [INV]

  <bb 6> :
  _20 = (int) channel_29(D);
  Gpt_aStopTime[coreID_28][_20] = uElapsedTime_32;
  _21 = (int) channel_29(D);
  Gpt_aChannelInfo[coreID_28][_21].eChannelStatus = 2;

  <bb 7> :

  <bb 8> :
  returnHwChannelInfo ={v} {CLOBBER};

  <bb 9> :
<L7>:
  return;

}


Gpt_StartTimer (Gpt_ChannelType channel, Gpt_ValueType value)
{
  uint32 coreID;
  Std_ReturnType returnValue;
  uint8 ChannelIndex;
  unsigned char _1;
  const struct Gpt_ConfigType * _2;
  const uint8[<unknown>] * _3;
  int _4;
  const struct Gpt_ConfigType * _5;
  const struct Gpt_ChannelConfigType[<unknown>] * _6;
  int _7;
  <unnamed type> _8;
  const struct Gpt_ConfigType * _9;
  const struct Gpt_ChannelConfigType[<unknown>] * _10;
  int _11;
  struct Gpt_Ipw_HwChannelConfigType * _12;
  int _13;
  const struct Gpt_ConfigType * _14;
  const struct Gpt_ChannelConfigType[<unknown>] * _15;
  int _16;
  struct Gpt_Ipw_HwChannelConfigType * _17;

  <bb 2> :
  coreID_20 = 0;
  _1 = Gpt_ValidateChannelStatus (5, channel_22(D), coreID_20);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _2 = Gpt_pConfig[coreID_20];
  _3 = _2->u8GptChannelIdToIndexMap;
  _4 = (int) channel_22(D);
  ChannelIndex_24 = (*_3)[_4];
  _5 = Gpt_pConfig[coreID_20];
  _6 = _5->Gpt_pChannelConfig;
  _7 = (int) ChannelIndex_24;
  _8 = (*_6)[_7].Gpt_eChannelMode;
  if (_8 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _9 = Gpt_pConfig[coreID_20];
  _10 = _9->Gpt_pChannelConfig;
  _11 = (int) ChannelIndex_24;
  _12 = (*_10)[_11].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_EnableInterrupt (_12);

  <bb 5> :
  _13 = (int) channel_22(D);
  Gpt_aChannelInfo[coreID_20][_13].eChannelStatus = 4;
  _14 = Gpt_pConfig[coreID_20];
  _15 = _14->Gpt_pChannelConfig;
  _16 = (int) ChannelIndex_24;
  _17 = (*_15)[_16].Gpt_Ipw_HwChannelConfig;
  returnValue_29 = Gpt_Ipw_StartTimer (_17, value_27(D));
  if (returnValue_29 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  Det_ReportRuntimeError (100, 0, 5, 43);

  <bb 7> :

  <bb 8> :
<L6>:
  return;

}


Gpt_GetTimeRemaining (Gpt_ChannelType channel)
{
  uint32 coreID;
  Gpt_ValueType returnValue;
  Gpt_ChannelType ChannelIndex;
  struct Gpt_HwChannelInfoType * pRetHwChannelInfo;
  struct Gpt_HwChannelInfoType returnHwChannelInfo;
  Gpt_ValueType D.6249;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  const struct Gpt_ConfigType * _4;
  const struct Gpt_ChannelConfigType[<unknown>] * _5;
  int _6;
  struct Gpt_Ipw_HwChannelConfigType * _7;
  int _8;
  <unnamed type> _9;
  _Bool _10;
  const struct Gpt_ConfigType * _11;
  const struct Gpt_ChannelConfigType[<unknown>] * _12;
  int _13;
  <unnamed type> _14;
  long unsigned int _15;
  long unsigned int _16;
  int _17;
  long unsigned int _18;
  Gpt_ValueType _36;

  <bb 2> :
  returnHwChannelInfo.bChannelRollover = 0;
  returnHwChannelInfo.uTargetTime = 0;
  pRetHwChannelInfo_24 = &returnHwChannelInfo;
  returnValue_25 = 0;
  coreID_26 = 0;
  _1 = Gpt_pConfig[coreID_26];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_27(D);
  ChannelIndex_28 = (*_2)[_3];
  _4 = Gpt_pConfig[coreID_26];
  _5 = _4->Gpt_pChannelConfig;
  _6 = (int) ChannelIndex_28;
  _7 = (*_5)[_6].Gpt_Ipw_HwChannelConfig;
  returnValue_30 = Gpt_Ipw_GetTimeElapsed (_7, pRetHwChannelInfo_24);
  _8 = (int) channel_27(D);
  _9 = Gpt_aChannelInfo[coreID_26][_8].eChannelStatus;
  switch (_9) <default: <L8> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L7> [INV], case 4: <L0> [INV]>

  <bb 3> :
<L0>:
  _10 = returnHwChannelInfo.bChannelRollover;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _11 = Gpt_pConfig[coreID_26];
  _12 = _11->Gpt_pChannelConfig;
  _13 = (int) ChannelIndex_28;
  _14 = (*_12)[_13].Gpt_eChannelMode;
  if (_14 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  returnValue_31 = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _15 = returnHwChannelInfo.uTargetTime;
  returnValue_32 = _15 - returnValue_30;

  <bb 7> :
  # returnValue_19 = PHI <returnValue_31(5), returnValue_32(6)>
  goto <bb 12>; [INV]

  <bb 8> :
<L5>:
  returnValue_35 = 0;
  goto <bb 12>; [INV]

  <bb 9> :
<L6>:
  _16 = returnHwChannelInfo.uTargetTime;
  _17 = (int) channel_27(D);
  _18 = Gpt_aStopTime[coreID_26][_17];
  returnValue_34 = _16 - _18;
  goto <bb 12>; [INV]

  <bb 10> :
<L7>:
  returnValue_33 = 0;
  goto <bb 12>; [INV]

  <bb 11> :
<L8>:

  <bb 12> :
  # returnValue_20 = PHI <returnValue_19(7), returnValue_35(8), returnValue_34(9), returnValue_33(10), returnValue_30(11)>
  _36 = returnValue_20;
  returnHwChannelInfo ={v} {CLOBBER};

  <bb 13> :
<L11>:
  return _36;

}


Gpt_GetTimeElapsed (Gpt_ChannelType channel)
{
  uint32 coreID;
  Gpt_ValueType returnValue;
  Gpt_ChannelType ChannelIndex;
  struct Gpt_HwChannelInfoType * pRetHwChannelInfo;
  struct Gpt_HwChannelInfoType returnHwChannelInfo;
  Gpt_ValueType D.6242;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  const struct Gpt_ConfigType * _4;
  const struct Gpt_ChannelConfigType[<unknown>] * _5;
  int _6;
  struct Gpt_Ipw_HwChannelConfigType * _7;
  int _8;
  <unnamed type> _9;
  _Bool _10;
  const struct Gpt_ConfigType * _11;
  const struct Gpt_ChannelConfigType[<unknown>] * _12;
  int _13;
  <unnamed type> _14;
  int _15;
  Gpt_ValueType _32;

  <bb 2> :
  returnHwChannelInfo.bChannelRollover = 0;
  returnHwChannelInfo.uTargetTime = 0;
  pRetHwChannelInfo_21 = &returnHwChannelInfo;
  returnValue_22 = 0;
  coreID_23 = 0;
  _1 = Gpt_pConfig[coreID_23];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) channel_24(D);
  ChannelIndex_25 = (*_2)[_3];
  _4 = Gpt_pConfig[coreID_23];
  _5 = _4->Gpt_pChannelConfig;
  _6 = (int) ChannelIndex_25;
  _7 = (*_5)[_6].Gpt_Ipw_HwChannelConfig;
  returnValue_27 = Gpt_Ipw_GetTimeElapsed (_7, pRetHwChannelInfo_21);
  _8 = (int) channel_24(D);
  _9 = Gpt_aChannelInfo[coreID_23][_8].eChannelStatus;
  switch (_9) <default: <L8> [INV], case 1: <L5> [INV], case 2: <L6> [INV], case 3: <L7> [INV], case 4: <L0> [INV]>

  <bb 3> :
<L0>:
  _10 = returnHwChannelInfo.bChannelRollover;
  if (_10 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _11 = Gpt_pConfig[coreID_23];
  _12 = _11->Gpt_pChannelConfig;
  _13 = (int) ChannelIndex_25;
  _14 = (*_12)[_13].Gpt_eChannelMode;
  if (_14 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  returnValue_28 = returnHwChannelInfo.uTargetTime;

  <bb 6> :
  # returnValue_16 = PHI <returnValue_27(3), returnValue_27(4), returnValue_28(5)>
  goto <bb 11>; [INV]

  <bb 7> :
<L5>:
  returnValue_31 = 0;
  goto <bb 11>; [INV]

  <bb 8> :
<L6>:
  _15 = (int) channel_24(D);
  returnValue_30 = Gpt_aStopTime[coreID_23][_15];
  goto <bb 11>; [INV]

  <bb 9> :
<L7>:
  returnValue_29 = returnHwChannelInfo.uTargetTime;
  goto <bb 11>; [INV]

  <bb 10> :
<L8>:

  <bb 11> :
  # returnValue_17 = PHI <returnValue_16(6), returnValue_31(7), returnValue_30(8), returnValue_29(9), returnValue_27(10)>
  _32 = returnValue_17;
  returnHwChannelInfo ={v} {CLOBBER};

  <bb 12> :
<L11>:
  return _32;

}


Gpt_DeInit ()
{
  uint32 coreID;
  Std_ReturnType allChannelStatus;
  Gpt_ChannelType ChannelIndex;
  Gpt_ChannelType channel;
  unsigned char _1;
  unsigned char ChannelIndex.1_2;
  const struct Gpt_ConfigType * _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  const struct Gpt_ConfigType * _10;
  const struct Gpt_ChannelConfigType[<unknown>] * _11;
  int _12;
  struct Gpt_Ipw_HwChannelConfigType * _13;
  unsigned char ChannelIndex.2_14;
  const struct Gpt_ConfigType * _15;
  unsigned char _16;
  const struct Gpt_ConfigType * _17;

  <bb 2> :
  allChannelStatus_26 = 0;
  coreID_27 = 0;
  ChannelIndex_28 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  channel_31 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_18, coreID_27);
  _1 = Gpt_ValidateChannelStatus (2, channel_31, coreID_27);
  if (_1 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  allChannelStatus_34 = 1;
  goto <bb 7>; [INV]

  <bb 5> :
  ChannelIndex.1_2 = ChannelIndex_18;
  ChannelIndex_33 = ChannelIndex.1_2 + 1;

  <bb 6> :
  # ChannelIndex_18 = PHI <ChannelIndex_28(2), ChannelIndex_33(5)>
  _3 = Gpt_pConfig[coreID_27];
  _4 = _3->channelCount;
  if (ChannelIndex_18 < _4)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # allChannelStatus_20 = PHI <allChannelStatus_34(4), allChannelStatus_26(6)>
  if (allChannelStatus_20 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 8> :
  ChannelIndex_35 = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  channel_39 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_19, coreID_27);
  if (channel_39 <= 2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _5 = (int) channel_39;
  Gpt_aChannelInfo[coreID_27][_5].bNotificationEnabled = 0;
  _6 = (int) channel_39;
  Gpt_aChannelInfo[coreID_27][_6].bWakeupEnabled = 0;
  _7 = (int) channel_39;
  Gpt_aChannelInfo[coreID_27][_7].bWakeupGenerated = 0;
  _8 = (int) channel_39;
  Gpt_aChannelInfo[coreID_27][_8].eChannelStatus = 0;
  _9 = (int) channel_39;
  Gpt_aStopTime[coreID_27][_9] = 0;
  _10 = Gpt_pConfig[coreID_27];
  _11 = _10->Gpt_pChannelConfig;
  _12 = (int) ChannelIndex_19;
  _13 = (*_11)[_12].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_DeInit (_13);

  <bb 11> :
  ChannelIndex.2_14 = ChannelIndex_19;
  ChannelIndex_46 = ChannelIndex.2_14 + 1;

  <bb 12> :
  # ChannelIndex_19 = PHI <ChannelIndex_35(8), ChannelIndex_46(11)>
  _15 = Gpt_pConfig[coreID_27];
  _16 = _15->channelCount;
  if (ChannelIndex_19 < _16)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _17 = Gpt_pConfig[coreID_27];
  Gpt_Ipw_StopPredefTimer (_17);
  Gpt_pConfig[coreID_27] = 0B;

  <bb 14> :

  <bb 15> :
<L12>:
  return;

}


Gpt_Init (const struct Gpt_ConfigType * configPtr)
{
  uint32 coreID;
  Gpt_ChannelType channel;
  Gpt_ChannelType ChannelIndex;
  const struct Gpt_ConfigType * _1;
  const struct Gpt_ConfigType * _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  const struct Gpt_ConfigType * _8;
  const struct Gpt_ChannelConfigType[<unknown>] * _9;
  int _10;
  struct Gpt_Ipw_HwChannelConfigType * _11;
  unsigned char ChannelIndex.0_12;
  const struct Gpt_ConfigType * _13;
  unsigned char _14;

  <bb 2> :
  coreID_18 = 0;
  Gpt_pConfig[coreID_18] = configPtr_20(D);
  _1 = Gpt_pConfig[coreID_18];
  Gpt_Ipw_StartPredefTimer (_1);
  _2 = Gpt_pConfig[coreID_18];
  Gpt_Ipw_InitInstances (_2);
  ChannelIndex_24 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  channel_27 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_15, coreID_18);
  if (channel_27 <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = (int) channel_27;
  Gpt_aChannelInfo[coreID_18][_3].bNotificationEnabled = 0;
  _4 = (int) channel_27;
  Gpt_aChannelInfo[coreID_18][_4].bWakeupEnabled = 0;
  _5 = (int) channel_27;
  Gpt_aChannelInfo[coreID_18][_5].bWakeupGenerated = 0;
  _6 = (int) channel_27;
  Gpt_aChannelInfo[coreID_18][_6].eChannelStatus = 1;
  _7 = (int) channel_27;
  Gpt_aStopTime[coreID_18][_7] = 0;

  <bb 5> :
  _8 = Gpt_pConfig[coreID_18];
  _9 = _8->Gpt_pChannelConfig;
  _10 = (int) ChannelIndex_15;
  _11 = (*_9)[_10].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_Init (_11);
  ChannelIndex.0_12 = ChannelIndex_15;
  ChannelIndex_34 = ChannelIndex.0_12 + 1;

  <bb 6> :
  # ChannelIndex_15 = PHI <ChannelIndex_24(2), ChannelIndex_34(5)>
  _13 = Gpt_pConfig[coreID_18];
  _14 = _13->channelCount;
  if (ChannelIndex_15 < _14)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  Gpt_eMode[coreID_18] = 0;

  <bb 8> :
<L5>:
  return;

}


Gpt_CheckStatusWakeupEnabled (uint32 coreID)
{
  Gpt_ChannelType channel;
  Gpt_ChannelType ChannelIndex;
  Gpt_ValueType uElapsedTime;
  struct Gpt_HwChannelInfoType * pRetHwChannelInfo;
  struct Gpt_HwChannelInfoType returnHwChannelInfo;
  int _1;
  _Bool _2;
  const struct Gpt_ConfigType * _3;
  const struct Gpt_ChannelConfigType[<unknown>] * _4;
  int _5;
  struct Gpt_Ipw_HwChannelConfigType * _6;
  const struct Gpt_ConfigType * _7;
  const struct Gpt_ChannelConfigType[<unknown>] * _8;
  int _9;
  struct Gpt_Ipw_HwChannelConfigType * _10;
  const struct Gpt_ConfigType * _11;
  const struct Gpt_ChannelConfigType[<unknown>] * _12;
  int _13;
  struct Gpt_Ipw_HwChannelConfigType * _14;
  int _15;
  <unnamed type> _16;
  _Bool _17;
  const struct Gpt_ConfigType * _18;
  const struct Gpt_ChannelConfigType[<unknown>] * _19;
  int _20;
  <unnamed type> _21;
  int _22;
  int _23;
  int _24;
  const struct Gpt_ConfigType * _25;
  const struct Gpt_ChannelConfigType[<unknown>] * _26;
  int _27;
  struct Gpt_Ipw_HwChannelConfigType * _28;
  unsigned char ChannelIndex.3_29;
  const struct Gpt_ConfigType * _30;
  unsigned char _31;

  <bb 2> :
  returnHwChannelInfo.bChannelRollover = 0;
  returnHwChannelInfo.uTargetTime = 0;
  pRetHwChannelInfo_39 = &returnHwChannelInfo;
  uElapsedTime_40 = 0;
  ChannelIndex_41 = 0;
  goto <bb 13>; [INV]

  <bb 3> :
  channel_45 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_32, coreID_42(D));
  if (channel_45 <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  _1 = (int) channel_45;
  _2 = Gpt_aChannelInfo[coreID_42(D)][_1].bWakeupEnabled;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = Gpt_pConfig[coreID_42(D)];
  _4 = _3->Gpt_pChannelConfig;
  _5 = (int) ChannelIndex_32;
  _6 = (*_4)[_5].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_EnableInterrupt (_6);
  goto <bb 12>; [INV]

  <bb 6> :
  _7 = Gpt_pConfig[coreID_42(D)];
  _8 = _7->Gpt_pChannelConfig;
  _9 = (int) ChannelIndex_32;
  _10 = (*_8)[_9].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_DisableInterrupt (_10);
  _11 = Gpt_pConfig[coreID_42(D)];
  _12 = _11->Gpt_pChannelConfig;
  _13 = (int) ChannelIndex_32;
  _14 = (*_12)[_13].Gpt_Ipw_HwChannelConfig;
  uElapsedTime_48 = Gpt_Ipw_GetTimeElapsed (_14, pRetHwChannelInfo_39);
  _15 = (int) channel_45;
  _16 = Gpt_aChannelInfo[coreID_42(D)][_15].eChannelStatus;
  if (_16 == 4)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 7> :
  _17 = returnHwChannelInfo.bChannelRollover;
  if (_17 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _18 = Gpt_pConfig[coreID_42(D)];
  _19 = _18->Gpt_pChannelConfig;
  _20 = (int) ChannelIndex_32;
  _21 = (*_19)[_20].Gpt_eChannelMode;
  if (_21 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _22 = (int) channel_45;
  Gpt_aChannelInfo[coreID_42(D)][_22].eChannelStatus = 3;
  goto <bb 11>; [INV]

  <bb 10> :
  _23 = (int) channel_45;
  Gpt_aStopTime[coreID_42(D)][_23] = uElapsedTime_48;
  _24 = (int) channel_45;
  Gpt_aChannelInfo[coreID_42(D)][_24].eChannelStatus = 2;

  <bb 11> :
  _25 = Gpt_pConfig[coreID_42(D)];
  _26 = _25->Gpt_pChannelConfig;
  _27 = (int) ChannelIndex_32;
  _28 = (*_26)[_27].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_StopTimer (_28);

  <bb 12> :
  ChannelIndex.3_29 = ChannelIndex_32;
  ChannelIndex_54 = ChannelIndex.3_29 + 1;

  <bb 13> :
  # ChannelIndex_32 = PHI <ChannelIndex_41(2), ChannelIndex_54(12)>
  _30 = Gpt_pConfig[coreID_42(D)];
  _31 = _30->channelCount;
  if (ChannelIndex_32 < _31)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  returnHwChannelInfo ={v} {CLOBBER};
  return;

}


Gpt_CheckStatusNotificationEnabled (uint32 coreID)
{
  Gpt_ChannelType ChannelIndex;
  Gpt_ChannelType channel;
  int _1;
  _Bool _2;
  const struct Gpt_ConfigType * _3;
  const struct Gpt_ChannelConfigType[<unknown>] * _4;
  int _5;
  struct Gpt_Ipw_HwChannelConfigType * _6;
  int _7;
  <unnamed type> _8;
  const struct Gpt_ConfigType * _9;
  const struct Gpt_ChannelConfigType[<unknown>] * _10;
  int _11;
  <unnamed type> _12;
  const struct Gpt_ConfigType * _13;
  const struct Gpt_ChannelConfigType[<unknown>] * _14;
  int _15;
  struct Gpt_Ipw_HwChannelConfigType * _16;
  unsigned char ChannelIndex.4_17;
  const struct Gpt_ConfigType * _18;
  unsigned char _19;

  <bb 2> :
  ChannelIndex_23 = 0;
  goto <bb 10>; [INV]

  <bb 3> :
  channel_27 = Gpt_ConvertChannelIndexToChannel (ChannelIndex_20, coreID_25(D));
  if (channel_27 <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _1 = (int) channel_27;
  _2 = Gpt_aChannelInfo[coreID_25(D)][_1].bNotificationEnabled;
  if (_2 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = Gpt_pConfig[coreID_25(D)];
  _4 = _3->Gpt_pChannelConfig;
  _5 = (int) ChannelIndex_20;
  _6 = (*_4)[_5].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_EnableInterrupt (_6);
  goto <bb 9>; [INV]

  <bb 6> :
  _7 = (int) channel_27;
  _8 = Gpt_aChannelInfo[coreID_25(D)][_7].eChannelStatus;
  if (_8 != 4)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _9 = Gpt_pConfig[coreID_25(D)];
  _10 = _9->Gpt_pChannelConfig;
  _11 = (int) ChannelIndex_20;
  _12 = (*_10)[_11].Gpt_eChannelMode;
  if (_12 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _13 = Gpt_pConfig[coreID_25(D)];
  _14 = _13->Gpt_pChannelConfig;
  _15 = (int) ChannelIndex_20;
  _16 = (*_14)[_15].Gpt_Ipw_HwChannelConfig;
  Gpt_Ipw_DisableInterrupt (_16);

  <bb 9> :
  ChannelIndex.4_17 = ChannelIndex_20;
  ChannelIndex_30 = ChannelIndex.4_17 + 1;

  <bb 10> :
  # ChannelIndex_20 = PHI <ChannelIndex_23(2), ChannelIndex_30(9)>
  _18 = Gpt_pConfig[coreID_25(D)];
  _19 = _18->channelCount;
  if (ChannelIndex_20 < _19)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return;

}


Gpt_ConvertChannelIndexToChannel (Gpt_ChannelType ChannelIndex, uint32 coreID)
{
  Gpt_ChannelType Channel;
  Gpt_ChannelType D.6222;
  const struct Gpt_ConfigType * _1;
  const uint8[<unknown>] * _2;
  int _3;
  unsigned char _4;
  Gpt_ChannelType _11;

  <bb 2> :
  Channel_6 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = Gpt_pConfig[coreID_8(D)];
  _2 = _1->u8GptChannelIdToIndexMap;
  _3 = (int) Channel_5;
  _4 = (*_2)[_3];
  if (ChannelIndex_9(D) == _4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  goto <bb 7>; [INV]

  <bb 5> :
  Channel_10 = Channel_5 + 1;

  <bb 6> :
  # Channel_5 = PHI <Channel_6(2), Channel_10(5)>
  if (Channel_5 <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _11 = Channel_5;

  <bb 8> :
<L5>:
  return _11;

}


Gpt_ValidateMode (uint8 u8ServiceId, uint32 coreID)
{
  Std_ReturnType returnValue;
  Std_ReturnType D.6341;
  <unnamed type> _1;
  Std_ReturnType _10;

  <bb 2> :
  _1 = Gpt_eMode[coreID_5(D)];
  if (_1 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Det_ReportRuntimeError (100, 0, u8ServiceId_7(D), 12);
  returnValue_9 = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  returnValue_6 = 0;

  <bb 5> :
  # returnValue_2 = PHI <returnValue_9(3), returnValue_6(4)>
  _10 = returnValue_2;

  <bb 6> :
<L3>:
  return _10;

}


Gpt_ValidateChannelStatus (uint8 u8ServiceId, Gpt_ChannelType channel, uint32 coreID)
{
  Std_ReturnType returnValue;
  Std_ReturnType D.6236;
  int _1;
  <unnamed type> _2;
  Std_ReturnType _12;

  <bb 2> :
  returnValue_5 = 1;
  if (channel_6(D) <= 2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = (int) channel_6(D);
  _2 = Gpt_aChannelInfo[coreID_8(D)][_1].eChannelStatus;
  if (_2 == 4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Det_ReportRuntimeError (100, 0, u8ServiceId_10(D), 11);
  goto <bb 6>; [INV]

  <bb 5> :
  returnValue_9 = 0;

  <bb 6> :
  # returnValue_3 = PHI <returnValue_5(2), returnValue_5(4), returnValue_9(5)>
  _12 = returnValue_3;

  <bb 7> :
<L5>:
  return _12;

}


