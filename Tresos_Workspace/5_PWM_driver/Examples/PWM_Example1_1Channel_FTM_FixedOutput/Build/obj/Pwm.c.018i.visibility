
Marking local functions:


Marking externally visible functions: Pwm_DeInit/3 Pwm_Init/2


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Pwm_Ipw_DeInitInstance/7 (Pwm_Ipw_DeInitInstance) @0db3e460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_DeInit/3 
  Calls: 
Pwm_Ipw_DeInit/6 (Pwm_Ipw_DeInit) @0db3e380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_DeInit/3 
  Calls: 
Pwm_Ipw_Init/5 (Pwm_Ipw_Init) @0db3e1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Init/2 
  Calls: 
Pwm_Ipw_InitInstance/4 (Pwm_Ipw_InitInstance) @0db3e000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pwm_Init/2 
  Calls: 
Pwm_DeInit/3 (Pwm_DeInit) @0db34d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (write) Pwm_aState/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_Ipw_DeInitInstance/7 Pwm_Ipw_DeInit/6 
Pwm_Init/2 (Pwm_Init) @0db34a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pwm_aState/1 (write) Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (read) Pwm_aState/1 (write) Pwm_aState/1 (read) Pwm_aState/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pwm_Ipw_Init/5 Pwm_Ipw_InitInstance/4 
Pwm_aState/1 (Pwm_aState) @0db32558
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Pwm_Init/2 (write) Pwm_Init/2 (read) Pwm_Init/2 (read) Pwm_Init/2 (read) Pwm_Init/2 (write) Pwm_Init/2 (read) Pwm_Init/2 (read) Pwm_DeInit/3 (read) Pwm_DeInit/3 (read) Pwm_DeInit/3 (read) Pwm_DeInit/3 (read) Pwm_DeInit/3 (read) Pwm_DeInit/3 (write) Pwm_DeInit/3 (write) 
  Availability: available
  Varpool flags: initialized
Pwm_DeInit ()
{
  uint8 Index;
  uint32 CoreId;
  const struct Pwm_ConfigType * ConfigPtr;

  <bb 2> :
  CoreId = 0;
  Index = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = Pwm_aState[CoreId].PwmChannelConfigs[0];
  _2 = (unsigned int) Index;
  _3 = _2 * 24;
  _4 = _1 + _3;
  _5 = &_4->IpwChannelCfg;
  _6 = Pwm_aState[CoreId].PwmChannelConfigs[0];
  _7 = (unsigned int) Index;
  _8 = _7 * 24;
  _9 = _6 + _8;
  _10 = _9->ChannelIdleState;
  Pwm_Ipw_DeInit (_5, _10);
  Index.2_11 = Index;
  Index = Index.2_11 + 1;

  <bb 4> :
  _12 = Pwm_aState[CoreId].PwmConfig;
  _13 = _12->NumChannels;
  if (Index < _13)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  ConfigPtr = Pwm_aState[CoreId].PwmConfig;
  Index = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _14 = ConfigPtr->PwmInstancesConfig;
  _15 = (int) Index;
  _16 = &(*_14)[_15];
  Pwm_Ipw_DeInitInstance (_16);
  Index.3_17 = Index;
  Index = Index.3_17 + 1;

  <bb 7> :
  _18 = Pwm_aState[CoreId].PwmConfig;
  _19 = _18->NumInstances;
  if (Index < _19)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  Pwm_aState[CoreId].PwmConfig = 0B;
  Index = 0;
  goto <bb 10>; [INV]

  <bb 9> :
  _20 = (int) Index;
  Pwm_aState[CoreId].PwmChannelConfigs[_20] = 0B;
  Index.4_21 = Index;
  Index = Index.4_21 + 1;

  <bb 10> :
  if (Index == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return;

}


Pwm_Init (const struct Pwm_ConfigType * ConfigPtr)
{
  uint8 Index;
  uint32 CoreId;

  <bb 2> :
  CoreId = 0;
  Pwm_aState[CoreId].PwmConfig = ConfigPtr;
  Index = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = Pwm_aState[CoreId].PwmConfig;
  _2 = _1->PwmInstancesConfig;
  _3 = (int) Index;
  _4 = &(*_2)[_3];
  Pwm_Ipw_InitInstance (_4);
  Index.0_5 = Index;
  Index = Index.0_5 + 1;

  <bb 4> :
  _6 = Pwm_aState[CoreId].PwmConfig;
  _7 = _6->NumInstances;
  if (Index < _7)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  Index = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _8 = Pwm_aState[CoreId].PwmConfig;
  _9 = _8->PwmChannelsConfig;
  _10 = (int) Index;
  _11 = (int) Index;
  _12 = &(*_9)[_10];
  Pwm_aState[CoreId].PwmChannelConfigs[_11] = _12;
  _13 = Pwm_aState[CoreId].PwmConfig;
  _14 = _13->PwmChannelsConfig;
  _15 = (int) Index;
  _16 = &(*_14)[_15].IpwChannelCfg;
  Pwm_Ipw_Init (_16);
  Index.1_17 = Index;
  Index = Index.1_17 + 1;

  <bb 7> :
  _18 = Pwm_aState[CoreId].PwmConfig;
  _19 = _18->NumChannels;
  if (Index < _19)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


