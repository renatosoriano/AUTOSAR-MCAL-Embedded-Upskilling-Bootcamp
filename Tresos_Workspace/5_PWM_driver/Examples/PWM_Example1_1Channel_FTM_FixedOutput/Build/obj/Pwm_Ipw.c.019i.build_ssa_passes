Pwm_Ipw_DeInitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L4> [INV], case 0: <L3> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  Ftm_Pwm_Ip_DeInit (_3);

  <bb 5> :
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  return;

}


Pwm_Ipw_DeInit (const struct Pwm_IpwChannelConfigType * const IpConfig, Pwm_OutputStateType ChannelIdleState)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = 0;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


Pwm_Ipw_InitInstance (const struct Pwm_IpwInstanceConfigType * const IpConfig)
{
  uint8 ChannelId;
  uint8 Index;

  <bb 2> :
  Index = 0;
  ChannelId = 0;
  _1 = IpConfig->InstanceType;
  switch (_1) <default: <L7> [INV], case 0: <L6> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->FtmInsConfig;
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  _3 = IpConfig->InstanceId;
  _4 = IpConfig->FtmInsConfig;
  Ftm_Pwm_Ip_Init (_3, _4);
  Index = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _5 = IpConfig->FtmInsConfig;
  _6 = _5->ConfiguredChArray;
  _7 = (unsigned int) Index;
  _8 = _7 * 4;
  _9 = _6 + _8;
  _10 = *_9;
  ChannelId = _10->ChannelId;
  _11 = IpConfig->FtmInsConfig;
  _12 = _11->ConfiguredChArray;
  _13 = (unsigned int) Index;
  _14 = _13 * 4;
  _15 = _12 + _14;
  _16 = *_15;
  _17 = IpConfig->InstanceId;
  _18 = (int) _17;
  _19 = (int) ChannelId;
  _20 = _16->Polarity;
  Ftm_Pwm_Ip_aPolarity[_18][_19] = _20;
  Index.0_21 = Index;
  Index = Index.0_21 + 1;

  <bb 6> :
  _22 = IpConfig->FtmInsConfig;
  _23 = _22->NoOfConfiguredCh;
  if (Index < _23)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  goto <bb 10>; [INV]

  <bb 8> :
<L6>:
  goto <bb 10>; [INV]

  <bb 9> :
<L7>:

  <bb 10> :
  return;

}


Pwm_Ipw_Init (const struct Pwm_IpwChannelConfigType * const IpConfig)
{
  <bb 2> :
  _1 = IpConfig->ChannelType;
  switch (_1) <default: <L2> [INV], case 0: <L1> [INV], case 1: <L0> [INV]>

  <bb 3> :
<L0>:
  _2 = IpConfig->ChannelInstanceId;
  _3 = (int) _2;
  _4 = IpConfig->FtmChConfig;
  _5 = _4->ChannelId;
  _6 = (int) _5;
  _7 = IpConfig->ChannelDutyCycle;
  Pwm_Ipw_aFtmDutyCycle[_3][_6] = _7;
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


