Platform_Ipw_Init (const struct Platform_Ipw_ConfigType * pConfig)
{
  Std_ReturnType ret;
  const struct IntCtrl_Ip_CtrlConfigType * _1;
  const struct IntCtrl_Ip_CtrlConfigType * _2;
  const struct Platform_SystemConfigType * _3;

  <bb 2> :
  ret_6 = 0;
  _1 = pConfig_8(D)->pIntCtrlConfig;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = pConfig_8(D)->pIntCtrlConfig;
  ret_10 = Platform_Ipw_InitIntCtrl (_2);

  <bb 4> :
  # ret_4 = PHI <ret_6(2), ret_10(3)>
  if (ret_4 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _3 = pConfig_8(D)->aSystemConfig;

  <bb 6> :
  return;

}


Platform_Ipw_InitIntCtrl (const struct IntCtrl_Ip_CtrlConfigType * pIntCtrlCtrlConfig)
{
  uint32 irqIdx;
  Std_ReturnType D.6165;
  const struct IntCtrl_Ip_IrqConfigType * _1;
  long unsigned int _2;
  const struct IntCtrl_Ip_IrqConfigType * _3;
  <unnamed type> _4;
  const struct IntCtrl_Ip_IrqConfigType * _5;
  long unsigned int _6;
  const struct IntCtrl_Ip_IrqConfigType * _7;
  <unnamed type> _8;
  const struct IntCtrl_Ip_IrqConfigType * _9;
  long unsigned int _10;
  const struct IntCtrl_Ip_IrqConfigType * _11;
  unsigned char _12;
  const struct IntCtrl_Ip_IrqConfigType * _13;
  long unsigned int _14;
  const struct IntCtrl_Ip_IrqConfigType * _15;
  <unnamed type> _16;
  const struct IntCtrl_Ip_IrqConfigType * _17;
  long unsigned int _18;
  const struct IntCtrl_Ip_IrqConfigType * _19;
  void (*<T625>) (void) _20;
  const struct IntCtrl_Ip_IrqConfigType * _21;
  long unsigned int _22;
  const struct IntCtrl_Ip_IrqConfigType * _23;
  _Bool _24;
  const struct IntCtrl_Ip_IrqConfigType * _25;
  long unsigned int _26;
  const struct IntCtrl_Ip_IrqConfigType * _27;
  <unnamed type> _28;
  const struct IntCtrl_Ip_IrqConfigType * _29;
  long unsigned int _30;
  const struct IntCtrl_Ip_IrqConfigType * _31;
  <unnamed type> _32;
  long unsigned int _33;
  Std_ReturnType _40;

  <bb 2> :
  irqIdx_37 = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _2 = irqIdx_34 * 12;
  _3 = _1 + _2;
  _4 = _3->eIrqNumber;
  IntCtrl_Ip_ClearPending (_4);
  _5 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _6 = irqIdx_34 * 12;
  _7 = _5 + _6;
  _8 = _7->eIrqNumber;
  _9 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _10 = irqIdx_34 * 12;
  _11 = _9 + _10;
  _12 = _11->u8IrqPriority;
  IntCtrl_Ip_SetPriority (_8, _12);
  _13 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _14 = irqIdx_34 * 12;
  _15 = _13 + _14;
  _16 = _15->eIrqNumber;
  _17 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _18 = irqIdx_34 * 12;
  _19 = _17 + _18;
  _20 = _19->pfHandler;
  IntCtrl_Ip_InstallHandler (_16, _20, 0B);
  _21 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _22 = irqIdx_34 * 12;
  _23 = _21 + _22;
  _24 = _23->bIrqEnabled;
  if (_24 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _25 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _26 = irqIdx_34 * 12;
  _27 = _25 + _26;
  _28 = _27->eIrqNumber;
  IntCtrl_Ip_EnableIrq (_28);
  goto <bb 6>; [INV]

  <bb 5> :
  _29 = pIntCtrlCtrlConfig_39(D)->aIrqConfig;
  _30 = irqIdx_34 * 12;
  _31 = _29 + _30;
  _32 = _31->eIrqNumber;
  IntCtrl_Ip_DisableIrq (_32);

  <bb 6> :
  irqIdx_46 = irqIdx_34 + 1;

  <bb 7> :
  # irqIdx_34 = PHI <irqIdx_37(2), irqIdx_46(6)>
  _33 = pIntCtrlCtrlConfig_39(D)->u32ConfigIrqCount;
  if (irqIdx_34 < _33)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _40 = 0;

  <bb 9> :
<L6>:
  return _40;

}


