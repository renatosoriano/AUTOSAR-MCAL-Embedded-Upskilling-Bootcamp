
Marking local functions:


Marking externally visible functions: Clock_Ip_Command/51 Clock_Ip_ClockPowerModeChangeNotification/50 SetSimLpoclksRegister_TrustedCall/40 SetFircToResetValue_TrustedCall/39


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Clock_Ip_bSentFromUpdateDriverContext/67 (Clock_Ip_bSentFromUpdateDriverContext) @0e5fea68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags:
Clock_Ip_axDividerCallbacks/66 (Clock_Ip_axDividerCallbacks) @0e5fea20
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8DividerCallbackIndex/65 (Clock_Ip_au8DividerCallbackIndex) @0e5fe9d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axSelectorCallbacks/64 (Clock_Ip_axSelectorCallbacks) @0e5fe990
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (addr) Clock_Ip_ClockInitializeObjects/49 (addr) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8SelectorCallbackIndex/63 (Clock_Ip_au8SelectorCallbackIndex) @0e5fe948
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axExtOscCallbacks/62 (Clock_Ip_axExtOscCallbacks) @0e5fe900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (addr) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8XoscCallbackIndex/61 (Clock_Ip_au8XoscCallbackIndex) @0e5fe8b8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPllCallbacks/60 (Clock_Ip_axPllCallbacks) @0e5fe870
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (addr) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8PllCallbackIndex/59 (Clock_Ip_au8PllCallbackIndex) @0e5fe828
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_ReportClockErrors/58 (Clock_Ip_ReportClockErrors) @0e5bb000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_SpecificPlatformInitClock/41 
  Calls: 
Clock_Ip_TimeoutExpired/57 (Clock_Ip_TimeoutExpired) @0e5abee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_SpecificPlatformInitClock/41 
  Calls: 
Clock_Ip_StartTimeout/56 (Clock_Ip_StartTimeout) @0e5ab8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_SpecificPlatformInitClock/41 
  Calls: 
Clock_Ip_au8SelectorEntrySIMHardwareValue/55 (Clock_Ip_au8SelectorEntrySIMHardwareValue) @0e5b6438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetSimLpoclksRegister_TrustedCall/40 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au16SelectorEntryHardwareValue/54 (Clock_Ip_au16SelectorEntryHardwareValue) @0e5b63f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: SetSimLpoclksRegister_TrustedCall/40 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axIntOscCallbacks/53 (Clock_Ip_axIntOscCallbacks) @0e596d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: DisableSafeClock/38 (read) DisableSafeClock/38 (read) Clock_Ip_ClockInitializeObjects/49 (addr) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8IrcoscCallbackIndex/52 (Clock_Ip_au8IrcoscCallbackIndex) @0e596cf0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: DisableSafeClock/38 (read) DisableSafeClock/38 (read) Clock_Ip_ClockInitializeObjects/49 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_Command/51 (Clock_Ip_Command) @0e5aba80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: DisableSafeClock/38 Clock_Ip_SpecificPlatformInitClock/41 Clock_Ip_ClockInitializeObjects/49 
Clock_Ip_ClockPowerModeChangeNotification/50 (Clock_Ip_ClockPowerModeChangeNotification) @0e5ab7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_bAcceptedCopyClockConfiguration/36 (write) Clock_Ip_pxScsRunClockSelector/4 (read) Clock_Ip_pxScsConfigVlprMode/12 (read) Clock_Ip_pxCoreRunClockDivider/5 (read) Clock_Ip_pxCoreConfigVlprMode/14 (read) Clock_Ip_pxBusRunClockDivider/6 (read) Clock_Ip_pxBusConfigVlprMode/16 (read) Clock_Ip_pxSlowRunClockDivider/7 (read) Clock_Ip_pxSlowConfigVlprMode/18 (read) Clock_Ip_pxSpllClock/1 (read) Clock_Ip_pxSpllConfig/10 (read) Clock_Ip_pxSoscClock/2 (read) Clock_Ip_pxSoscConfig/9 (read) Clock_Ip_pxFircClock/3 (read) Clock_Ip_pxFircConfig/8 (read) Clock_Ip_bAcceptedCopyClockConfiguration/36 (write) Clock_Ip_pxFircClock/3 (read) Clock_Ip_pxFircConfig/8 (read) Clock_Ip_pxSoscClock/2 (read) Clock_Ip_pxSoscConfig/9 (read) Clock_Ip_pxSoscClock/2 (read) Clock_Ip_pxSoscConfig/9 (read) Clock_Ip_pxSpllClock/1 (read) Clock_Ip_pxSpllConfig/10 (read) Clock_Ip_pxSpllClock/1 (read) Clock_Ip_pxSpllConfig/10 (read) Clock_Ip_pxScsRunClockSelector/4 (read) Clock_Ip_pxScsConfigRunMode/11 (read) Clock_Ip_pxCoreRunClockDivider/5 (read) Clock_Ip_pxCoreConfigRunMode/13 (read) Clock_Ip_pxBusRunClockDivider/6 (read) Clock_Ip_pxBusConfigRunMode/15 (read) Clock_Ip_pxSlowRunClockDivider/7 (read) Clock_Ip_pxSlowConfigRunMode/17 (read) Clock_Ip_bAcceptedCopyClockConfiguration/36 (write) Clock_Ip_pxFircClock/3 (read) Clock_Ip_pxFircConfig/8 (read) Clock_Ip_pxSoscClock/2 (read) Clock_Ip_pxSoscConfig/9 (read) Clock_Ip_pxSoscClock/2 (read) Clock_Ip_pxSoscConfig/9 (read) Clock_Ip_pxSpllClock/1 (read) Clock_Ip_pxSpllConfig/10 (read) Clock_Ip_pxSpllClock/1 (read) Clock_Ip_pxSpllConfig/10 (read) Clock_Ip_pxScsHsrunClockSelector/19 (read) Clock_Ip_pxScsConfigHsrunMode/23 (read) Clock_Ip_pxCoreHsrunClockDivider/20 (read) Clock_Ip_pxCoreConfigHsrunMode/24 (read) Clock_Ip_pxBusHsrunClockDivider/21 (read) Clock_Ip_pxBusConfigHsrunMode/25 (read) Clock_Ip_pxSlowHsrunClockDivider/22 (read) Clock_Ip_pxSlowConfigHsrunMode/26 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
Clock_Ip_ClockInitializeObjects/49 (Clock_Ip_ClockInitializeObjects) @0e5ab540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_bObjsAreInitialized/37 (read) Clock_Ip_bObjsAreInitialized/37 (write) Clock_Ip_au8PllCallbackIndex/59 (read) Clock_Ip_axPllCallbacks/60 (addr) Clock_Ip_pxSpllClock/1 (write) Clock_Ip_au8XoscCallbackIndex/61 (read) Clock_Ip_axExtOscCallbacks/62 (addr) Clock_Ip_pxSoscClock/2 (write) Clock_Ip_au8IrcoscCallbackIndex/52 (read) Clock_Ip_axIntOscCallbacks/53 (addr) Clock_Ip_pxFircClock/3 (write) Clock_Ip_au8SelectorCallbackIndex/63 (read) Clock_Ip_axSelectorCallbacks/64 (addr) Clock_Ip_pxScsRunClockSelector/4 (write) Clock_Ip_au8SelectorCallbackIndex/63 (read) Clock_Ip_axSelectorCallbacks/64 (addr) Clock_Ip_pxScsHsrunClockSelector/19 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxCoreRunClockDivider/5 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxCoreHsrunClockDivider/20 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxBusRunClockDivider/6 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxBusHsrunClockDivider/21 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxSlowRunClockDivider/7 (write) Clock_Ip_au8DividerCallbackIndex/65 (read) Clock_Ip_axDividerCallbacks/66 (addr) Clock_Ip_pxSlowHsrunClockDivider/22 (write) Clock_Ip_bAcceptedCopyClockConfiguration/36 (read) Clock_Ip_bSentFromUpdateDriverContext/67 (read) Clock_Ip_pxFircConfig/8 (write) Clock_Ip_pxSoscConfig/9 (write) Clock_Ip_pxSpllConfig/10 (write) Clock_Ip_pxScsConfigRunMode/11 (write) Clock_Ip_pxScsConfigVlprMode/12 (write) Clock_Ip_pxScsConfigHsrunMode/23 (write) Clock_Ip_pxCoreConfigRunMode/13 (write) Clock_Ip_pxCoreConfigVlprMode/14 (write) Clock_Ip_pxCoreConfigHsrunMode/24 (write) Clock_Ip_pxBusConfigRunMode/15 (write) Clock_Ip_pxBusConfigVlprMode/16 (write) Clock_Ip_pxBusConfigHsrunMode/25 (write) Clock_Ip_pxSlowConfigRunMode/17 (write) Clock_Ip_pxSlowConfigVlprMode/18 (write) Clock_Ip_pxSlowConfigHsrunMode/26 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Command/51 
  Calls: getSlowDividerConfig/48 getSlowDividerConfig/48 getSlowDividerConfig/48 getBusDividerConfig/47 getBusDividerConfig/47 getBusDividerConfig/47 getCoreDividerConfig/46 getCoreDividerConfig/46 getCoreDividerConfig/46 getSelectorConfig/45 getSelectorConfig/45 getSelectorConfig/45 getSpllConfig/44 getSoscConfig/43 getFircConfig/42 
getSlowDividerConfig/48 (getSlowDividerConfig) @0e5ab2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) SlowDividerConfigurations/34 (addr) SlowDividerConfigurations/34 (write) SlowDividerConfigurations/34 (write) SlowDividerConfigurations/34 (write) SlowDividerConfigurations/34 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getBusDividerConfig/47 (getBusDividerConfig) @0e5ab000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) BusDividerConfigurations/33 (addr) BusDividerConfigurations/33 (write) BusDividerConfigurations/33 (write) BusDividerConfigurations/33 (write) BusDividerConfigurations/33 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getCoreDividerConfig/46 (getCoreDividerConfig) @0e595c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) CoreDividerConfigurations/32 (addr) CoreDividerConfigurations/32 (write) CoreDividerConfigurations/32 (write) CoreDividerConfigurations/32 (write) CoreDividerConfigurations/32 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getSelectorConfig/45 (getSelectorConfig) @0e595700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) SelectorConfigurations/31 (addr) SelectorConfigurations/31 (write) ClockSource/27 (read) SelectorConfigurations/31 (write) ClockSource/27 (read) SelectorConfigurations/31 (write) ClockSource/27 (read) SelectorConfigurations/31 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getSpllConfig/44 (getSpllConfig) @0e595e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) SpllConfiguration/30 (addr) SpllConfiguration/30 (write) SpllConfiguration/30 (write) SpllConfiguration/30 (write) SpllConfiguration/30 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getSoscConfig/43 (getSoscConfig) @0e595b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) SoscConfiguration/29 (addr) SoscConfiguration/29 (write) SoscConfiguration/29 (write) SoscConfiguration/29 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 
  Calls: 
getFircConfig/42 (getFircConfig) @0e5958c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) FircConfiguration/28 (addr) FircConfiguration/28 (write) FircConfiguration/28 (write) FircConfiguration/28 (write) FircConfiguration/28 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_ClockInitializeObjects/49 
  Calls: 
Clock_Ip_SpecificPlatformInitClock/41 (Clock_Ip_SpecificPlatformInitClock) @0e595620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (write) Clock_Ip_bFircWasEnabledBeforeMcuInit/35 (write) Clock_Ip_bFircWasEnabledBeforeMcuInit/35 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Command/51 
  Calls: SetSimLpoclksRegister_TrustedCall/40 Clock_Ip_ReportClockErrors/58 Clock_Ip_TimeoutExpired/57 Clock_Ip_StartTimeout/56 SetFircToResetValue_TrustedCall/39 
SetSimLpoclksRegister_TrustedCall/40 (SetSimLpoclksRegister_TrustedCall) @0e595380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_au16SelectorEntryHardwareValue/54 (read) Clock_Ip_au8SelectorEntrySIMHardwareValue/55 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SpecificPlatformInitClock/41 
  Calls: 
SetFircToResetValue_TrustedCall/39 (SetFircToResetValue_TrustedCall) @0e5950e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_SpecificPlatformInitClock/41 
  Calls: 
DisableSafeClock/38 (DisableSafeClock) @0e1f5e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_apConfig/0 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_au8IrcoscCallbackIndex/52 (read) Clock_Ip_axIntOscCallbacks/53 (read) Clock_Ip_apConfig/0 (read) Clock_Ip_bFircWasEnabledBeforeMcuInit/35 (read) Clock_Ip_au8IrcoscCallbackIndex/52 (read) Clock_Ip_axIntOscCallbacks/53 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Command/51 
  Calls: 
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
Clock_Ip_bObjsAreInitialized/37 (Clock_Ip_bObjsAreInitialized) @0e1f19d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockInitializeObjects/49 (write) 
  Availability: available
  Varpool flags:
Clock_Ip_bAcceptedCopyClockConfiguration/36 (Clock_Ip_bAcceptedCopyClockConfiguration) @0e1f1948
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_bFircWasEnabledBeforeMcuInit/35 (Clock_Ip_bFircWasEnabledBeforeMcuInit) @0e1f18b8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: DisableSafeClock/38 (read) Clock_Ip_SpecificPlatformInitClock/41 (write) Clock_Ip_SpecificPlatformInitClock/41 (write) 
  Availability: available
  Varpool flags: initialized
SlowDividerConfigurations/34 (SlowDividerConfigurations) @0e1f1828
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getSlowDividerConfig/48 (addr) getSlowDividerConfig/48 (write) getSlowDividerConfig/48 (write) getSlowDividerConfig/48 (write) getSlowDividerConfig/48 (write) 
  Availability: available
  Varpool flags:
BusDividerConfigurations/33 (BusDividerConfigurations) @0e1f1798
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getBusDividerConfig/47 (addr) getBusDividerConfig/47 (write) getBusDividerConfig/47 (write) getBusDividerConfig/47 (write) getBusDividerConfig/47 (write) 
  Availability: available
  Varpool flags:
CoreDividerConfigurations/32 (CoreDividerConfigurations) @0e1f1708
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getCoreDividerConfig/46 (addr) getCoreDividerConfig/46 (write) getCoreDividerConfig/46 (write) getCoreDividerConfig/46 (write) getCoreDividerConfig/46 (write) 
  Availability: available
  Varpool flags:
SelectorConfigurations/31 (SelectorConfigurations) @0e1f1678
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getSelectorConfig/45 (addr) getSelectorConfig/45 (write) getSelectorConfig/45 (write) getSelectorConfig/45 (write) getSelectorConfig/45 (write) 
  Availability: available
  Varpool flags:
SpllConfiguration/30 (SpllConfiguration) @0e1f15a0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getSpllConfig/44 (addr) getSpllConfig/44 (write) getSpllConfig/44 (write) getSpllConfig/44 (write) getSpllConfig/44 (write) 
  Availability: available
  Varpool flags:
SoscConfiguration/29 (SoscConfiguration) @0e1f1510
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getSoscConfig/43 (addr) getSoscConfig/43 (write) getSoscConfig/43 (write) getSoscConfig/43 (write) 
  Availability: available
  Varpool flags:
FircConfiguration/28 (FircConfiguration) @0e1f1480
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getFircConfig/42 (addr) getFircConfig/42 (write) getFircConfig/42 (write) getFircConfig/42 (write) getFircConfig/42 (write) 
  Availability: available
  Varpool flags:
ClockSource/27 (ClockSource) @0e1f13f0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: getSelectorConfig/45 (read) getSelectorConfig/45 (read) getSelectorConfig/45 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_pxSlowConfigHsrunMode/26 (Clock_Ip_pxSlowConfigHsrunMode) @0e1f1318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxBusConfigHsrunMode/25 (Clock_Ip_pxBusConfigHsrunMode) @0e1f1288
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxCoreConfigHsrunMode/24 (Clock_Ip_pxCoreConfigHsrunMode) @0e1f11f8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxScsConfigHsrunMode/23 (Clock_Ip_pxScsConfigHsrunMode) @0e1f1168
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSlowHsrunClockDivider/22 (Clock_Ip_pxSlowHsrunClockDivider) @0e1f10d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxBusHsrunClockDivider/21 (Clock_Ip_pxBusHsrunClockDivider) @0e1f1048
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxCoreHsrunClockDivider/20 (Clock_Ip_pxCoreHsrunClockDivider) @0e1ebf78
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxScsHsrunClockSelector/19 (Clock_Ip_pxScsHsrunClockSelector) @0e1ebee8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSlowConfigVlprMode/18 (Clock_Ip_pxSlowConfigVlprMode) @0e1ebe58
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSlowConfigRunMode/17 (Clock_Ip_pxSlowConfigRunMode) @0e1ebdc8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxBusConfigVlprMode/16 (Clock_Ip_pxBusConfigVlprMode) @0e1ebd38
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxBusConfigRunMode/15 (Clock_Ip_pxBusConfigRunMode) @0e1ebca8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxCoreConfigVlprMode/14 (Clock_Ip_pxCoreConfigVlprMode) @0e1ebc18
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxCoreConfigRunMode/13 (Clock_Ip_pxCoreConfigRunMode) @0e1ebb88
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxScsConfigVlprMode/12 (Clock_Ip_pxScsConfigVlprMode) @0e1ebaf8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxScsConfigRunMode/11 (Clock_Ip_pxScsConfigRunMode) @0e1eba68
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSpllConfig/10 (Clock_Ip_pxSpllConfig) @0e1eb948
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSoscConfig/9 (Clock_Ip_pxSoscConfig) @0e1eb8b8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxFircConfig/8 (Clock_Ip_pxFircConfig) @0e1eb828
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSlowRunClockDivider/7 (Clock_Ip_pxSlowRunClockDivider) @0e1eb798
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxBusRunClockDivider/6 (Clock_Ip_pxBusRunClockDivider) @0e1eb708
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxCoreRunClockDivider/5 (Clock_Ip_pxCoreRunClockDivider) @0e1eb678
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxScsRunClockSelector/4 (Clock_Ip_pxScsRunClockSelector) @0e1eb5e8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxFircClock/3 (Clock_Ip_pxFircClock) @0e1eb510
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSoscClock/2 (Clock_Ip_pxSoscClock) @0e1eb480
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_pxSpllClock/1 (Clock_Ip_pxSpllClock) @0e1eb3f0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_ClockInitializeObjects/49 (write) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) Clock_Ip_ClockPowerModeChangeNotification/50 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_apConfig/0 (Clock_Ip_apConfig) @0e1eb360
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: DisableSafeClock/38 (read) DisableSafeClock/38 (read) DisableSafeClock/38 (read) Clock_Ip_SpecificPlatformInitClock/41 (write) getFircConfig/42 (read) getFircConfig/42 (read) getFircConfig/42 (read) getFircConfig/42 (read) getSoscConfig/43 (read) getSoscConfig/43 (read) getSoscConfig/43 (read) getSoscConfig/43 (read) getSpllConfig/44 (read) getSpllConfig/44 (read) getSpllConfig/44 (read) getSpllConfig/44 (read) getSelectorConfig/45 (read) getSelectorConfig/45 (read) getSelectorConfig/45 (read) getSelectorConfig/45 (read) getCoreDividerConfig/46 (read) getCoreDividerConfig/46 (read) getCoreDividerConfig/46 (read) getCoreDividerConfig/46 (read) getBusDividerConfig/47 (read) getBusDividerConfig/47 (read) getBusDividerConfig/47 (read) getBusDividerConfig/47 (read) getSlowDividerConfig/48 (read) getSlowDividerConfig/48 (read) getSlowDividerConfig/48 (read) getSlowDividerConfig/48 (read) 
  Availability: available
  Varpool flags:
Clock_Ip_Command (const struct Clock_Ip_ClockConfigType * Config, Clock_Ip_CommandType Command)
{
  <bb 2> :
  switch (Command) <default: <L3> [INV], case 1: <L1> [INV], case 2: <L0> [INV], case 4: <L2> [INV]>

  <bb 3> :
<L0>:
  Clock_Ip_ClockInitializeObjects (Config);
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  Clock_Ip_SpecificPlatformInitClock (Config);
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  DisableSafeClock (Config);
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:

  <bb 7> :
  return;

}


Clock_Ip_ClockPowerModeChangeNotification (Clock_Ip_PowerModesType PowerMode, Clock_Ip_PowerNotificationType Notification)
{
  <bb 2> :
  switch (PowerMode) <default: <L10> [INV], case 0: <L4> [INV], case 1 ... 2: <L0> [INV], case 3: <L7> [INV]>

  <bb 3> :
<L0>:
  if (Notification == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Clock_Ip_bAcceptedCopyClockConfiguration = 0;
  Clock_Ip_pxScsRunClockSelector.36_1 = Clock_Ip_pxScsRunClockSelector;
  _2 = Clock_Ip_pxScsRunClockSelector.36_1->Set;
  Clock_Ip_pxScsConfigVlprMode.37_3 = Clock_Ip_pxScsConfigVlprMode;
  _2 (Clock_Ip_pxScsConfigVlprMode.37_3);
  Clock_Ip_pxCoreRunClockDivider.38_4 = Clock_Ip_pxCoreRunClockDivider;
  _5 = Clock_Ip_pxCoreRunClockDivider.38_4->Set;
  Clock_Ip_pxCoreConfigVlprMode.39_6 = Clock_Ip_pxCoreConfigVlprMode;
  _5 (Clock_Ip_pxCoreConfigVlprMode.39_6);
  Clock_Ip_pxBusRunClockDivider.40_7 = Clock_Ip_pxBusRunClockDivider;
  _8 = Clock_Ip_pxBusRunClockDivider.40_7->Set;
  Clock_Ip_pxBusConfigVlprMode.41_9 = Clock_Ip_pxBusConfigVlprMode;
  _8 (Clock_Ip_pxBusConfigVlprMode.41_9);
  Clock_Ip_pxSlowRunClockDivider.42_10 = Clock_Ip_pxSlowRunClockDivider;
  _11 = Clock_Ip_pxSlowRunClockDivider.42_10->Set;
  Clock_Ip_pxSlowConfigVlprMode.43_12 = Clock_Ip_pxSlowConfigVlprMode;
  _11 (Clock_Ip_pxSlowConfigVlprMode.43_12);
  Clock_Ip_pxSpllClock.44_13 = Clock_Ip_pxSpllClock;
  _14 = Clock_Ip_pxSpllClock.44_13->Disable;
  Clock_Ip_pxSpllConfig.45_15 = Clock_Ip_pxSpllConfig;
  _16 = Clock_Ip_pxSpllConfig.45_15->Name;
  _14 (_16);
  Clock_Ip_pxSoscClock.46_17 = Clock_Ip_pxSoscClock;
  _18 = Clock_Ip_pxSoscClock.46_17->Disable;
  Clock_Ip_pxSoscConfig.47_19 = Clock_Ip_pxSoscConfig;
  _20 = Clock_Ip_pxSoscConfig.47_19->Name;
  _18 (_20);
  Clock_Ip_pxFircClock.48_21 = Clock_Ip_pxFircClock;
  _22 = Clock_Ip_pxFircClock.48_21->Disable;
  Clock_Ip_pxFircConfig.49_23 = Clock_Ip_pxFircConfig;
  _24 = Clock_Ip_pxFircConfig.49_23->Name;
  _22 (_24);

  <bb 5> :
  goto <bb 13>; [INV]

  <bb 6> :
<L4>:
  if (Notification == 2)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Clock_Ip_bAcceptedCopyClockConfiguration = 1;
  Clock_Ip_pxFircClock.50_25 = Clock_Ip_pxFircClock;
  _26 = Clock_Ip_pxFircClock.50_25->Enable;
  Clock_Ip_pxFircConfig.51_27 = Clock_Ip_pxFircConfig;
  _26 (Clock_Ip_pxFircConfig.51_27);
  Clock_Ip_pxSoscClock.52_28 = Clock_Ip_pxSoscClock;
  _29 = Clock_Ip_pxSoscClock.52_28->Enable;
  Clock_Ip_pxSoscConfig.53_30 = Clock_Ip_pxSoscConfig;
  _29 (Clock_Ip_pxSoscConfig.53_30);
  Clock_Ip_pxSoscClock.54_31 = Clock_Ip_pxSoscClock;
  _32 = Clock_Ip_pxSoscClock.54_31->Complete;
  Clock_Ip_pxSoscConfig.55_33 = Clock_Ip_pxSoscConfig;
  _32 (Clock_Ip_pxSoscConfig.55_33);
  Clock_Ip_pxSpllClock.56_34 = Clock_Ip_pxSpllClock;
  _35 = Clock_Ip_pxSpllClock.56_34->Enable;
  Clock_Ip_pxSpllConfig.57_36 = Clock_Ip_pxSpllConfig;
  _35 (Clock_Ip_pxSpllConfig.57_36);
  Clock_Ip_pxSpllClock.58_37 = Clock_Ip_pxSpllClock;
  _38 = Clock_Ip_pxSpllClock.58_37->Complete;
  Clock_Ip_pxSpllConfig.59_39 = Clock_Ip_pxSpllConfig;
  _40 = Clock_Ip_pxSpllConfig.59_39->Name;
  _38 (_40);
  Clock_Ip_pxScsRunClockSelector.60_41 = Clock_Ip_pxScsRunClockSelector;
  _42 = Clock_Ip_pxScsRunClockSelector.60_41->Set;
  Clock_Ip_pxScsConfigRunMode.61_43 = Clock_Ip_pxScsConfigRunMode;
  _42 (Clock_Ip_pxScsConfigRunMode.61_43);
  Clock_Ip_pxCoreRunClockDivider.62_44 = Clock_Ip_pxCoreRunClockDivider;
  _45 = Clock_Ip_pxCoreRunClockDivider.62_44->Set;
  Clock_Ip_pxCoreConfigRunMode.63_46 = Clock_Ip_pxCoreConfigRunMode;
  _45 (Clock_Ip_pxCoreConfigRunMode.63_46);
  Clock_Ip_pxBusRunClockDivider.64_47 = Clock_Ip_pxBusRunClockDivider;
  _48 = Clock_Ip_pxBusRunClockDivider.64_47->Set;
  Clock_Ip_pxBusConfigRunMode.65_49 = Clock_Ip_pxBusConfigRunMode;
  _48 (Clock_Ip_pxBusConfigRunMode.65_49);
  Clock_Ip_pxSlowRunClockDivider.66_50 = Clock_Ip_pxSlowRunClockDivider;
  _51 = Clock_Ip_pxSlowRunClockDivider.66_50->Set;
  Clock_Ip_pxSlowConfigRunMode.67_52 = Clock_Ip_pxSlowConfigRunMode;
  _51 (Clock_Ip_pxSlowConfigRunMode.67_52);

  <bb 8> :
  goto <bb 13>; [INV]

  <bb 9> :
<L7>:
  if (Notification == 2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Clock_Ip_bAcceptedCopyClockConfiguration = 1;
  Clock_Ip_pxFircClock.68_53 = Clock_Ip_pxFircClock;
  _54 = Clock_Ip_pxFircClock.68_53->Enable;
  Clock_Ip_pxFircConfig.69_55 = Clock_Ip_pxFircConfig;
  _54 (Clock_Ip_pxFircConfig.69_55);
  Clock_Ip_pxSoscClock.70_56 = Clock_Ip_pxSoscClock;
  _57 = Clock_Ip_pxSoscClock.70_56->Enable;
  Clock_Ip_pxSoscConfig.71_58 = Clock_Ip_pxSoscConfig;
  _57 (Clock_Ip_pxSoscConfig.71_58);
  Clock_Ip_pxSoscClock.72_59 = Clock_Ip_pxSoscClock;
  _60 = Clock_Ip_pxSoscClock.72_59->Complete;
  Clock_Ip_pxSoscConfig.73_61 = Clock_Ip_pxSoscConfig;
  _60 (Clock_Ip_pxSoscConfig.73_61);
  Clock_Ip_pxSpllClock.74_62 = Clock_Ip_pxSpllClock;
  _63 = Clock_Ip_pxSpllClock.74_62->Enable;
  Clock_Ip_pxSpllConfig.75_64 = Clock_Ip_pxSpllConfig;
  _63 (Clock_Ip_pxSpllConfig.75_64);
  Clock_Ip_pxSpllClock.76_65 = Clock_Ip_pxSpllClock;
  _66 = Clock_Ip_pxSpllClock.76_65->Complete;
  Clock_Ip_pxSpllConfig.77_67 = Clock_Ip_pxSpllConfig;
  _68 = Clock_Ip_pxSpllConfig.77_67->Name;
  _66 (_68);
  Clock_Ip_pxScsHsrunClockSelector.78_69 = Clock_Ip_pxScsHsrunClockSelector;
  _70 = Clock_Ip_pxScsHsrunClockSelector.78_69->Set;
  Clock_Ip_pxScsConfigHsrunMode.79_71 = Clock_Ip_pxScsConfigHsrunMode;
  _70 (Clock_Ip_pxScsConfigHsrunMode.79_71);
  Clock_Ip_pxCoreHsrunClockDivider.80_72 = Clock_Ip_pxCoreHsrunClockDivider;
  _73 = Clock_Ip_pxCoreHsrunClockDivider.80_72->Set;
  Clock_Ip_pxCoreConfigHsrunMode.81_74 = Clock_Ip_pxCoreConfigHsrunMode;
  _73 (Clock_Ip_pxCoreConfigHsrunMode.81_74);
  Clock_Ip_pxBusHsrunClockDivider.82_75 = Clock_Ip_pxBusHsrunClockDivider;
  _76 = Clock_Ip_pxBusHsrunClockDivider.82_75->Set;
  Clock_Ip_pxBusConfigHsrunMode.83_77 = Clock_Ip_pxBusConfigHsrunMode;
  _76 (Clock_Ip_pxBusConfigHsrunMode.83_77);
  Clock_Ip_pxSlowHsrunClockDivider.84_78 = Clock_Ip_pxSlowHsrunClockDivider;
  _79 = Clock_Ip_pxSlowHsrunClockDivider.84_78->Set;
  Clock_Ip_pxSlowConfigHsrunMode.85_80 = Clock_Ip_pxSlowConfigHsrunMode;
  _79 (Clock_Ip_pxSlowConfigHsrunMode.85_80);

  <bb 11> :
  goto <bb 13>; [INV]

  <bb 12> :
<L10>:

  <bb 13> :
  return;

}


Clock_Ip_ClockInitializeObjects (const struct Clock_Ip_ClockConfigType * Config)
{
  <bb 2> :
  Clock_Ip_bObjsAreInitialized.33_1 = Clock_Ip_bObjsAreInitialized;
  _2 = ~Clock_Ip_bObjsAreInitialized.33_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_bObjsAreInitialized = 1;
  _3 = Clock_Ip_au8PllCallbackIndex[1];
  _4 = (int) _3;
  _5 = &Clock_Ip_axPllCallbacks[_4];
  Clock_Ip_pxSpllClock = _5;
  _6 = Clock_Ip_au8XoscCallbackIndex[1];
  _7 = (int) _6;
  _8 = &Clock_Ip_axExtOscCallbacks[_7];
  Clock_Ip_pxSoscClock = _8;
  _9 = Clock_Ip_au8IrcoscCallbackIndex[4];
  _10 = (int) _9;
  _11 = &Clock_Ip_axIntOscCallbacks[_10];
  Clock_Ip_pxFircClock = _11;
  _12 = Clock_Ip_au8SelectorCallbackIndex[5];
  _13 = (int) _12;
  _14 = &Clock_Ip_axSelectorCallbacks[_13];
  Clock_Ip_pxScsRunClockSelector = _14;
  _15 = Clock_Ip_au8SelectorCallbackIndex[7];
  _16 = (int) _15;
  _17 = &Clock_Ip_axSelectorCallbacks[_16];
  Clock_Ip_pxScsHsrunClockSelector = _17;
  _18 = Clock_Ip_au8DividerCallbackIndex[6];
  _19 = (int) _18;
  _20 = &Clock_Ip_axDividerCallbacks[_19];
  Clock_Ip_pxCoreRunClockDivider = _20;
  _21 = Clock_Ip_au8DividerCallbackIndex[8];
  _22 = (int) _21;
  _23 = &Clock_Ip_axDividerCallbacks[_22];
  Clock_Ip_pxCoreHsrunClockDivider = _23;
  _24 = Clock_Ip_au8DividerCallbackIndex[9];
  _25 = (int) _24;
  _26 = &Clock_Ip_axDividerCallbacks[_25];
  Clock_Ip_pxBusRunClockDivider = _26;
  _27 = Clock_Ip_au8DividerCallbackIndex[11];
  _28 = (int) _27;
  _29 = &Clock_Ip_axDividerCallbacks[_28];
  Clock_Ip_pxBusHsrunClockDivider = _29;
  _30 = Clock_Ip_au8DividerCallbackIndex[12];
  _31 = (int) _30;
  _32 = &Clock_Ip_axDividerCallbacks[_31];
  Clock_Ip_pxSlowRunClockDivider = _32;
  _33 = Clock_Ip_au8DividerCallbackIndex[14];
  _34 = (int) _33;
  _35 = &Clock_Ip_axDividerCallbacks[_34];
  Clock_Ip_pxSlowHsrunClockDivider = _35;

  <bb 4> :
  Clock_Ip_bAcceptedCopyClockConfiguration.34_36 = Clock_Ip_bAcceptedCopyClockConfiguration;
  if (Clock_Ip_bAcceptedCopyClockConfiguration.34_36 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  if (Config == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  Clock_Ip_bSentFromUpdateDriverContext.35_37 = Clock_Ip_bSentFromUpdateDriverContext;
  if (Clock_Ip_bSentFromUpdateDriverContext.35_37 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _38 = getFircConfig ();
  Clock_Ip_pxFircConfig = _38;
  _39 = getSoscConfig ();
  Clock_Ip_pxSoscConfig = _39;
  _40 = getSpllConfig ();
  Clock_Ip_pxSpllConfig = _40;
  _41 = getSelectorConfig (25);
  Clock_Ip_pxScsConfigRunMode = _41;
  _42 = getSelectorConfig (26);
  Clock_Ip_pxScsConfigVlprMode = _42;
  _43 = getSelectorConfig (27);
  Clock_Ip_pxScsConfigHsrunMode = _43;
  _44 = getCoreDividerConfig (29);
  Clock_Ip_pxCoreConfigRunMode = _44;
  _45 = getCoreDividerConfig (30);
  Clock_Ip_pxCoreConfigVlprMode = _45;
  _46 = getCoreDividerConfig (31);
  Clock_Ip_pxCoreConfigHsrunMode = _46;
  _47 = getBusDividerConfig (33);
  Clock_Ip_pxBusConfigRunMode = _47;
  _48 = getBusDividerConfig (34);
  Clock_Ip_pxBusConfigVlprMode = _48;
  _49 = getBusDividerConfig (35);
  Clock_Ip_pxBusConfigHsrunMode = _49;
  _50 = getSlowDividerConfig (37);
  Clock_Ip_pxSlowConfigRunMode = _50;
  _51 = getSlowDividerConfig (38);
  Clock_Ip_pxSlowConfigVlprMode = _51;
  _52 = getSlowDividerConfig (39);
  Clock_Ip_pxSlowConfigHsrunMode = _52;

  <bb 8> :
  return;

}


getSlowDividerConfig (Clock_Ip_NameType Name)
{
  uint32 Index;
  uint32 DividerConfigIndex;
  const struct Clock_Ip_DividerConfigType * ReturnValue;
  const struct Clock_Ip_DividerConfigType * D.6184;

  <bb 2> :
  ReturnValue = 0B;
  DividerConfigIndex = 0;
  switch (Name) <default: <L3> [INV], case 37: <L0> [INV], case 38: <L1> [INV], case 39: <L2> [INV]>

  <bb 3> :
<L0>:
  DividerConfigIndex = 0;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  DividerConfigIndex = 1;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  DividerConfigIndex = 2;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:

  <bb 7> :
  Clock_Ip_apConfig.29_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.29_1 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  Index = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  Clock_Ip_apConfig.30_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.30_2->Dividers[Index].Name;
  if (Name == _3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Clock_Ip_apConfig.31_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.31_4->Dividers[Index];
  goto <bb 13>; [INV]

  <bb 11> :
  Index = Index + 1;

  <bb 12> :
  Clock_Ip_apConfig.32_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.32_5->DividersCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ReturnValue == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  ReturnValue = &SlowDividerConfigurations[DividerConfigIndex];
  SlowDividerConfigurations[DividerConfigIndex].Name = Name;
  switch (Name) <default: <L16> [INV], case 37: <L13> [INV], case 38: <L14> [INV], case 39: <L15> [INV]>

  <bb 15> :
<L13>:
  _8 = 1074151424B;
  _9 = _8->RCCR;
  _10 = _9 & 15;
  _11 = _10 + 1;
  SlowDividerConfigurations[DividerConfigIndex].Value = _11;
  goto <bb 19>; [INV]

  <bb 16> :
<L14>:
  _12 = 1074151424B;
  _13 = _12->VCCR;
  _14 = _13 & 15;
  _15 = _14 + 1;
  SlowDividerConfigurations[DividerConfigIndex].Value = _15;
  goto <bb 19>; [INV]

  <bb 17> :
<L15>:
  _16 = 1074151424B;
  _17 = _16->HCCR;
  _18 = _17 & 15;
  _19 = _18 + 1;
  SlowDividerConfigurations[DividerConfigIndex].Value = _19;
  goto <bb 19>; [INV]

  <bb 18> :
<L16>:

  <bb 19> :
  D.6184 = ReturnValue;

  <bb 20> :
<L19>:
  return D.6184;

}


getBusDividerConfig (Clock_Ip_NameType Name)
{
  uint32 Index;
  uint32 DividerConfigIndex;
  const struct Clock_Ip_DividerConfigType * ReturnValue;
  const struct Clock_Ip_DividerConfigType * D.6176;

  <bb 2> :
  ReturnValue = 0B;
  DividerConfigIndex = 0;
  switch (Name) <default: <L3> [INV], case 33: <L0> [INV], case 34: <L1> [INV], case 35: <L2> [INV]>

  <bb 3> :
<L0>:
  DividerConfigIndex = 0;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  DividerConfigIndex = 1;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  DividerConfigIndex = 2;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:

  <bb 7> :
  Clock_Ip_apConfig.25_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.25_1 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  Index = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  Clock_Ip_apConfig.26_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.26_2->Dividers[Index].Name;
  if (Name == _3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Clock_Ip_apConfig.27_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.27_4->Dividers[Index];
  goto <bb 13>; [INV]

  <bb 11> :
  Index = Index + 1;

  <bb 12> :
  Clock_Ip_apConfig.28_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.28_5->DividersCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ReturnValue == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  ReturnValue = &BusDividerConfigurations[DividerConfigIndex];
  BusDividerConfigurations[DividerConfigIndex].Name = Name;
  switch (Name) <default: <L16> [INV], case 33: <L13> [INV], case 34: <L14> [INV], case 35: <L15> [INV]>

  <bb 15> :
<L13>:
  _8 = 1074151424B;
  _9 = _8->RCCR;
  _10 = _9 >> 4;
  _11 = _10 & 15;
  _12 = _11 + 1;
  BusDividerConfigurations[DividerConfigIndex].Value = _12;
  goto <bb 19>; [INV]

  <bb 16> :
<L14>:
  _13 = 1074151424B;
  _14 = _13->VCCR;
  _15 = _14 >> 4;
  _16 = _15 & 15;
  _17 = _16 + 1;
  BusDividerConfigurations[DividerConfigIndex].Value = _17;
  goto <bb 19>; [INV]

  <bb 17> :
<L15>:
  _18 = 1074151424B;
  _19 = _18->HCCR;
  _20 = _19 >> 4;
  _21 = _20 & 15;
  _22 = _21 + 1;
  BusDividerConfigurations[DividerConfigIndex].Value = _22;
  goto <bb 19>; [INV]

  <bb 18> :
<L16>:

  <bb 19> :
  D.6176 = ReturnValue;

  <bb 20> :
<L19>:
  return D.6176;

}


getCoreDividerConfig (Clock_Ip_NameType Name)
{
  uint32 Index;
  uint32 DividerConfigIndex;
  const struct Clock_Ip_DividerConfigType * ReturnValue;
  const struct Clock_Ip_DividerConfigType * D.6168;

  <bb 2> :
  ReturnValue = 0B;
  DividerConfigIndex = 0;
  switch (Name) <default: <L3> [INV], case 29: <L0> [INV], case 30: <L1> [INV], case 31: <L2> [INV]>

  <bb 3> :
<L0>:
  DividerConfigIndex = 0;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  DividerConfigIndex = 1;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  DividerConfigIndex = 2;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:

  <bb 7> :
  Clock_Ip_apConfig.21_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.21_1 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  Index = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  Clock_Ip_apConfig.22_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.22_2->Dividers[Index].Name;
  if (Name == _3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Clock_Ip_apConfig.23_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.23_4->Dividers[Index];
  goto <bb 13>; [INV]

  <bb 11> :
  Index = Index + 1;

  <bb 12> :
  Clock_Ip_apConfig.24_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.24_5->DividersCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ReturnValue == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  ReturnValue = &CoreDividerConfigurations[DividerConfigIndex];
  CoreDividerConfigurations[DividerConfigIndex].Name = Name;
  switch (Name) <default: <L16> [INV], case 29: <L13> [INV], case 30: <L14> [INV], case 31: <L15> [INV]>

  <bb 15> :
<L13>:
  _8 = 1074151424B;
  _9 = _8->RCCR;
  _10 = _9 >> 16;
  _11 = _10 & 15;
  _12 = _11 + 1;
  CoreDividerConfigurations[DividerConfigIndex].Value = _12;
  goto <bb 19>; [INV]

  <bb 16> :
<L14>:
  _13 = 1074151424B;
  _14 = _13->VCCR;
  _15 = _14 >> 16;
  _16 = _15 & 15;
  _17 = _16 + 1;
  CoreDividerConfigurations[DividerConfigIndex].Value = _17;
  goto <bb 19>; [INV]

  <bb 17> :
<L15>:
  _18 = 1074151424B;
  _19 = _18->HCCR;
  _20 = _19 >> 16;
  _21 = _20 & 15;
  _22 = _21 + 1;
  CoreDividerConfigurations[DividerConfigIndex].Value = _22;
  goto <bb 19>; [INV]

  <bb 18> :
<L16>:

  <bb 19> :
  D.6168 = ReturnValue;

  <bb 20> :
<L19>:
  return D.6168;

}


getSelectorConfig (Clock_Ip_NameType Name)
{
  uint32 Index;
  uint32 SelectorConfigIndex;
  const struct Clock_Ip_SelectorConfigType * ReturnValue;
  const struct Clock_Ip_SelectorConfigType * D.6160;

  <bb 2> :
  ReturnValue = 0B;
  switch (Name) <default: <L3> [INV], case 25: <L0> [INV], case 26: <L1> [INV], case 27: <L2> [INV]>

  <bb 3> :
<L0>:
  SelectorConfigIndex = 0;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  SelectorConfigIndex = 1;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  SelectorConfigIndex = 2;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  SelectorConfigIndex = 0;

  <bb 7> :
  Clock_Ip_apConfig.17_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.17_1 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  Index = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  Clock_Ip_apConfig.18_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.18_2->Selectors[Index].Name;
  if (Name == _3)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  Clock_Ip_apConfig.19_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.19_4->Selectors[Index];
  goto <bb 13>; [INV]

  <bb 11> :
  Index = Index + 1;

  <bb 12> :
  Clock_Ip_apConfig.20_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.20_5->SelectorsCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  if (ReturnValue == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  ReturnValue = &SelectorConfigurations[SelectorConfigIndex];
  SelectorConfigurations[SelectorConfigIndex].Name = Name;
  switch (Name) <default: <L16> [INV], case 25: <L13> [INV], case 26: <L14> [INV], case 27: <L15> [INV]>

  <bb 15> :
<L13>:
  _8 = 1074151424B;
  _9 = _8->RCCR;
  _10 = _9 >> 24;
  _11 = _10 & 15;
  _12 = ClockSource[_11];
  SelectorConfigurations[SelectorConfigIndex].Value = _12;
  goto <bb 19>; [INV]

  <bb 16> :
<L14>:
  _13 = 1074151424B;
  _14 = _13->VCCR;
  _15 = _14 >> 24;
  _16 = _15 & 15;
  _17 = ClockSource[_16];
  SelectorConfigurations[SelectorConfigIndex].Value = _17;
  goto <bb 19>; [INV]

  <bb 17> :
<L15>:
  _18 = 1074151424B;
  _19 = _18->HCCR;
  _20 = _19 >> 24;
  _21 = _20 & 15;
  _22 = ClockSource[_21];
  SelectorConfigurations[SelectorConfigIndex].Value = _22;
  goto <bb 19>; [INV]

  <bb 18> :
<L16>:

  <bb 19> :
  D.6160 = ReturnValue;

  <bb 20> :
<L19>:
  return D.6160;

}


getSpllConfig ()
{
  const struct Clock_Ip_PllConfigType * ReturnValue;
  uint32 Index;
  const struct Clock_Ip_PllConfigType * D.6152;

  <bb 2> :
  ReturnValue = 0B;
  Clock_Ip_apConfig.13_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.13_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Index = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  Clock_Ip_apConfig.14_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.14_2->Plls[Index].Name;
  if (_3 == 9)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Clock_Ip_apConfig.15_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.15_4->Plls[Index];
  goto <bb 8>; [INV]

  <bb 6> :
  Index = Index + 1;

  <bb 7> :
  Clock_Ip_apConfig.16_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.16_5->PllsCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (ReturnValue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  ReturnValue = &SpllConfiguration;
  SpllConfiguration.Name = 9;
  _8 = 1074151424B;
  _9 = _8->SPLLCSR;
  _10 = (short unsigned int) _9;
  _11 = _10 & 1;
  SpllConfiguration.Enable = _11;
  _12 = 1074151424B;
  _13 = _12->SPLLCFG;
  _14 = _13 >> 8;
  _15 = (unsigned char) _14;
  _16 = _15 & 7;
  SpllConfiguration.Predivider = _16;
  _17 = 1074151424B;
  _18 = _17->SPLLCFG;
  _19 = _18 >> 16;
  _20 = (unsigned char) _19;
  _21 = _20 & 31;
  SpllConfiguration.MulFactorDiv = _21;

  <bb 10> :
  D.6152 = ReturnValue;

  <bb 11> :
<L9>:
  return D.6152;

}


getSoscConfig ()
{
  const struct Clock_Ip_XoscConfigType * ReturnValue;
  uint32 Index;
  const struct Clock_Ip_XoscConfigType * D.6144;

  <bb 2> :
  ReturnValue = 0B;
  Clock_Ip_apConfig.9_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.9_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Index = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  Clock_Ip_apConfig.10_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.10_2->Xoscs[Index].Name;
  if (_3 == 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Clock_Ip_apConfig.11_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.11_4->Xoscs[Index];
  goto <bb 8>; [INV]

  <bb 6> :
  Index = Index + 1;

  <bb 7> :
  Clock_Ip_apConfig.12_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.12_5->XoscsCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (ReturnValue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  ReturnValue = &SoscConfiguration;
  SoscConfiguration.Name = 8;
  _8 = 1074151424B;
  _9 = _8->SOSCCSR;
  _10 = (short unsigned int) _9;
  _11 = _10 & 1;
  SoscConfiguration.Enable = _11;
  SoscConfiguration.Freq = 40000000;

  <bb 10> :
  D.6144 = ReturnValue;

  <bb 11> :
<L9>:
  return D.6144;

}


getFircConfig ()
{
  const struct Clock_Ip_IrcoscConfigType * ReturnValue;
  uint32 Index;
  const struct Clock_Ip_IrcoscConfigType * D.6136;

  <bb 2> :
  ReturnValue = 0B;
  Clock_Ip_apConfig.5_1 = Clock_Ip_apConfig;
  if (Clock_Ip_apConfig.5_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Index = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  Clock_Ip_apConfig.6_2 = Clock_Ip_apConfig;
  _3 = Clock_Ip_apConfig.6_2->Ircoscs[Index].Name;
  if (_3 == 5)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Clock_Ip_apConfig.7_4 = Clock_Ip_apConfig;
  ReturnValue = &Clock_Ip_apConfig.7_4->Ircoscs[Index];
  goto <bb 8>; [INV]

  <bb 6> :
  Index = Index + 1;

  <bb 7> :
  Clock_Ip_apConfig.8_5 = Clock_Ip_apConfig;
  _6 = Clock_Ip_apConfig.8_5->IrcoscsCount;
  _7 = (long unsigned int) _6;
  if (Index < _7)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  if (ReturnValue == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  ReturnValue = &FircConfiguration;
  FircConfiguration.Name = 5;
  _8 = 1074151424B;
  _9 = _8->FIRCCSR;
  _10 = (short unsigned int) _9;
  _11 = _10 & 1;
  FircConfiguration.Enable = _11;
  _12 = 1074151424B;
  _13 = _12->FIRCCFG;
  _14 = (unsigned char) _13;
  _15 = _14 & 3;
  FircConfiguration.Range = _15;
  _16 = 1074151424B;
  _17 = _16->FIRCCSR;
  _18 = (unsigned char) _17;
  _19 = (int) _18;
  _20 = _19 >> 3;
  _21 = (unsigned char) _20;
  _22 = _21 & 1;
  FircConfiguration.Regulator = _22;

  <bb 10> :
  D.6136 = ReturnValue;

  <bb 11> :
<L9>:
  return D.6136;

}


Clock_Ip_SpecificPlatformInitClock (const struct Clock_Ip_ClockConfigType * Config)
{
  uint32 IrcoscStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;

  <bb 2> :
  TimeoutOccurred = 0;
  Clock_Ip_apConfig = Config;
  _1 = 1074151424B;
  _2 = _1->FIRCCSR;
  _3 = _2 & 1;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Clock_Ip_bFircWasEnabledBeforeMcuInit = 0;
  SetFircToResetValue_TrustedCall ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _4 = 1074151424B;
  _5 = _4->FIRCCSR;
  _6 = _5 >> 24;
  IrcoscStatus = _6 & 1;
  TimeoutTicks.4_7 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.4_7);
  if (IrcoscStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = ~TimeoutOccurred;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  Clock_Ip_ReportClockErrors (1, 5);
  goto <bb 9>; [INV]

  <bb 8> :
  Clock_Ip_bFircWasEnabledBeforeMcuInit = 1;

  <bb 9> :
  SetSimLpoclksRegister_TrustedCall (Config);
  StartTime = {CLOBBER};
  ElapsedTime = {CLOBBER};
  TimeoutTicks = {CLOBBER};
  return;

}


SetSimLpoclksRegister_TrustedCall (const struct Clock_Ip_ClockConfigType * Config)
{
  uint32 Index;
  uint32 SimLpoValue;

  <bb 2> :
  SimLpoValue = 3;
  Index = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _1 = Config->Selectors[Index].Name;
  if (_1 == 40)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _2 = Config->Selectors[Index].Value;
  _3 = Clock_Ip_au16SelectorEntryHardwareValue[_2];
  _4 = (long unsigned int) _3;
  _5 = _4 << 4;
  SimLpoValue = SimLpoValue | _5;

  <bb 5> :
  _6 = Config->Selectors[Index].Name;
  if (_6 == 41)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _7 = Config->Selectors[Index].Value;
  _8 = Clock_Ip_au8SelectorEntrySIMHardwareValue[_7];
  _9 = (long unsigned int) _8;
  _10 = _9 << 2;
  SimLpoValue = SimLpoValue | _10;

  <bb 7> :
  Index = Index + 1;

  <bb 8> :
  _11 = Config->SelectorsCount;
  _12 = (long unsigned int) _11;
  if (Index < _12)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  Index = 0;
  goto <bb 15>; [INV]

  <bb 10> :
  _13 = Config->Gates[Index].Name;
  if (_13 == 18)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _14 = Config->Gates[Index].Enable;
  _15 = (long unsigned int) _14;
  _16 = _15 << 1;
  SimLpoValue = SimLpoValue | _16;

  <bb 12> :
  _17 = Config->Gates[Index].Name;
  if (_17 == 19)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _18 = Config->Gates[Index].Enable;
  _19 = (long unsigned int) _18;
  SimLpoValue = SimLpoValue | _19;

  <bb 14> :
  Index = Index + 1;

  <bb 15> :
  _20 = Config->GatesCount;
  _21 = (long unsigned int) _20;
  if (Index < _21)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _22 = 1074036736B;
  _22->LPOCLKS = SimLpoValue;
  return;

}


SetFircToResetValue_TrustedCall ()
{
  <bb 2> :
  _1 = 1074151424B;
  _1->FIRCCFG = 0;
  _2 = 1074151424B;
  _3 = _2->FIRCCSR;
  _4 = 1074151424B;
  _5 = _3 | 1;
  _4->FIRCCSR = _5;
  return;

}


DisableSafeClock (const struct Clock_Ip_ClockConfigType * Config)
{
  boolean FircConfigFound;
  uint32 Index;

  <bb 2> :
  FircConfigFound = 0;
  if (Config != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  Index = 0;
  goto <bb 9>; [INV]

  <bb 4> :
  Clock_Ip_apConfig.0_1 = Clock_Ip_apConfig;
  _2 = Clock_Ip_apConfig.0_1->Ircoscs[Index].Name;
  if (_2 == 5)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  FircConfigFound = 1;
  Clock_Ip_apConfig.1_3 = Clock_Ip_apConfig;
  _4 = Clock_Ip_apConfig.1_3->Ircoscs[Index].Enable;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _5 = Clock_Ip_au8IrcoscCallbackIndex[4];
  _6 = (int) _5;
  _7 = Clock_Ip_axIntOscCallbacks[_6].Disable;
  _7 (5);

  <bb 7> :
  goto <bb 10>; [INV]

  <bb 8> :
  Index = Index + 1;

  <bb 9> :
  Clock_Ip_apConfig.2_8 = Clock_Ip_apConfig;
  _9 = Clock_Ip_apConfig.2_8->IrcoscsCount;
  _10 = (long unsigned int) _9;
  if (Index < _10)
    goto <bb 4>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _11 = ~FircConfigFound;
  if (_11 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  Clock_Ip_bFircWasEnabledBeforeMcuInit.3_12 = Clock_Ip_bFircWasEnabledBeforeMcuInit;
  _13 = ~Clock_Ip_bFircWasEnabledBeforeMcuInit.3_12;
  if (_13 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _14 = Clock_Ip_au8IrcoscCallbackIndex[4];
  _15 = (int) _14;
  _16 = Clock_Ip_axIntOscCallbacks[_15].Disable;
  _16 (5);

  <bb 13> :
  return;

}


